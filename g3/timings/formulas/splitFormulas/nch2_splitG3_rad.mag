




Deg3ADD_onlyFreq:= function(u2,u1,u0,v2,v1,v0,up2,up1,up0,vp2,vp1,vp0,ccs)
    
    t1 := u0 - up0;         
    t4 := u1 - up1;      
    t7 := u2 - up2;      
    t2 := -up0*t7;
    t5 := t1 - up1*t7;
    t8 := t4 - up2*t7;
    t6 := t2 - up1*t8;
    t9 := t5 - up2*t8;

    m1 := t5*t9 - t6*t8;
    m4 := t6*t7 - t4*t9;
    m7 := t4*t8 - t5*t7;
    d := t1*m1 + t2*m4 - up0*t8*m7; 

    if IsZero(d) then
        f:= ccs[1];
        R<x>:=Parent(f);
        Vn := - ComputeVpl(f,3);
        u := x^3 + u2*x^2 + u1*x + u0;
        v := -x^4 + v2*x^2 + v1*x + v0;
        w := ExactQuotient(f-v^2,u);
        up := x^3 + up2*x^2 + up1*x + up0;
        vp := -x^4 + vp2*x^2 + vp1*x + vp0;
        wp := ExactQuotient(f-vp^2,up);
        gen := Add_SPLIT_NEG(<u,v,w,0>,<up,vp,wp,0>,f,Vn,3);
        return <Coefficient(gen[1],3), Coefficient(gen[1],2), Coefficient(gen[1],1), Coefficient(gen[1],0), Coefficient(gen[2],2), Coefficient(gen[2],1), Coefficient(gen[2],0) , gen[4]>;
    end if;

    vt2:= vp2 - v2;
    vt1:= vp1 - v1; 
    vt0:= vp0 - v0;

    t0 := vt0*m1;
    t1 := vt1*m4;
    t2 := vt2*m7;
    t3 := (m4 + m7)*(vt1 + vt2) - t2 - t1 - up2*t2;
    t4 := up1*t2;
    t5 := t4 - t1;
    sp0 := t0 - up0*t3;
    sp1 := (m1 + m4)*(vt0 + vt1) - sp0 - (up0 + up1)*(t2 + t3) + t5;
    sp2 := (m1 + m7)*(vt0 + vt2) - t0 - t2 - t5 - up2*t3;
    t10 := sp2^2;                          
    t11 := sp2*d;                          
    w0  := up2*sp2 - sp1;                  
    w1  := t10*up1 - sp0*sp2 - sp1*w0;     
    
    if IsZero(w1) or IsZero(t11) then
        f:= ccs[1];
        R<x>:=Parent(f);
        Vn := - ComputeVpl(f,3);
        u := x^3 + u2*x^2 + u1*x + u0;
        v := -x^4 + v2*x^2 + v1*x + v0;
        w := ExactQuotient(f-v^2,u);
        up := x^3 + up2*x^2 + up1*x + up0;
        vp := -x^4 + vp2*x^2 + vp1*x + vp0;
        wp := ExactQuotient(f-vp^2,up);
        gen := Add_SPLIT_NEG(<u,v,w,0>,<up,vp,wp,0>,f,Vn,3);
        return <Coefficient(gen[1],3), Coefficient(gen[1],2), Coefficient(gen[1],1), Coefficient(gen[1],0), Coefficient(gen[2],2), Coefficient(gen[2],1), Coefficient(gen[2],0) , gen[4]>;
    end if;

    w2  := t10*up0 - sp0*w0;
    w3   := (w1*t11)^-1;  
    w4   := w3*w1;        
    w5   := w4*d;         
    qr11 := w3*t11^2;     
    rq11 := w1*w4;        
    qq01 := w0*w5;        
    rq01 := w2*w4;        
    qr01 := qq01*qr11;    
    rr01 := rq01*qr11;    
    w6   := w1*w5^2;      
    r1 := w6 + w6;

    t0 := v2 - ccs[2][3];
    t1 := v1 - ccs[2][2] - u2*t0;

    M21p := -qr11*t0 + rr01 - up2;
    M20p := -(vp2 + v2)/2 - qr11*t1 - qr01*t0 - up1 - up2*M21p;

    upp2 := rq11/2 + M21p + qq01;
    upp1 := (vt2 + rq11*t7 + rq01 + rq01)/2 + M20p + qq01*M21p;
    upp0 := (rr01*vt2 + rq01*(t7 + rr01))/2 + qq01*M20p;

    t3 := rq11 - upp2 - upp2;
    t2 := rq11*(u2 - qq01) + rq01 - r1;
    t1 := rq11*u1 + rq01*u2 - r1*upp2 - qq01*t2;

    vpp2 := t2 - v2 - upp1 - upp1 - upp2*t3;
    vpp1 := t1 - v1 - upp0 - upp0 - upp1*t3;
    vpp0 := -v0 + rq11*u0 + rq01*u1 - r1*upp1 - qq01*t1 - upp0*t3;

    
    return < 1,upp2,upp1,upp0,vpp2,vpp1,vpp0,0>; 
end function;


ADD_onlyFreq:= function(d1,d2,ccs)
    if IsOne(d1[1]) and IsOne(d2[1]) then 
        return Deg3ADD_onlyFreq(d1[2],d1[3],d1[4],d1[5],d1[6],d1[7],d2[2],d2[3],d2[4],d2[5],d2[6],d2[7],ccs); 
    else
        f := ccs[1];
        R<x>:= Parent(f);
        Vn := - ComputeVpl(f,3);
        u := d1[1]*x^3 + d1[2]*x^2 + d1[3]*x + d1[4];
        v := -x^4 + d1[5]*x^2 + d1[6]*x + d1[7];
        w := ExactQuotient(f-v^2,u);
        up := d2[1]*x^3 + d2[2]*x^2 + d2[3]*x + d2[4];
        vp := -x^4 + d2[5]*x^2 + d2[6]*x + d2[7];
        vp := Vn - (Vn - vp) mod up;
        wp := ExactQuotient(f-vp^2,up);
        gen := Add_SPLIT_NEG(<u,v,w,d1[8]>,<up,vp,wp,d2[8]>,f,Vn,3);
        return <Coefficient(gen[1],3), Coefficient(gen[1],2), Coefficient(gen[1],1), Coefficient(gen[1],0), Coefficient(gen[2],2), Coefficient(gen[2],1), Coefficient(gen[2],0) , gen[4]>;
    end if;
end function;



Deg3DBL_onlyFreq:= function(u2,u1,u0,v2,v1,v0,ccs)

    T2 := u2 + u2;
    T1 := u1 + u1;
    T0 := u0 + u0;    
    vh0 := v0 + v0;
    vh1 := v1 + v1;
    vh2 := v2 + v2;
    t1 := vh0 - u0*T2;
    t4 := vh1 + T0 - u1*T2;
    t7 := vh2 + T1 - u2*T2;
    t2 := -u0*t7;
    t5 := t1 - u1*t7;
    t8 := t4 - u2*t7;
    t3 := -u0*t8;
    t6 := t2 - u1*t8;
    t9 := t5 - u2*t8;

    m1 := t5*t9 - t6*t8;
    m4 := t6*t7 - t4*t9;
    m7 := t4*t8 - t5*t7;
    d := t1*m1 + t2*m4 + t3*m7; 

    if IsZero(d) then
        f:= ccs[1];
        R<x>:=Parent(f);
        Vn := - ComputeVpl(f,3);
        u := x^3 + u2*x^2 + u1*x + u0;
        v := -x^4 + v2*x^2 + v1*x + v0;
        w := ExactQuotient(f-v^2,u);
        gen := Double_SPLIT_NEG(<u,v,w,0>,f,Vn,3);
        return <Coefficient(gen[1],3), Coefficient(gen[1],2), Coefficient(gen[1],1), Coefficient(gen[1],0), Coefficient(gen[2],2), Coefficient(gen[2],1), Coefficient(gen[2],0) , gen[4]>;
    end if;

    t0  := v0 - ccs[2][1];
    t1  := v1 - ccs[2][2];
    T4  := v2 - ccs[2][3];
    t10 := T2*T4;
    k2  := t1 + t1 - t10;
    kp2 := k2 - t10;
    t11 := T1*T4;
    k1  := t0 + t0 - v2^2 - ccs[2][4] - u2*k2 - t11;
    kp1 := k1 - t11;
    t12 := T0*T4;
    kp0  := Coefficient(ccs[1],3) - v2*vh1 - u1*k2 - u2*k1 - t12 - t12;


    t0 := kp0*m1;
    t1 := kp1*m4;
    t2 := kp2*m7;
    t3 := (m4 + m7)*(kp1 + kp2) - t2 - t1 - u2*t2;
    t4 := u1*t2;
    t5 := t4 - t1;
    sp0 := t0 - u0*t3;
    sp1 := (m1 + m4)*(kp0 + kp1) - sp0 - (u0 + u1)*(t2 + t3) + t5;
    sp2 := (m1 + m7)*(kp0 + kp2) - t0 - t2 - t5 - u2*t3;

    t6 := sp2^2;           
    t7 := sp2*d;                
    w0 := u2*sp2 - sp1;                  
    w1 := t6*u1 - sp0*sp2 - sp1*w0;     

    if IsZero(w1) or IsZero(t7) then    
        f:= ccs[1];
        R<x>:=Parent(f);
        Vn := - ComputeVpl(f,3);
        u := x^3 + u2*x^2 + u1*x + u0;
        v := -x^4 + v2*x^2 + v1*x + v0;
        w := ExactQuotient(f-v^2,u);
        gen := Double_SPLIT_NEG(<u,v,w,0>,f,Vn,3);
        return <Coefficient(gen[1],3), Coefficient(gen[1],2), Coefficient(gen[1],1), Coefficient(gen[1],0), Coefficient(gen[2],2), Coefficient(gen[2],1), Coefficient(gen[2],0) , gen[4]>;
    end if;

    w2   := t6*u0 - sp0*w0; 
    w3   := (w1*t7)^-1;     
    w4   := w3*w1;          
    w5   := w4*d;           
    w6   := w1*w5^2;        
    w6   := w6 + w6;        
    qr11 := w3*t7^2;        
    rq11 := w1*w4;          
    qq01 := w0*w5;          
    rq01 := w2*w4;          
    qr01 := qq01*qr11;      
    rr01 := rq01*qr11;      

    M21p := rr01 - qr11*T4   - u2;
    M20p := -v2 - qr11*k2/2 - qr01*T4 - u1 - u2*M21p;

    upp2 := rq11/2 + M21p + qq01;
    upp1 := rq01 + M20p + qq01*M21p;
    upp0 := (rq01*rr01)/2 + qq01*M20p;

    t3 := rq11 - upp2 - upp2;
    t2 := rq11*(u2 - qq01) + rq01 - w6;
    t1 := rq11*u1 + rq01*u2 - w6*upp2 - qq01*t2;
    vpp2 := -v2 + t2 - upp1 - upp1 - upp2*t3;
    vpp1 := -v1 + t1 - upp0 - upp0 - upp1*t3;
    vpp0 := -v0 + rq11*u0 + rq01*u1 - w6*upp1 - qq01*t1 - upp0*t3;

    
    return <1,upp2,upp1,upp0,vpp2,vpp1,vpp0,0>;
end function;


DBL_onlyFreq:= function(d,ccs)
    if IsOne(d[1]) then 
        return Deg3DBL_onlyFreq(d[2],d[3],d[4],d[5],d[6],d[7],ccs); 
    else
        f:= ccs[1];
        R<x>:=Parent(f);
        Vn := - ComputeVpl(f,3);
        u := d[1]*x^3 + d[2]*x^2 + d[3]*x + d[4];
        v := -x^4 + d[5]*x^2 + d[6]*x + d[7];
        w := ExactQuotient(f-v^2,u);
        gen := Double_SPLIT_NEG(<u,v,w,d[8]>,f,Vn,3);
        return <Coefficient(gen[1],3), Coefficient(gen[1],2), Coefficient(gen[1],1), Coefficient(gen[1],0), Coefficient(gen[2],2), Coefficient(gen[2],1), Coefficient(gen[2],0) , gen[4]>;
    end if;
end function;