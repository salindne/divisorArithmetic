ADD_DEBUG := true;
DBL_DEBUG := true;
UTL_DEBUG := false;
load "poly_balanced_arithmetic.mag";
load "g3Formulas/arb_splitG3_UTL.mag";
load "g3Formulas/arb_splitG3_DBL.mag";
load "g3Formulas/arb_splitG3_ADD.mag";
"";

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 9*x^8 + 6*x^7 + x^6 + x^4 + 10*x^3 + 3*x^2 + 3*x + 2;
h:= R! x^4 + 8*x^3 + 4*x + 4;
V:= R! 4*x^4 + 2*x^3 + 4*x^2 + 10*x + 8;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+10*x^2+7*x+4;
V1 := R! 6*x^4+x^3+9*x^2+9*x+5;
N1 := 0;
U2 := R! x^3+10*x^2+2*x+9;
V2 := R! 6*x^4+x^3+9*x^2+9*x+5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 6*x^7 + 5*x^5 + x^2 + 2*x + 5;
h:= R! 4*x^4 + 3*x^2 + 1;
V:= R! x^4 + x^3 + 4*x^2 + 6*x + 6;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+6*x^2+x;
V1 := R! 2*x^4+6*x^3+5*x^2+3;
N1 := 0;
U2 := R! x^3+6*x^2+5*x;
V2 := R! 2*x^4+6*x^3+x^2+4*x+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^5*x^7 + FF.1^3*x^6 + FF.1^5*x^5 + FF.1^4*x^4 + FF.1^3*x^3 + FF.1^4*x^2 + x + FF.1^2;
h:= R! x^4 + FF.1^2*x^3 + FF.1^2*x + FF.1^4;
V:= R! FF.1^5*x^4 + FF.1^4*x^3 + FF.1^2*x^2 + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^6*x^2+FF.1^6*x;
V1 := R! FF.1^4*x^4+FF.1*x^3+FF.1*x^2+FF.1^6;
N1 := 0;
U2 := R! x^3+FF.1^6*x^2+FF.1*x+FF.1^6;
V2 := R! FF.1^4*x^4+FF.1*x^3+FF.1*x^2+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + FF.1*x^7 + 2*x^5 + FF.1^6*x^2 + FF.1^3*x;
h:= R! FF.1^6*x^4 + x + 2;
V:= R! FF.1*x^4 + FF.1^2*x^3 + FF.1*x^2 + FF.1^2*x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+x^2+2*x;
V1 := R! x^4+FF.1^6*x^3+FF.1*x^2+FF.1^2*x+1;
N1 := 0;
U2 := R! x^3+x^2+2*x;
V2 := R! x^4+FF.1^6*x^3+FF.1^2*x^2+FF.1^7*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 4*x^7 + 7*x^6 + x^5 + 6*x^4 + 8*x^3 + 8*x^2 + 2*x + 8;
h:= R! 5*x^4 + 9*x^2 + 10;
V:= R! 8*x^4 + 7*x^3 + 4*x^2 + 8*x + 7;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+4*x^2+2*x+8;
V1 := R! 9*x^4+4*x^3+2*x^2+x+9;
N1 := 0;
U2 := R! x^3+4*x^2+2*x+8;
V2 := R! 9*x^4+4*x^3+6*x^2+7*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + FF.1^3*x^7 + FF.1^3*x^6 + FF.1^3*x^5 + FF.1^6*x^4 + 2*x^3 + FF.1^2*x^2 + FF.1^3*x + FF.1^2;
h:= R! FF.1^2*x^4 + FF.1^3*x^3 + x^2 + FF.1^7*x + 2;
V:= R! FF.1*x^4 + FF.1^6*x^3 + 2*x^2 + FF.1^7;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^2*x^2+FF.1^7*x+FF.1^7;
V1 := R! FF.1^7*x^4+FF.1^5*x^3+FF.1^7*x+FF.1^2;
N1 := 0;
U2 := R! x^3+FF.1^2*x^2+FF.1^7*x+FF.1^7;
V2 := R! FF.1^7*x^4+FF.1^5*x^3+FF.1^2*x^2+FF.1^6*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1*x^7 + FF.1*x^6 + FF.1*x^5 + FF.1*x^4 + FF.1^2*x^3 + FF.1^2*x + FF.1;
h:= R! FF.1^2*x^4 + x^3 + x^2 + FF.1*x + FF.1^2;
V:= R! FF.1*x^4 + FF.1*x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+FF.1^2*x^2+FF.1*x;
V1 := R! x^4+x^3+FF.1^2*x^2+FF.1^2*x+FF.1;
N1 := 0;
U2 := R! x^3+FF.1^2*x^2+FF.1*x;
V2 := R! x^4+x^3+FF.1*x+FF.1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + FF.1^6*x^7 + FF.1^4*x^6 + FF.1^2*x^5 + FF.1^2*x^4 + FF.1^5*x^3 + FF.1^2*x^2 + x + 1;
h:= R! FF.1^4*x^4 + FF.1^2*x^2 + FF.1^2*x + FF.1;
V:= R! FF.1^5*x^4 + FF.1^2*x^3 + FF.1^3*x^2 + FF.1^6*x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1*x+FF.1^5;
V1 := R! x^4+FF.1^2*x^3+FF.1^6*x^2+FF.1^4*x+1;
N1 := 0;
U2 := R! x^3+FF.1*x+FF.1^5;
V2 := R! x^4+FF.1^2*x^3+x^2+FF.1^6*x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 10*x^8 + 4*x^7 + 2*x^6 + 4*x^5 + x^4 + 3*x^2 + 7*x;
h:= R! 7*x^4 + 7*x^3 + 7*x^2 + 4*x + 5;
V:= R! 7*x^4 + x^3 + 9*x + 9;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+5*x^2+7*x+2;
V1 := R! 8*x^4+3*x^3+8*x^2+8*x+7;
N1 := 0;
U2 := R! x^3+5*x^2+5;
V2 := R! 8*x^4+3*x^3+8*x^2+8*x+7;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 10*x^7 + 9*x^6 + 7*x^5 + 8*x^4 + 4*x^3 + 7*x^2 + 5;
h:= R! x^4 + 9*x^3 + 5*x^2 + 7*x + 9;
V:= R! x^4 + 4*x^3 + 6*x^2 + 7*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+5*x^2+9*x+9;
V1 := R! 9*x^4+9*x^3+9*x^2+2*x+10;
N1 := 0;
U2 := R! x^3+5*x^2+2*x+3;
V2 := R! 9*x^4+9*x^3+x^2+7;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 3*x^7 + 6*x^6 + 3*x^5 + 3*x^4 + 5*x^3 + x^2 + 4*x;
h:= R! 5*x^4 + 3*x^3 + 3*x^2 + 2;
V:= R! 3*x^4 + 2*x^3 + 2*x^2 + x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+x^2+5*x;
V1 := R! 6*x^4+2*x^3+6*x^2+3*x+5;
N1 := 0;
U2 := R! x;
V2 := R! 6*x^4+2*x^3+2*x^2+6*x+5;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + x^7 + 4*x^6 + 3*x^5 + 2*x^4 + 2*x + 1;
h:= R! 3*x^4 + 3*x^3 + 3*x + 3;
V:= R! 3*x^4 + 3*x^3 + 4*x^2 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+4*x+3;
V1 := R! 4*x^4+4*x^3+x^2+4*x+1;
N1 := 0;
U2 := R! x^2+4*x+3;
V2 := R! 4*x^4+4*x^3+x^2+x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + x^6 + 2*x^4 + 2*x^3 + x^2;
h:= R! 2*x^3 + x^2 + x + 1;
V:= R! x^4 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2*x;
V1 := R! 2*x^4+x^3+2*x^2+2*x+2;
N1 := 0;
U2 := R! x^2+2*x;
V2 := R! 2*x^4+x^3+2*x^2+x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1^3*x^7 + FF.1^2*x^6 + FF.1^2*x^5 + 2*x^4 + 2*x^3 + FF.1^7*x^2 + 2*x + 1;
h:= R! x^4 + x^3 + FF.1*x;
V:= R! FF.1^3*x^4 + FF.1*x^2 + FF.1^3*x;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^2+FF.1^7*x+FF.1^2;
V1 := R! FF.1^2*x^4+2*x^3+FF.1^5*x^2+2*x;
N1 := 0;
U2 := R! x^2+FF.1^3*x+FF.1^3;
V2 := R! FF.1^2*x^4+2*x^3+FF.1^5*x^2+2*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + 2*x^6 + x^5 + x^4 + x^2 + x;
h:= R! 2*x^3 + x^2 + 1;
V:= R! x^4 + 2*x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2;
V1 := R! 2*x^4+x^3+2*x;
N1 := 0;
U2 := R! x^2+x;
V2 := R! 2*x^4+x^3+2*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + 2*x^4 + 2;
h:= R! x^3 + x^2 + 2*x + 1;
V:= R! x^4 + x^2 + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2*x;
V1 := R! 2*x^4+2*x^3+x^2+1;
N1 := 0;
U2 := R! x^2+2*x;
V2 := R! 2*x^4+2*x^3+x^2+x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 10*x^8 + 7*x^7 + 7*x^6 + 4*x^5 + x^4 + 2*x^3 + 6*x + 9;
h:= R! 3*x^4 + 8*x^3 + 8*x^2 + 7*x;
V:= R! 2*x^4 + 5*x^3 + 2*x^2 + 5*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+4*x+1;
V1 := R! 6*x^4+9*x^3+x^2+7*x+8;
N1 := 1;
U2 := R! x^2+4*x;
V2 := R! 6*x^4+9*x^3+x^2+x+8;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + 2*x^6 + x^5 + x^4 + 2*x^3 + 2*x^2 + 2*x;
h:= R! 2*x^3 + x^2 + x + 2;
V:= R! x^4 + 2*x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2*x;
V1 := R! 2*x^4+x^3+x+1;
N1 := 0;
U2 := R! x^2+2*x;
V2 := R! 2*x^4+x^3+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 4*x^7 + x^6 + 2*x^4 + 4*x^3 + 3*x^2 + 2*x + 3;
h:= R! 2*x^4 + 4*x^3 + x + 4;
V:= R! x^4 + 4*x^2 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+4;
V1 := R! 2*x^4+x^3+x^2+3*x+4;
N1 := 0;
U2 := R! x^2+4;
V2 := R! 2*x^4+x^3+x^2+4*x+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 6*x^7 + x^6 + 3*x^5 + 6*x^4 + 2*x^3 + 4*x^2 + 2*x + 5;
h:= R! 2*x^4 + 6*x^3 + 6*x^2 + 6*x + 1;
V:= R! 2*x^4 + 6*x^3 + 6*x^2 + 6*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+x;
V1 := R! 3*x^4+2*x^3+2*x^2+2*x+3;
N1 := 0;
U2 := R! x^3+6*x^2+5*x+2;
V2 := R! 3*x^4+2*x^3+3*x^2+2*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + FF.1*x^7 + FF.1^2*x^6 + FF.1^2*x^5 + FF.1^2*x^4 + 2*x^3 + FF.1^6*x^2 + FF.1^5*x;
h:= R! FF.1^2*x^4 + FF.1^3*x^2 + x + FF.1;
V:= R! FF.1*x^4 + FF.1*x^3 + x^2 + FF.1^7*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^2*x^2+FF.1^6*x+1;
V1 := R! FF.1^7*x^4+FF.1^5*x^3+FF.1^2*x^2+FF.1^6;
N1 := 0;
U2 := R! x^2+2;
V2 := R! FF.1^7*x^4+FF.1^5*x^3+FF.1^2*x^2+FF.1^5*x+FF.1^7;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 8*x^8 + 2*x^7 + 2*x^6 + 7*x^5 + 3*x^4 + 3*x^3 + 4*x^2 + 8*x + 8;
h:= R! 2*x^4 + 7*x^3 + 4*x^2 + 10*x + 6;
V:= R! 2*x^4 + 9*x^3 + 8*x^2 + 8*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+4*x+3;
V1 := R! 7*x^4+6*x^3+10*x^2+10*x+2;
N1 := 0;
U2 := R! x^3+x^2+7*x+2;
V2 := R! 7*x^4+6*x^3+7*x^2+5*x+6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^5*x^7 + FF.1*x^6 + FF.1^2*x^4 + FF.1^6*x^2 + FF.1^5*x + 1;
h:= R! x^4 + x^3 + FF.1;
V:= R! FF.1^5*x^4 + FF.1*x^2 + FF.1*x + FF.1^5;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^2*x^2+FF.1^3*x+FF.1^3;
V1 := R! FF.1^4*x^4+x^3+FF.1^2*x^2+FF.1^5*x+FF.1^2;
N1 := 0;
U2 := R! x^2+FF.1^3*x+1;
V2 := R! FF.1^4*x^4+x^3+FF.1*x^2+FF.1^3*x+FF.1^4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 2*x^7 + 4*x^6 + 4*x^3 + 4*x + 1;
h:= R! 2*x^4 + 2*x^3 + x^2 + 3*x + 1;
V:= R! x^4 + 2*x^2 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+3*x;
V1 := R! 2*x^4+3*x^3+2*x^2+x+2;
N1 := 0;
U2 := R! x^2+2*x;
V2 := R! 2*x^4+3*x^3+2*x^2+3*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 6*x^8 + 5*x^7 + 5*x^6 + 2*x^5 + 4*x^4 + 2*x^3 + x^2 + 5*x;
h:= R! 6*x^4 + 4*x^3 + 4*x + 6;
V:= R! 3*x^4 + x^2 + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+4*x;
V1 := R! 5*x^4+3*x^3+6*x^2+1;
N1 := 0;
U2 := R! x^2+2*x+6;
V2 := R! 5*x^4+3*x^3+6*x^2+x+5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^7*x^8 + FF.1^3*x^7 + FF.1^5*x^6 + FF.1^6*x^5 + FF.1^3*x^4 + FF.1^2*x^3 + FF.1^2*x^2 + FF.1^7*x;
h:= R! FF.1^2*x^4 + FF.1^7*x^3 + 2*x + FF.1;
V:= R! FF.1^3*x^4 + 2*x^3 + FF.1^3*x^2 + FF.1^5*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^5*x^2+FF.1^7;
V1 := R! x^4+FF.1^6*x^3+FF.1^6*x^2+FF.1^2*x+FF.1^5;
N1 := 0;
U2 := R! x^2+FF.1^5*x;
V2 := R! x^4+FF.1^6*x^3+FF.1^7*x^2+FF.1^5*x+FF.1^5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 6*x^6 + 4*x^5 + 9*x^4 + 5*x^3 + 4*x^2 + 3*x + 6;
h:= R! x^4 + 10*x^3 + 9*x^2 + 4*x;
V:= R! 3*x^4 + 2*x^3 + 3*x^2 + 6*x + 5;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+6*x^2+2*x+1;
V1 := R! 7*x^4+10*x^3+3*x^2+6*x+7;
N1 := 0;
U2 := R! x^3+6*x^2+2*x+1;
V2 := R! 7*x^4+10*x^3+10*x^2+6*x+10;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1*x^7 + x^6 + FF.1^2*x^5 + x^4 + x^3 + FF.1^2*x^2;
h:= R! x^4 + FF.1^2*x^2 + FF.1^2*x + FF.1;
V:= R! FF.1^2*x^4 + FF.1*x^3 + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+FF.1^2*x^2+FF.1*x;
V1 := R! FF.1*x^4+FF.1*x^3+FF.1*x^2+FF.1*x+FF.1;
N1 := 0;
U2 := R! x^3+FF.1*x^2+FF.1^2*x;
V2 := R! FF.1*x^4+FF.1*x^3+x^2+x+FF.1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^6*x^8 + x^7 + x^6 + FF.1*x^3 + FF.1^3*x + FF.1^2;
h:= R! FF.1^6*x^4 + FF.1*x^3 + FF.1^4*x^2 + FF.1^4*x + FF.1^4;
V:= R! FF.1^5*x^4 + FF.1^3*x^3 + FF.1^5*x^2 + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^6*x^2+FF.1^2*x;
V1 := R! FF.1*x^4+x^3+FF.1^2*x^2+FF.1*x+FF.1^6;
N1 := 0;
U2 := R! x^3+x^2+FF.1*x;
V2 := R! FF.1*x^4+x^3+FF.1^5*x^2+FF.1^6*x+FF.1^6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 10*x^7 + 2*x^6 + 8*x^5 + 5*x^4 + 10*x^3 + 8*x^2 + 9*x + 4;
h:= R! 10*x^4 + 4*x^3 + x^2 + 4*x + 2;
V:= R! 2*x^4 + 8*x^3 + x^2 + 9*x + 6;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+6*x^2+8*x;
V1 := R! 10*x^4+10*x^3+3*x+6;
N1 := 0;
U2 := R! x^3+7*x^2+10*x;
V2 := R! 10*x^4+10*x^3+4*x^2+6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1*x^6 + FF.1^2*x^5 + x^4 + x^3 + FF.1*x + FF.1^2;
h:= R! FF.1^2*x^4 + x^3 + FF.1^2*x^2 + FF.1;
V:= R! FF.1*x^4 + FF.1^2*x^3 + FF.1^2*x^2 + FF.1^2*x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+FF.1^2*x^2+FF.1*x;
V1 := R! x^4+FF.1*x^3+FF.1^2*x^2+x+FF.1^2;
N1 := 0;
U2 := R! x^3+FF.1*x^2+FF.1^2*x;
V2 := R! x^4+FF.1*x^3+FF.1^2*x^2+x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1^3*x^7 + FF.1*x^6 + FF.1^5*x^5 + FF.1^2*x^4 + FF.1^6*x^3 + x^2;
h:= R! FF.1^6*x^4 + FF.1^3*x^3 + x^2 + FF.1^6*x + FF.1;
V:= R! FF.1^4*x^4 + FF.1^2*x^3 + x^2 + FF.1^4*x;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^6*x^2+FF.1^6*x;
V1 := R! FF.1^3*x^4+FF.1^5*x^3+x^2+FF.1^3*x+FF.1;
N1 := 0;
U2 := R! x^3+FF.1^4*x^2+FF.1^5*x;
V2 := R! FF.1^3*x^4+FF.1^5*x^3+x^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^3*x^8 + x^7 + FF.1^2*x^6 + FF.1*x^5 + FF.1^3*x^4 + FF.1^4*x^3 + FF.1^6*x^2 + x + FF.1^3;
h:= R! FF.1*x^4 + FF.1^6*x^3 + FF.1*x^2 + FF.1^3*x + 1;
V:= R! FF.1^3*x^4 + FF.1^5*x^3 + FF.1^4*x^2 + FF.1^6*x;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1*x^2+FF.1*x+1;
V1 := R! x^4+FF.1*x^3+FF.1*x^2+FF.1^5*x+FF.1^5;
N1 := 0;
U2 := R! x^3+FF.1^6*x^2+FF.1^4*x+FF.1;
V2 := R! x^4+FF.1*x^3+x^2+FF.1*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 5*x^7 + 6*x^6 + 2*x^5 + 4*x^4 + 5*x^3 + 3*x + 6;
h:= R! 3*x^4 + 3*x^3 + x^2 + 5*x + 5;
V:= R! 5*x^4 + 3*x^3 + 3*x^2 + 4*x;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+4*x^2+3*x;
V1 := R! 6*x^4+x^3+3*x^2+5*x+1;
N1 := 0;
U2 := R! x^3+x^2+5*x+5;
V2 := R! 6*x^4+x^3+5*x^2+x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 5*x^7 + 4*x^6 + x^5 + 3*x^4 + x^3 + 6*x^2 + 6*x + 5;
h:= R! 5*x^3 + x^2 + 5*x + 4;
V:= R! x^4 + 5*x^2 + 3*x + 5;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+x^2+x;
V1 := R! 6*x^4+2*x^3+6*x^2+2;
N1 := 0;
U2 := R! x^3+3*x^2+3*x+2;
V2 := R! 6*x^4+2*x^3+5*x^2+5*x+5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1*x^7 + 2*x^6 + FF.1*x^5 + FF.1^3*x^4 + 2*x^2 + 2*x + FF.1^7;
h:= R! 2*x^4 + FF.1^6*x^3 + FF.1^3*x^2 + FF.1*x + FF.1;
V:= R! FF.1^3*x^4 + FF.1^7*x^2 + FF.1*x + FF.1^7;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^5*x^2+FF.1^2*x+FF.1^7;
V1 := R! FF.1*x^4+FF.1^2*x^3+2*x^2+FF.1^5*x;
N1 := 0;
U2 := R! x^3+x+2;
V2 := R! FF.1*x^4+FF.1^2*x^3+2*x^2+FF.1^5*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 2*x^7 + FF.1^6*x^6 + FF.1^2*x^5 + FF.1^7*x^4 + FF.1^5*x^3 + FF.1^7*x^2 + 2*x + FF.1^2;
h:= R! FF.1^7*x^3 + FF.1*x^2 + FF.1^6*x + FF.1^6;
V:= R! FF.1^2*x^4 + x^3 + FF.1^5*x^2 + FF.1^5*x + FF.1^3;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^5*x^2+2*x+FF.1;
V1 := R! FF.1^6*x^4+FF.1^5*x^3+FF.1^5*x^2+2*x+FF.1^5;
N1 := 0;
U2 := R! x^3+FF.1^7*x^2+2*x+FF.1^3;
V2 := R! FF.1^6*x^4+FF.1^5*x^3+FF.1^5*x^2+2*x+FF.1^5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^3*x^8 + FF.1*x^7 + FF.1^4*x^6 + FF.1^3*x^5 + FF.1^6*x^4 + FF.1^3*x^3 + FF.1^6*x^2 + FF.1^3*x + FF.1^5;
h:= R! FF.1*x^4 + FF.1^5*x^3 + FF.1*x^2 + FF.1^6*x + FF.1^6;
V:= R! FF.1^3*x^4 + FF.1^4*x + FF.1^5;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+x+FF.1^4;
V1 := R! x^4+FF.1^5*x^3+FF.1*x^2+FF.1^4*x;
N1 := 0;
U2 := R! x^3+FF.1^4*x^2+x+FF.1^2;
V2 := R! x^4+FF.1^5*x^3+FF.1^6*x^2+x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + 2*x^6 + x^5 + x^4 + 2*x^3 + 2*x^2 + 1;
h:= R! x + 2;
V:= R! x^4 + 2*x^3 + 2*x^2 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! 1;
V1 := R! 2*x^4+x^3+x^2+1;
N1 := 0;
U2 := R! x+1;
V2 := R! 2*x^4+x^3+x^2+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1^2*x^7 + x^5 + FF.1*x^4 + x^3 + FF.1^2*x^2 + 1;
h:= R! x^4 + FF.1^2*x^3 + FF.1^2*x + FF.1^2;
V:= R! FF.1^2*x^4 + x^3 + FF.1*x^2 + FF.1*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! 1;
V1 := R! FF.1*x^4+FF.1*x^3+FF.1*x^2+x+FF.1;
N1 := 0;
U2 := R! x+FF.1;
V2 := R! FF.1*x^4+FF.1*x^3+FF.1*x^2+x+FF.1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^6 + 2*x^5 + 2*x^4 + 2*x^2 + 2*x + 2;
h:= R! x^3 + x + 1;
V:= R! x^4 + x^3 + x^2 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! 1;
V1 := R! 2*x^4+x^3+2*x^2+1;
N1 := 0;
U2 := R! x+2;
V2 := R! 2*x^4+x^3+2*x^2+1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1*x^7 + x^6 + FF.1^2*x^5 + FF.1^2*x^4 + FF.1*x^3 + FF.1*x^2 + FF.1^2*x + FF.1^2;
h:= R! FF.1*x^4 + FF.1^2*x^3 + FF.1*x^2 + FF.1^2*x + 1;
V:= R! FF.1^2*x^4 + FF.1^2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! 1;
V1 := R! x^4+FF.1^2*x^3+FF.1*x^2;
N1 := 1;
U2 := R! x+1;
V2 := R! x^4+FF.1^2*x^3+FF.1*x^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + 2*x^5 + x^2 + x + 2;
h:= R! 2*x^3 + x;
V:= R! x^4 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! 1;
V1 := R! 2*x^4+x^3+2;
N1 := 0;
U2 := R! x+2;
V2 := R! 2*x^4+x^3;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + 2*x^5 + x^4 + 2*x^3 + x^2 + 1;
h:= R! x^2 + 2*x;
V:= R! x^4 + x^3 + 2*x^2 + 2*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! 1;
V1 := R! 2*x^4+2*x^3+2*x+1;
N1 := 1;
U2 := R! x+2;
V2 := R! 2*x^4+2*x^3+2*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + 2*x^6 + x^5 + x^4 + 2*x^3 + 2*x^2 + 1;
h:= R! x + 2;
V:= R! x^4 + 2*x^3 + 2*x^2 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! 1;
V1 := R! 2*x^4+x^3+x^2+1;
N1 := 3;
U2 := R! x+1;
V2 := R! 2*x^4+x^3+x^2;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 4*x^7 + x^6 + 2*x^5 + 3*x^4 + x^2 + 4*x + 1;
h:= R! x^4 + 3*x^3 + 4*x^2 + x;
V:= R! x^4 + 2*x^3 + 4*x^2 + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! 1;
V1 := R! 3*x^4+2*x^2+4*x+2;
N1 := 3;
U2 := R! x+2;
V2 := R! 3*x^4+2*x^2+4*x+1;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1*x^7 + FF.1^2*x^6 + x^5 + x^4 + x^2 + FF.1*x + FF.1^2;
h:= R! FF.1*x^4 + FF.1^2*x^3 + FF.1^2*x^2 + x + 1;
V:= R! FF.1^2*x^4 + FF.1^2*x^2 + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! 1;
V1 := R! x^4+FF.1^2*x^3+x;
N1 := 3;
U2 := R! x+FF.1;
V2 := R! x^4+FF.1^2*x^3+x+FF.1^2;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1*x^6 + FF.1*x^5 + x^4 + x^3 + FF.1^2*x^2 + FF.1;
h:= R! FF.1^2*x^4 + FF.1*x^3 + x^2 + FF.1^2*x;
V:= R! FF.1*x^4 + x^3 + x^2 + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! 1;
V1 := R! x^4+FF.1^2*x^3+FF.1^2*x+FF.1^2;
N1 := 3;
U2 := R! x;
V2 := R! x^4+FF.1^2*x^3+FF.1^2*x+FF.1^2;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 4*x^7 + 4*x^5 + x^4 + 4*x^3 + 6*x^2 + 6*x;
h:= R! 4*x^4 + 6*x^2 + x + 1;
V:= R! x^4 + 3*x^3 + x^2 + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! 1;
V1 := R! 2*x^4+4*x^3+6*x+3;
N1 := 0;
U2 := R! x^2+3*x;
V2 := R! 2*x^4+4*x^3+6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 4*x^6 + 2*x^4 + 4*x^2 + 1;
h:= R! 2*x^4 + 4*x^3 + 2*x^2 + 4*x + 3;
V:= R! x^4 + 4*x^3 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+x+3;
V1 := R! 2*x^4+2*x^3+3*x^2+1;
N1 := 0;
U2 := R! x^2+1;
V2 := R! 2*x^4+2*x^3+3*x^2+3*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^4*x^8 + FF.1^5*x^6 + FF.1^6*x^5 + FF.1^5*x^4 + x^3 + x^2 + FF.1*x + FF.1^3;
h:= R! x^4 + FF.1*x^2 + FF.1^6*x + FF.1^6;
V:= R! FF.1^3*x^4 + x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^2*x^2+x+FF.1;
V1 := R! FF.1*x^4+FF.1*x^2+FF.1*x+FF.1^5;
N1 := 0;
U2 := R! x+FF.1^4;
V2 := R! FF.1*x^4+FF.1^3*x^2+FF.1^2*x+1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^3*x^8 + FF.1^2*x^7 + FF.1^7*x^6 + FF.1^7*x^5 + FF.1^2*x^4 + FF.1^5*x^3 + x^2 + FF.1^2*x + FF.1^2;
h:= R! FF.1^5*x^4 + 2*x^3 + 2*x^2 + 2*x + FF.1^5;
V:= R! x^4 + FF.1*x^3 + FF.1*x^2 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^5*x^2+FF.1^3*x+FF.1^2;
V1 := R! FF.1^7*x^4+FF.1^3*x^3+FF.1^3*x^2+FF.1^2*x+FF.1^2;
N1 := 0;
U2 := R! x+1;
V2 := R! FF.1^7*x^4+FF.1^3*x^3+FF.1^3*x^2+2*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1^3*x^7 + FF.1*x^6 + FF.1^4*x^5 + FF.1^3*x^3 + FF.1*x^2 + FF.1^3*x + FF.1;
h:= R! FF.1^2*x^4 + x^3 + FF.1*x^2 + FF.1^4*x + 1;
V:= R! FF.1^5*x^4 + x^3 + FF.1^3*x^2 + FF.1*x;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x;
V1 := R! FF.1^3*x^4+x^2+FF.1^2*x+FF.1^6;
N1 := 0;
U2 := R! x^3+FF.1^6*x^2+FF.1^3*x+FF.1^5;
V2 := R! FF.1^3*x^4+x^2+FF.1^2*x+FF.1^6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + 2*x^5 + 2*x^3 + x^2 + 2*x + 2;
h:= R! x^2 + 1;
V:= R! x^4 + 2*x^3 + 2*x^2 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+1;
V1 := R! 2*x^4+x^3+x+1;
N1 := 0;
U2 := R! x^3+2*x;
V2 := R! 2*x^4+x^3+x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 2*x^7 + 4*x^6 + 4*x^3 + 4*x + 1;
h:= R! 2*x^4 + 2*x^3 + x^2 + 3*x + 1;
V:= R! x^4 + 2*x^2 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+x;
V1 := R! 2*x^4+3*x^3+x^2+3*x+2;
N1 := 0;
U2 := R! x;
V2 := R! 2*x^4+3*x^3+2*x^2+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + FF.1*x^7 + FF.1*x^6 + FF.1^4*x^5 + x^4 + FF.1^5*x^3 + FF.1^6*x^2 + FF.1*x + FF.1^5;
h:= R! FF.1^4*x^4 + FF.1^2*x^3 + x + FF.1;
V:= R! FF.1^5*x^4 + FF.1^6*x^3 + FF.1*x^2 + FF.1^4*x;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^4*x+FF.1^6;
V1 := R! x^4+x^3+FF.1^2*x^2+FF.1*x+FF.1^2;
N1 := 0;
U2 := R! x+FF.1^3;
V2 := R! x^4+x^3+FF.1*x^2+FF.1^5*x+FF.1^3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + x^5 + x^2 + FF.1*x + 1;
h:= R! FF.1*x^4 + FF.1*x + 1;
V:= R! FF.1^2*x^4 + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x;
V1 := R! x^4+FF.1*x+FF.1^2;
N1 := 0;
U2 := R! x^3+x^2+x;
V2 := R! x^4+FF.1^2*x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + FF.1^6*x^7 + FF.1^6*x^6 + FF.1*x^5 + 2*x^4 + FF.1^3*x^3 + FF.1^3*x + FF.1^3;
h:= R! FF.1^6*x^4 + FF.1^2*x^3 + FF.1^3*x^2 + FF.1^5*x + FF.1;
V:= R! FF.1^3*x^4 + 2*x^3 + FF.1*x^2 + 2*x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^2*x^2+2*x+FF.1^6;
V1 := R! FF.1^5*x^4+FF.1^5*x^3+FF.1^5*x^2+FF.1^7*x+FF.1^6;
N1 := 0;
U2 := R! x+2;
V2 := R! FF.1^5*x^4+FF.1^5*x^3+2*x^2+FF.1^2*x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 8*x^7 + 4*x^6 + 2*x^5 + 6*x^3 + 6*x^2 + 7*x + 1;
h:= R! 6*x^3 + 9*x^2;
V:= R! x^4 + x^3 + 5*x^2 + 4*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+8*x^2+7*x;
V1 := R! 10*x^4+4*x^3+3*x^2+8*x+10;
N1 := 0;
U2 := R! x+1;
V2 := R! 10*x^4+4*x^3+8*x^2+7*x+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^3*x^8 + FF.1^2*x^7 + FF.1^2*x^6 + FF.1^4*x^5 + FF.1^5*x^4 + FF.1^3*x^2 + FF.1^3*x + FF.1^2;
h:= R! FF.1^4*x^4 + FF.1^4*x^3 + FF.1^2*x^2 + FF.1*x + FF.1^6;
V:= R! FF.1^2*x^4 + FF.1^3*x^3 + x^2 + FF.1^5*x + FF.1^4;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^2*x^2+FF.1^5*x;
V1 := R! FF.1*x^4+FF.1^6*x^3+x+FF.1^2;
N1 := 0;
U2 := R! x+FF.1;
V2 := R! FF.1*x^4+FF.1^6*x^3+FF.1^6*x^2+FF.1^6*x+FF.1^6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 2*x^6 + 2*x^5 + 2*x^4 + 4*x^3 + 4*x + 3;
h:= R! 3*x^4 + 3*x^3 + 3*x^2 + 2*x + 3;
V:= R! 3*x^4 + 4*x^3 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x+4;
V1 := R! 4*x^4+3*x^3+2*x^2+2*x+4;
N1 := 0;
U2 := R! x^3+4*x;
V2 := R! 4*x^4+3*x^3+2*x^2+2*x+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 4*x^7 + 6*x^6 + 2*x^5 + 3*x^4 + 9*x^3 + 8*x^2 + 7;
h:= R! x^4 + 9*x^3 + 3*x + 1;
V:= R! x^4 + 2*x^3 + 2*x^2 + 2*x + 7;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+9*x+3;
V1 := R! 9*x^4+9*x^2+4;
N1 := 0;
U2 := R! x^3+x^2+8*x+9;
V2 := R! 9*x^4+10*x^2+9*x+7;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 9*x^7 + x^6 + 6*x^5 + 9*x^4 + x^3 + 5*x^2 + 5*x + 3;
h:= R! 7*x^4 + x^3 + 6*x + 3;
V:= R! 5*x^4 + 8*x^3 + x^2 + 6*x + 5;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+10*x^2+6*x+5;
V1 := R! 10*x^4+2*x^3+4*x^2+9*x+8;
N1 := 0;
U2 := R! x^2+6;
V2 := R! 10*x^4+2*x^3+10*x^2+9*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + x^6 + x^5 + 2*x^4 + 2*x^3 + x + 2;
h:= R! x^2;
V:= R! x^4 + x^3 + x^2 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! 1;
V1 := R! 2*x^4+2*x^3+x^2+x+2;
N1 := 0;
U2 := R! 1;
V2 := R! 2*x^4+2*x^3+x^2+x+2;
N2 := 3;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + x^7 + FF.1^2*x^5 + FF.1*x^4 + x^2 + FF.1*x + FF.1;
h:= R! FF.1*x^4 + FF.1*x^3 + x^2 + FF.1*x + FF.1;
V:= R! FF.1^2*x^4 + FF.1*x^2 + FF.1^2*x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! 1;
V1 := R! x^4+FF.1*x^3+FF.1^2*x^2+x;
N1 := 0;
U2 := R! 1;
V2 := R! x^4+FF.1*x^3+FF.1^2*x^2+x;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1^3*x^7 + FF.1*x^6 + FF.1^2*x^5 + x^4 + FF.1*x^3 + FF.1^5*x^2 + FF.1^2;
h:= R! FF.1^3*x^4 + FF.1^5*x^2 + FF.1^3*x + FF.1^2;
V:= R! FF.1*x^4 + x^3 + FF.1*x^2 + FF.1^3*x;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^2*x^2+x+FF.1;
V1 := R! x^4+x^3+FF.1^3*x^2+FF.1*x+FF.1;
N1 := 0;
U2 := R! x^2+x+FF.1^2;
V2 := R! x^4+x^3+FF.1^6*x^2+FF.1^2*x+FF.1^5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1^2*x^7 + FF.1*x^5 + FF.1*x^4 + FF.1^2*x^2 + FF.1*x + FF.1;
h:= R! FF.1^2*x^4 + x^3 + FF.1*x^2 + x + FF.1;
V:= R! FF.1*x^4 + FF.1*x^3 + FF.1^2*x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+1;
V1 := R! x^4+FF.1^2*x^3+FF.1*x^2+FF.1*x;
N1 := 0;
U2 := R! x^2+FF.1^2*x+FF.1;
V2 := R! x^4+FF.1^2*x^3+x^2+x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + x^7 + FF.1^3*x^6 + x^5 + FF.1^4*x^4 + FF.1^4*x^3 + x^2 + FF.1^2*x + FF.1^6;
h:= R! FF.1^2*x^4 + FF.1^5*x^3 + FF.1^6*x + FF.1;
V:= R! FF.1^4*x^4 + FF.1^4*x^3 + FF.1^4*x^2 + FF.1^2*x + FF.1^5;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^3*x^2+x;
V1 := R! FF.1*x^4+x^3+FF.1^4*x^2+FF.1^4*x+FF.1^4;
N1 := 0;
U2 := R! x^2+FF.1^5*x;
V2 := R! FF.1*x^4+x^3+FF.1^4*x^2+FF.1^4*x+FF.1^4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 10*x^7 + 5*x^6 + 5*x^5 + 2*x^3 + 3*x^2 + 6*x;
h:= R! 9*x^4 + 9*x^3 + 7*x^2 + 5*x + 5;
V:= R! 6*x^4 + 4*x^2 + 6*x + 7;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+4*x+6;
V1 := R! 7*x^4+2*x^3+x+10;
N1 := 0;
U2 := R! x^3+4*x^2+6*x;
V2 := R! 7*x^4+2*x^3+7*x^2+9*x+6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 9*x^7 + 10*x^6 + 4*x^5 + 8*x^4 + 4*x^3 + 6*x^2 + 10*x + 4;
h:= R! 8*x^4 + 6*x^3 + 7*x^2 + 7*x + 4;
V:= R! 4*x^4 + 8*x^3 + 7*x^2 + 6*x + 5;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+2*x^2+10*x+6;
V1 := R! 10*x^4+8*x^3+10*x^2+8*x+1;
N1 := 0;
U2 := R! 1;
V2 := R! 10*x^4+8*x^3+8*x^2+9*x+2;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + x^6 + x^5 + x^3 + 2*x^2 + 2;
h:= R! 2*x^3 + 2*x^2 + x + 2;
V:= R! x^4 + x^2 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+x;
V1 := R! 2*x^4+x^3+2*x+2;
N1 := 0;
U2 := R! 1;
V2 := R! 2*x^4+x^3+1;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 10*x^8 + 8*x^6 + x^5 + 4*x^4 + 3*x^3 + 3*x^2 + 4*x;
h:= R! 7*x^4 + x^3 + 9*x^2 + 2*x;
V:= R! 7*x^4 + 7*x^3 + x^2 + 3*x + 10;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+4*x+6;
V1 := R! 8*x^4+3*x^3+8*x^2+8*x+9;
N1 := 0;
U2 := R! x^3+6*x;
V2 := R! 8*x^4+3*x^3+4*x^2+4*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 5*x^7 + 3*x^6 + 6*x^4 + 5*x^3 + 3*x^2 + x + 1;
h:= R! 6*x^4 + x^3 + 2*x^2 + 3*x + 5;
V:= R! 2*x^4 + x^3 + 6*x^2 + 3*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+2*x^2+5*x+3;
V1 := R! 6*x^4+5*x^3+3*x^2+6*x+1;
N1 := 0;
U2 := R! x^3+4*x^2+2*x;
V2 := R! 6*x^4+5*x^3+2*x^2+x+5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 3*x^7 + 6*x^6 + 3*x^5 + 3*x^4 + 5*x^3 + x^2 + 4*x;
h:= R! 5*x^4 + 3*x^3 + 3*x^2 + 2;
V:= R! 3*x^4 + 2*x^3 + 2*x^2 + x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! 1;
V1 := R! 6*x^4+2*x^3+2*x^2+6*x+3;
N1 := 1;
U2 := R! x^2+x+5;
V2 := R! 6*x^4+2*x^3+2*x^2+6*x+6;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^6 + 2*x^5 + 2*x^4 + 2*x^2 + 2*x + 2;
h:= R! x^3 + x + 1;
V:= R! x^4 + x^3 + x^2 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! 1;
V1 := R! 2*x^4+x^3+2*x^2+1;
N1 := 2;
U2 := R! x;
V2 := R! 2*x^4+x^3+2*x^2+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1*x^6 + FF.1^2*x^5 + FF.1^2*x^3 + FF.1^2*x^2 + x + FF.1;
h:= R! FF.1^2*x^4 + FF.1^2*x^3 + FF.1^2*x^2 + FF.1*x + FF.1;
V:= R! FF.1*x^4 + FF.1*x^3 + FF.1*x^2 + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x+1;
V1 := R! x^4+x^3+x^2+FF.1*x+FF.1^2;
N1 := 0;
U2 := R! 1;
V2 := R! x^4+x^3+x^2+FF.1*x+1;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1^2*x^7 + FF.1*x^6 + FF.1^2*x^5 + FF.1*x^4 + FF.1^2*x^3 + x;
h:= R! x^4 + FF.1^2*x + FF.1;
V:= R! FF.1^2*x^4 + FF.1^2*x^3 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! 1;
V1 := R! FF.1*x^4+FF.1^2*x^3+FF.1*x+FF.1^2;
N1 := 2;
U2 := R! x^3+x^2+x;
V2 := R! FF.1*x^4+FF.1^2*x^3+FF.1*x^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 3*x^7 + 3*x^6 + 3*x^5 + 4*x^4 + x + 3;
h:= R! 4*x^3 + 3*x^2 + 2;
V:= R! x^4 + 2*x^3 + 4*x^2 + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+3*x;
V1 := R! 4*x^4+4*x^3+3*x^2+4*x+2;
N1 := 0;
U2 := R! x^3+x;
V2 := R! 4*x^4+4*x^3+x^2+3*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + 2*x^7 + FF.1^3*x^6 + 2*x^5 + FF.1^6*x^4 + FF.1*x^3 + 2*x^2 + FF.1^3*x + FF.1^5;
h:= R! FF.1^6*x^4 + FF.1^5*x^2 + FF.1^6;
V:= R! FF.1*x^4 + FF.1^5*x^3 + 2*x^2 + FF.1*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+x^2+FF.1^7*x;
V1 := R! x^4+FF.1*x^3+FF.1^7*x^2+FF.1*x+FF.1;
N1 := 0;
U2 := R! x^2+x+FF.1^7;
V2 := R! x^4+FF.1*x^3+FF.1^2*x^2+FF.1^7*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 4*x^7 + 4*x^5 + 4*x^4 + 2*x^3 + 3*x^2 + 2;
h:= R! x^4 + x^3 + x^2 + 3*x + 2;
V:= R! x^4 + x^3 + 4*x^2 + x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+x^2+x+1;
V1 := R! 3*x^4+3*x^3+x^2+2*x+2;
N1 := 0;
U2 := R! 1;
V2 := R! 3*x^4+3*x^3+x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + FF.1^5*x^7 + FF.1^4*x^6 + FF.1^2*x^5 + FF.1^6*x^4 + FF.1^4*x^3 + FF.1^4*x^2 + FF.1^2*x + FF.1^3;
h:= R! FF.1^5*x^4 + FF.1*x^3 + FF.1^6*x^2 + FF.1^5*x;
V:= R! FF.1^3*x^4 + FF.1^2*x^3 + x^2 + FF.1^6*x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! 1;
V1 := R! FF.1^2*x^4+FF.1^4*x^3+FF.1^2*x^2+FF.1*x+FF.1^2;
N1 := 0;
U2 := R! x^3+FF.1^5*x^2+FF.1^5*x;
V2 := R! FF.1^2*x^4+FF.1^4*x^3+FF.1^2*x^2+FF.1^6*x+FF.1^5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 3*x^7 + 2*x^6 + x^5 + 4*x^3 + 4*x + 2;
h:= R! 3*x^3 + 4*x^2 + x + 4;
V:= R! 2*x^4 + 3*x^3 + 4*x^2 + 4*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+3*x^2+4*x+2;
V1 := R! 3*x^4+4*x^3+2*x+1;
N1 := 0;
U2 := R! 1;
V2 := R! 3*x^4+4*x^3+2*x^2+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1*x^7 + x^6 + FF.1*x^5 + FF.1*x^4 + FF.1^2*x^3 + FF.1^2*x;
h:= R! FF.1*x^4 + FF.1*x^2 + x + FF.1^2;
V:= R! FF.1^2*x^4 + x^3 + FF.1^2*x^2 + FF.1*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! 1;
V1 := R! x^4+x^3+x^2+FF.1^2*x+FF.1;
N1 := 0;
U2 := R! x^3+FF.1^2*x^2+FF.1*x;
V2 := R! x^4+x^3+FF.1*x^2+x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + x^5 + x^4 + 2*x^3 + 2*x + 2;
h:= R! x^3 + 2;
V:= R! x^4 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+2;
V1 := R! 2*x^4+2*x^3+x+2;
N1 := 0;
U2 := R! x+2;
V2 := R! 2*x^4+2*x^3+x;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 2*x^7 + x^6 + 2*x^5 + 3*x^4 + x^3 + 4*x^2 + 3;
h:= R! 4*x^4 + 4*x^3 + x + 4;
V:= R! 2*x^4 + 3*x^3 + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! 1;
V1 := R! 4*x^4+3*x^3+4*x+2;
N1 := 0;
U2 := R! x^3+2*x^2+4*x+3;
V2 := R! 4*x^4+3*x^3+3*x^2+2*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 3*x^7 + 3*x^5 + 3*x^4 + 3*x^3 + 2*x^2 + x + 1;
h:= R! 4*x^2 + 3*x;
V:= R! 2*x^4 + 2*x^3 + 2*x^2 + 4*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x+1;
V1 := R! 3*x^4+3*x^3+4*x^2+3*x+3;
N1 := 1;
U2 := R! x+4;
V2 := R! 3*x^4+3*x^3+4*x^2+3*x+2;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^6 + x^4 + 2*x^3 + 2*x^2 + x;
h:= R! 2*x^3 + x^2 + x;
V:= R! x^4 + 2*x^3 + x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+1;
V1 := R! 2*x^4+2*x^3+x^2+2*x;
N1 := 2;
U2 := R! x+1;
V2 := R! 2*x^4+2*x^3+x^2+2*x;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + x^6 + x^4 + x^3 + 2*x;
h:= R! x^3 + 2*x + 1;
V:= R! x^4 + 2*x^2 + x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+1;
V1 := R! 2*x^4+2*x^3+x^2;
N1 := 2;
U2 := R! x;
V2 := R! 2*x^4+2*x^3+x^2+2;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + 2*x^6 + 2*x^4 + x^3 + 2*x^2 + 2*x;
h:= R! 2*x^2 + 2*x;
V:= R! x^4 + x^3 + x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+2;
V1 := R! 2*x^4+2*x^3+x+1;
N1 := 2;
U2 := R! x+2;
V2 := R! 2*x^4+2*x^3+x;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^5 + 2*x^4 + x^2 + 2*x + 2;
h:= R! 2*x^2 + 2;
V:= R! x^4 + 2*x^2 + 2*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2;
V1 := R! 2*x^4+2*x^2+x;
N1 := 0;
U2 := R! x^3+2*x;
V2 := R! 2*x^4+x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 2*x^7 + 3*x^6 + 4*x^5 + 3*x^4;
h:= R! 3*x^4 + x + 3;
V:= R! 3*x^4 + 3*x^3 + x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x;
V1 := R! 4*x^4+2*x^3+4*x^2+4*x;
N1 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 5*x^7 + 6*x^6 + 2*x^5 + 4*x^4 + 5*x^3 + 3*x + 6;
h:= R! 3*x^4 + 3*x^3 + x^2 + 5*x + 5;
V:= R! 5*x^4 + 3*x^3 + 3*x^2 + 4*x;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x;
V1 := R! 6*x^4+x^3+3*x^2+5*x+1;
N1 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 10*x^7 + 5*x^6 + 5*x^5 + 2*x^3 + 3*x^2 + 6*x;
h:= R! 9*x^4 + 9*x^3 + 7*x^2 + 5*x + 5;
V:= R! 6*x^4 + 4*x^2 + 6*x + 7;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x+10;
V1 := R! 7*x^4+2*x^3;
N1 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^6 + 4*x^4 + x^3 + 3*x + 4;
h:= R! 2*x + 3;
V:= R! x^4 + x^2 + 4*x;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x+4;
V1 := R! 4*x^4+4*x^2+4*x+3;
N1 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 4*x^7 + 3*x^6 + x^5 + 2*x^4 + 5*x^3 + x^2 + 2;
h:= R! 2*x^3 + 3*x^2 + 6*x + 2;
V:= R! x^4 + x^3 + 2*x^2 + 6*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x+6;
V1 := R! 6*x^4+4*x^3+2*x^2+2*x+4;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 2*x^7 + x^6 + 4*x^5 + 5*x^3 + 6*x^2 + 5;
h:= R! 4*x^3 + 5*x^2 + 2*x + 3;
V:= R! 2*x^4 + 2*x^3 + x + 6;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x+3;
V1 := R! 5*x^4+x^3+2*x^2+4*x+2;
N1 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 2*x^7 + 3*x^6 + 4*x^5 + 3*x^4;
h:= R! 3*x^4 + x + 3;
V:= R! 3*x^4 + 3*x^3 + x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x+4;
V1 := R! 4*x^4+2*x^3+4*x^2+4*x+4;
N1 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 2*x^7 + x^6 + 2*x^5 + 3*x^4 + x^3 + 4*x^2 + 3;
h:= R! 4*x^4 + 4*x^3 + x + 4;
V:= R! 2*x^4 + 3*x^3 + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x+1;
V1 := R! 4*x^4+3*x^3+4*x+1;
N1 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + x^6 + x^5 + x^4 + x^3 + 2*x^2 + 4;
h:= R! 2*x^4 + 2*x^3 + 4*x^2 + x;
V:= R! x^4 + 2*x^3 + x^2 + 4*x;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x+3;
V1 := R! 2*x^4+x^3;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^6 + 2*x^5 + x^4 + x^3 + x + 1;
h:= R! x^3 + 2*x^2 + 2*x;
V:= R! x^4 + x^3 + 2*x^2 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+2;
V1 := R! 2*x^4+x^3+2*x^2+2*x;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 2*x^7 + 3*x^5 + 3*x^4 + 4*x^3 + 3*x + 2;
h:= R! x^4 + 3*x^3 + x^2 + 3*x + 1;
V:= R! x^4 + 3*x^3 + 2*x^2 + 3*x;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+4*x^2+3*x;
V1 := R! 3*x^4+4*x^3+4*x+3;
N1 := 0;
U2 := R! x^3+4*x^2+3*x;
V2 := R! 3*x^4+4*x^3+2*x^2+x+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + FF.1^3*x^7 + FF.1^3*x^6 + x^5 + FF.1^6*x^3 + FF.1^3*x;
h:= R! FF.1^2*x^4 + FF.1*x^3 + x^2 + FF.1;
V:= R! FF.1^4*x^4 + x^3 + FF.1^2*x^2 + FF.1*x + FF.1^5;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^4*x^2+FF.1^5;
V1 := R! FF.1*x^4+FF.1^3*x^3+FF.1^5*x^2+FF.1^5*x+1;
N1 := 0;
U2 := R! x^3+FF.1^4*x^2+FF.1^5;
V2 := R! FF.1*x^4+FF.1^3*x^3+FF.1*x^2+x+FF.1^5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 4*x^7 + 4*x^6 + x^5 + x^4 + 4*x^3 + x^2 + 2*x + 4;
h:= R! 4*x^3 + x + 1;
V:= R! x^4 + 2*x^2 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+3*x^2+4*x+2;
V1 := R! 4*x^4+x^3+x^2+3*x+4;
N1 := 0;
U2 := R! x^3+3*x^2+4*x+2;
V2 := R! 4*x^4+x^3+2*x^2+3*x+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 6*x^7 + 2*x^6 + 5*x^5 + 5*x^4 + 2*x^3 + 3*x + 4;
h:= R! 3*x^3 + 2*x^2 + 5;
V:= R! 3*x^4 + 3*x^3 + x^2 + 3*x + 5;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+2*x^2+2*x+1;
V1 := R! 4*x^4+x^3+4*x;
N1 := 0;
U2 := R! x^3+2*x^2+2*x+1;
V2 := R! 4*x^4+x^3+6*x^2+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 3*x^7 + 2*x^6 + x^5 + 4*x^3 + 4*x + 2;
h:= R! 3*x^3 + 4*x^2 + x + 4;
V:= R! 2*x^4 + 3*x^3 + 4*x^2 + 4*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+4*x^2+3*x;
V1 := R! 3*x^4+4*x^3+x^2+x+4;
N1 := 0;
U2 := R! x+4;
V2 := R! 3*x^4+4*x^3+2*x^2+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 8*x^8 + x^7 + 2*x^6 + 5*x^5 + 6*x^4 + 4*x^3 + 4*x^2 + 7*x + 7;
h:= R! 7*x^4 + 7*x^3 + 2*x^2 + 6;
V:= R! x^4 + 3*x^3 + 4*x^2 + 10*x;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x+1;
V1 := R! 3*x^4+x^3+5*x^2+x+10;
N1 := 0;
U2 := R! x^3+6*x^2+5*x+10;
V2 := R! 3*x^4+x^3+3*x^2+10*x+5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 6*x^7 + 3*x^6 + x^5 + x^4 + 3*x^3 + x^2 + 2*x + 6;
h:= R! 2*x^4 + 3*x^3 + 3*x^2 + 1;
V:= R! 2*x^4 + 3*x^2 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+4*x^2+3*x;
V1 := R! 3*x^4+4*x^3+5*x^2+2*x+2;
N1 := 0;
U2 := R! x+4;
V2 := R! 3*x^4+4*x^3+x^2+6*x+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 9*x^6 + 8*x^5 + 9*x^4 + 4*x^3 + 2*x^2 + 8;
h:= R! 5*x^3 + 3*x^2 + 9*x + 6;
V:= R! x^4 + 3*x^3 + 2*x^2 + 6*x + 5;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x+2;
V1 := R! 10*x^4+3*x^3+6*x^2+7*x+4;
N1 := 0;
U2 := R! x^3+6*x^2+5*x+10;
V2 := R! 10*x^4+3*x^3+3*x^2+2*x+9;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 8*x^7 + x^6 + 7*x^5 + 2*x^4 + 10*x^3 + 3*x^2 + 7*x;
h:= R! x^3 + 5*x^2 + 10*x + 6;
V:= R! 5*x^4 + 8*x^3 + 8*x^2 + 10*x + 8;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+8*x^2+4*x;
V1 := R! 6*x^4+2*x^3+4*x^2+x;
N1 := 0;
U2 := R! x+4;
V2 := R! 6*x^4+2*x^3+9*x^2+2*x+6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 4*x^7 + 2*x^6 + x^4 + 4*x^3 + 2*x^2 + x + 3;
h:= R! x^4 + 2*x^3 + x^2 + 2;
V:= R! x^4 + 4*x^3 + 4*x^2 + 2*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+1;
V1 := R! 3*x^4+4*x^3+3*x+2;
N1 := 1;
U2 := R! x^2+1;
V2 := R! 3*x^4+4*x^3+2*x;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 5*x^7 + 4*x^6 + 3*x^5 + 4*x^4 + 6*x^2 + 5*x + 3;
h:= R! x^4 + 4*x^3 + 2*x^2 + 6;
V:= R! x^4 + 5*x^3 + 2*x^2 + 6;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+2*x+6;
V1 := R! 5*x^4+5*x^3+3*x^2+4*x+6;
N1 := 1;
U2 := R! x^2+2*x+6;
V2 := R! 5*x^4+5*x^3+3*x^2+x+1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^6*x^8 + FF.1^2*x^6 + FF.1*x^5 + FF.1^5*x^4 + x^3 + FF.1^4*x^2 + x + FF.1^3;
h:= R! FF.1^2*x^4 + x^3 + FF.1^5*x^2 + FF.1^6;
V:= R! FF.1^6*x^4 + FF.1^4*x^3 + FF.1^2*x^2 + FF.1^6*x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1*x+FF.1^4;
V1 := R! x^4+FF.1^5*x^3+FF.1^3*x^2+FF.1^2*x+FF.1^6;
N1 := 1;
U2 := R! x^2+FF.1^3*x+1;
V2 := R! x^4+FF.1^5*x^3+FF.1^3*x^2+FF.1*x+FF.1^4;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 4*x^7 + 4*x^6 + x^5 + 3*x^4 + x^3 + x^2 + x + 1;
h:= R! 3*x^3 + x^2 + 2*x + 3;
V:= R! x^4 + 3*x^3 + 3*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+2*x+2;
V1 := R! 4*x^4+4*x^3+4*x^2+4*x+3;
N1 := 1;
U2 := R! x^2+1;
V2 := R! 4*x^4+4*x^3+4*x^2+4*x+3;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + FF.1^5*x^7 + FF.1^7*x^5 + x^2 + x + FF.1^2;
h:= R! FF.1^6*x^4 + FF.1^3*x^3 + FF.1^6*x + FF.1^3;
V:= R! FF.1*x^4 + 2*x^3 + FF.1^6*x^2 + FF.1*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^2+1;
V1 := R! x^4+FF.1*x^3+FF.1^2*x^2+2*x+1;
N1 := 0;
U2 := R! x^3+FF.1^2*x^2+FF.1*x;
V2 := R! x^4+FF.1*x^3+x^2+2*x+FF.1^3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^7*x^7 + FF.1^7*x^6 + FF.1*x^5 + FF.1^5*x^4 + FF.1^3*x^3 + FF.1*x^2 + FF.1^6;
h:= R! FF.1^7*x^3 + x^2 + FF.1^5*x + FF.1^5;
V:= R! FF.1*x^4 + FF.1^5*x^3 + FF.1*x^2 + FF.1*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+x+1;
V1 := R! FF.1^5*x^4+x^3+2*x^2+2*x+1;
N1 := 0;
U2 := R! x^2+FF.1^6*x;
V2 := R! FF.1^5*x^4+x^3+FF.1^6*x^2+FF.1*x+FF.1^5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 3*x^6 + 5*x^5 + x^4 + 5*x^3 + 3*x^2;
h:= R! 2*x^4 + 4*x^3 + 2*x^2 + 6;
V:= R! 2*x^4 + x^3 + 6*x^2 + 5*x + 5;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+4*x+3;
V1 := R! 3*x^4+2*x^3+6*x^2+2*x+6;
N1 := 0;
U2 := R! x^3+3*x^2+3*x;
V2 := R! 3*x^4+2*x^3+3*x^2+4*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 6*x^8 + 3*x^7 + 2*x^6 + 2*x^5 + 5*x^4 + 4*x^3 + 3*x + 3;
h:= R! 6*x^4 + 4*x^3 + 6*x^2 + 3;
V:= R! 3*x^4 + x^3 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+4*x+3;
V1 := R! 5*x^4+2*x^3+x^2+5*x;
N1 := 0;
U2 := R! x^3+4*x^2+2*x;
V2 := R! 5*x^4+2*x^3+2*x^2+3*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 6*x^8 + 2*x^7 + x^6 + 10*x^5 + 6*x^4 + 8*x^3 + 4*x^2 + 5*x + 5;
h:= R! 10*x^4 + 4*x^2 + 4*x + 2;
V:= R! 3*x^4 + 7*x^3 + 10*x^2 + 10*x;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+6*x^2+2*x+8;
V1 := R! 9*x^4+4*x^3+7*x^2+4;
N1 := 0;
U2 := R! x^2+8*x+4;
V2 := R! 9*x^4+4*x^3+8*x^2+8*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1^2*x^7 + FF.1*x^6 + FF.1*x^5 + FF.1^5*x^4 + FF.1^4*x^3 + FF.1*x + FF.1;
h:= R! x^4 + FF.1^3*x^3 + FF.1*x^2 + FF.1^3*x + FF.1^2;
V:= R! FF.1^6*x^4 + FF.1^3*x^2 + FF.1^3*x + FF.1^3;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+x^2+FF.1*x;
V1 := R! FF.1^2*x^4+FF.1^3*x^3+FF.1^4*x^2+FF.1^3*x+FF.1^3;
N1 := 0;
U2 := R! x^2+FF.1^4*x+FF.1^5;
V2 := R! FF.1^2*x^4+FF.1^3*x^3+x^2+FF.1*x+FF.1^5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1*x^7 + FF.1^2*x^6 + FF.1^3*x^5 + FF.1^3*x^4 + 2*x^2 + FF.1^5*x;
h:= R! FF.1^3*x^4 + FF.1*x^3 + FF.1^6*x^2 + FF.1^6*x + FF.1^2;
V:= R! FF.1*x^4 + FF.1^2*x^3 + FF.1^5*x^2 + FF.1^6*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^6*x^2+FF.1^3*x;
V1 := R! 2*x^4+FF.1^7*x^3+FF.1^6*x;
N1 := 0;
U2 := R! x^2+FF.1^6*x+1;
V2 := R! 2*x^4+FF.1^7*x^3+FF.1^3*x^2+2*x+FF.1^7;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1*x^7 + FF.1*x^5 + FF.1*x^4 + FF.1^2*x^3 + FF.1^2*x^2 + FF.1^2*x + 1;
h:= R! x^4 + x^2 + x + 1;
V:= R! FF.1^2*x^4 + FF.1*x^3 + FF.1^2*x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^2+FF.1^2*x+FF.1;
V1 := R! FF.1*x^4+FF.1*x^3+x^2+FF.1*x+FF.1;
N1 := 1;
U2 := R! x;
V2 := R! FF.1*x^4+FF.1*x^3+x^2+FF.1*x+FF.1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 2*x^7 + 6*x^6 + 2*x^5 + x^4 + 2*x^3 + 2*x^2 + 6*x + 5;
h:= R! 6*x^4 + x^3 + 3*x^2 + 6*x + 2;
V:= R! 2*x^4 + 6*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+3*x^2+6*x+4;
V1 := R! 6*x^4+6*x^3+x^2+3*x+1;
N1 := 0;
U2 := R! x+1;
V2 := R! 6*x^4+6*x^3+4*x^2+2*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 6*x^7 + 2*x^6 + 6*x^5 + 5*x^4 + 2*x^3 + 3*x^2 + 2*x + 6;
h:= R! 5*x^4 + x^3 + 3*x^2 + 5*x + 6;
V:= R! 3*x^4 + 6*x^3 + 2*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+6*x^2+3*x+4;
V1 := R! 6*x^4+5*x^2+6*x+5;
N1 := 0;
U2 := R! x^3+x^2+5*x;
V2 := R! 6*x^4+6*x^2+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^4*x^7 + FF.1*x^6 + FF.1*x^5 + x^4 + FF.1^5*x^3 + FF.1^6*x^2 + FF.1^3*x + 1;
h:= R! FF.1^4*x^4 + FF.1^2*x^3 + FF.1^5*x^2 + FF.1^5*x + 1;
V:= R! FF.1^6*x^4 + FF.1^5*x^3 + x^2 + FF.1^6*x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^6*x^2+FF.1^4*x+FF.1;
V1 := R! FF.1^3*x^4+FF.1^3*x^3+FF.1^3*x^2+FF.1^6;
N1 := 0;
U2 := R! x^3+FF.1^4*x^2+FF.1^5;
V2 := R! FF.1^3*x^4+FF.1^3*x^3+FF.1^4*x^2+x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + x^7 + 4*x^6 + x^5 + x^4 + x^3 + 2*x^2 + 2*x + 1;
h:= R! x^4 + 4*x^3 + x^2 + 4*x + 1;
V:= R! x^4 + 4*x^3 + 2*x^2 + 3*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+2*x^2+2*x;
V1 := R! 3*x^4+2*x^3+2*x^2+2;
N1 := 0;
U2 := R! x^3+3*x^2+2*x;
V2 := R! 3*x^4+2*x^3+2*x^2+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + x^7 + 2*x^6 + FF.1^2*x^5 + x^4 + FF.1^7*x^3 + 2*x^2 + FF.1^7*x + 1;
h:= R! FF.1^5*x^4 + FF.1*x^3 + FF.1*x^2 + 2*x + FF.1^7;
V:= R! FF.1^2*x^4 + FF.1^2*x^3 + 2*x^2 + FF.1^3;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^3*x^2+2*x+FF.1^7;
V1 := R! 2*x^4+FF.1^7*x^3+2*x^2+FF.1*x+1;
N1 := 0;
U2 := R! x^3+FF.1^2*x+FF.1^7;
V2 := R! 2*x^4+FF.1^7*x^3+FF.1^5*x^2+2*x+FF.1^7;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^4*x^8 + FF.1^2*x^6 + FF.1^3*x^4 + FF.1*x^3 + FF.1^4*x^2 + FF.1^2*x + FF.1;
h:= R! x^4 + FF.1^4*x^3 + FF.1^2*x^2 + FF.1^2*x;
V:= R! FF.1^3*x^4 + x^3 + FF.1^2*x^2 + FF.1^4*x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+x+1;
V1 := R! FF.1*x^4+FF.1^5*x^3+FF.1^3*x^2+FF.1^5;
N1 := 0;
U2 := R! x^3+FF.1^3*x^2+FF.1^4*x+FF.1^3;
V2 := R! FF.1*x^4+FF.1^5*x^3+FF.1^2*x^2+x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + 2*x^7 + FF.1^6*x^6 + FF.1^7*x^4 + FF.1*x^3 + FF.1^5*x + FF.1;
h:= R! 2*x^4 + FF.1^3*x^3 + x^2 + x + FF.1^5;
V:= R! FF.1^7*x^4 + FF.1^6*x^3 + FF.1^3*x^2 + x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^2*x^2+FF.1^2*x+2;
V1 := R! FF.1^6*x^4+FF.1^5*x^3+FF.1^2*x^2+FF.1^5*x+2;
N1 := 0;
U2 := R! x^3+FF.1^7*x^2+x+FF.1^7;
V2 := R! FF.1^6*x^4+FF.1^5*x^3+FF.1^2*x^2+FF.1^5*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 5*x^7 + 2*x^6 + 2*x^5 + x^2 + 2*x + 2;
h:= R! 3*x^4 + 3*x^3 + 5*x^2 + x + 1;
V:= R! x^4 + 6*x^3 + 4*x^2 + 6*x;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+6*x^2+x;
V1 := R! 3*x^4+5*x^3+2*x^2+3*x+5;
N1 := 0;
U2 := R! x^3+5*x^2+4*x;
V2 := R! 3*x^4+5*x^3+5*x^2+x+5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^3*x^8 + FF.1^2*x^7 + FF.1^5*x^6 + FF.1^6*x^5 + FF.1^6*x^4 + FF.1^4*x^3 + FF.1^5*x^2 + FF.1^4*x + FF.1^5;
h:= R! FF.1^3*x^4 + FF.1*x^3 + FF.1^4*x^2 + FF.1^3*x + FF.1^5;
V:= R! FF.1^6*x^4 + FF.1^3*x^3 + FF.1^2*x^2 + x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^6*x^2+FF.1^4*x+FF.1;
V1 := R! FF.1^4*x^4+x^3+FF.1^6*x^2+FF.1^2*x+FF.1^6;
N1 := 0;
U2 := R! x^3+FF.1^6*x^2+FF.1^2*x;
V2 := R! FF.1^4*x^4+x^3+FF.1^5*x+FF.1^3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + x^7 + 3*x^6 + 4*x^5 + 6*x^4 + 6*x^3 + 6*x + 3;
h:= R! 3*x^4 + 3*x^2 + 3*x + 4;
V:= R! 5*x^4 + 6*x^3 + 6*x^2 + 3*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+2*x^2+6*x;
V1 := R! 6*x^4+x^3+5*x^2+x+5;
N1 := 0;
U2 := R! x^3+5*x^2+6*x+2;
V2 := R! 6*x^4+x^3+5*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 10*x^8 + 3*x^7 + x^6 + 2*x^5 + x^4 + 6*x^2 + 5*x + 10;
h:= R! 4*x^4 + 2*x^3 + 10*x^2 + 5*x + 2;
V:= R! 3*x^4 + 3*x^3 + 10*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+7*x^2+8*x+1;
V1 := R! 4*x^4+6*x^3+10*x^2+7*x+9;
N1 := 0;
U2 := R! x^3+6*x^2+4*x+6;
V2 := R! 4*x^4+6*x^3+5*x^2+x+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + x^5 + 2*x^4 + 2*x^3 + 2*x^2 + x;
h:= R! 2*x^3 + 2*x^2 + 2;
V:= R! x^4 + x^3 + 2*x^2 + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^3+2*x;
V1 := R! 2*x^4+x^2+1;
N1 := 0;
U2 := R! x^2+2;
V2 := R! 2*x^4+2*x^2;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^6*x^8 + FF.1^6*x^6 + FF.1*x^5 + FF.1^4*x^4 + FF.1^3*x^3 + FF.1^6*x^2 + FF.1^3*x + 1;
h:= R! FF.1^6*x^4 + FF.1^3*x^3 + FF.1^4*x^2 + FF.1^2;
V:= R! FF.1^5*x^4 + FF.1^2*x^3 + FF.1^6*x + FF.1^4;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^2*x^2+FF.1^2*x+1;
V1 := R! FF.1*x^4+FF.1^5*x^3+FF.1^2*x^2+FF.1^2*x+FF.1^6;
N1 := 0;
U2 := R! x+FF.1;
V2 := R! FF.1*x^4+FF.1^5*x^3+FF.1^4*x^2+FF.1^6*x+FF.1^3;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + x^6 + 2*x^5 + 2*x^4 + 2*x^3 + 2*x^2 + x;
h:= R! x^3 + x^2 + x;
V:= R! x^4 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+1;
V1 := R! 2*x^4+2*x^3+2*x^2+2;
N1 := 0;
U2 := R! x^3+2*x;
V2 := R! 2*x^4+2*x^3+x^2+x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^6 + x^5 + 2*x^4 + 2*x^2 + x + 2;
h:= R! x^3 + x + 2;
V:= R! x^4 + x^3 + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+1;
V1 := R! 2*x^4+x^3+2*x+2;
N1 := 1;
U2 := R! x^3+2*x;
V2 := R! 2*x^4+x^3+2*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1*x^6 + x^5 + FF.1*x^4 + x^3 + FF.1*x^2 + FF.1*x;
h:= R! FF.1*x^4 + FF.1*x^2 + FF.1^2*x + 1;
V:= R! FF.1^2*x^4 + FF.1*x^2 + FF.1*x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+FF.1^2*x^2+FF.1*x;
V1 := R! x^4+FF.1*x^2+FF.1^2*x+1;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 8*x^7 + 8*x^6 + 9*x^5 + 10*x^4 + 6*x^3 + 4*x^2 + 10*x + 2;
h:= R! 2*x^4 + 10*x^3 + x^2 + 4*x + 1;
V:= R! 3*x^4 + 2*x^2 + 4*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+9*x+10;
V1 := R! 6*x^4+x^3+8*x^2+7*x+2;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + x^7 + 9*x^6 + 3*x^5 + 2*x^4 + 3*x^3 + 5*x^2 + 5*x + 3;
h:= R! 2*x^4 + 2*x^3 + 10*x^2 + 5*x + 10;
V:= R! 4*x^4 + 7*x^3 + 6*x^2 + 7*x + 6;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+x^2+7*x+2;
V1 := R! 5*x^4+2*x^3+10*x^2+5;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 6*x^7 + 2*x^6 + 6*x^5 + 5*x^4 + 2*x^3 + 3*x^2 + 2*x + 6;
h:= R! 5*x^4 + x^3 + 3*x^2 + 5*x + 6;
V:= R! 3*x^4 + 6*x^3 + 2*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+6*x^2+3*x+4;
V1 := R! 6*x^4+5*x^2+6*x+5;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^6 + x^4 + 3*x^3 + 4*x^2 + 2*x + 1;
h:= R! 4*x^2 + 4;
V:= R! x^4 + x^2 + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+3*x^2+4*x+2;
V1 := R! 4*x^4+3*x^2+2*x+4;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1^6*x^7 + FF.1^7*x^5 + FF.1^2*x^4 + FF.1^6*x^3 + FF.1^5*x^2 + 2*x + FF.1^7;
h:= R! FF.1^3*x^4 + 2*x^3 + FF.1^7*x^2 + FF.1^3;
V:= R! FF.1*x^4 + FF.1^2*x^3 + x^2 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^6*x^2+x;
V1 := R! 2*x^4+FF.1^5*x^3+FF.1^3*x^2+FF.1^5*x+FF.1^6;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1*x^7 + FF.1^2*x^6 + FF.1*x^5 + FF.1^2*x^4 + x^3 + x^2 + FF.1*x + 1;
h:= R! FF.1^2*x^4 + x^2 + x + 1;
V:= R! FF.1*x^4 + FF.1^2*x^3 + x^2 + x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+x^2+x;
V1 := R! x^4+FF.1^2*x^3+FF.1*x^2+FF.1;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^3*x^8 + FF.1^2*x^7 + FF.1^2*x^6 + FF.1^4*x^5 + FF.1^5*x^4 + FF.1^3*x^2 + FF.1^3*x + FF.1^2;
h:= R! FF.1^4*x^4 + FF.1^4*x^3 + FF.1^2*x^2 + FF.1*x + FF.1^6;
V:= R! FF.1^2*x^4 + FF.1^3*x^3 + x^2 + FF.1^5*x + FF.1^4;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^2*x^2+FF.1^5*x;
V1 := R! FF.1*x^4+FF.1^6*x^3+x+FF.1^2;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 3*x^7 + 2*x^6 + 3*x^5 + 2*x^3 + 3*x^2 + 2*x;
h:= R! 2*x^4 + 2*x^3 + 3*x^2 + 3*x + 2;
V:= R! x^4 + 4*x^3 + 2*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+4*x^2+3*x;
V1 := R! 2*x^4+4*x^3+2*x;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + x^7 + x^6 + x^4 + 3*x^2 + 2*x;
h:= R! 2*x^4 + 2*x^3 + x^2 + 4*x + 1;
V:= R! x^4 + x^3 + 3*x^2 + 2*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+3*x^2+2*x;
V1 := R! 2*x^4+2*x^3+4*x^2+4*x;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + x^6 + FF.1^4*x^5 + FF.1^3*x^4 + FF.1^6*x^3 + FF.1^5*x^2 + FF.1^3*x + FF.1^2;
h:= R! FF.1^2*x^4 + FF.1^2*x^3 + x + FF.1^6;
V:= R! FF.1^5*x^4 + FF.1^5*x^3 + FF.1*x^2 + FF.1^6*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^3*x^2+x;
V1 := R! FF.1^3*x^4+FF.1^3*x^3+FF.1*x^2+FF.1^2*x+FF.1^2;
N1 := 0;
U2 := R! 1;
V2 := R! FF.1^3*x^4+FF.1^3*x^3+FF.1*x^2+FF.1^2*x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 7*x^7 + 10*x^6 + 4*x^4 + x^3 + x^2 + 6*x + 7;
h:= R! 2*x^4 + 8*x^3 + 4*x^2 + 3*x + 8;
V:= R! x^4 + 8*x^3 + 8*x^2 + x + 7;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! 1;
V1 := R! 8*x^4+6*x^3+10*x^2+7*x+7;
N1 := 0;
U2 := R! x^3+6*x^2+10*x+5;
V2 := R! 8*x^4+6*x^3+10*x^2+7*x+6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^2*x^7 + FF.1*x^6 + FF.1*x^5 + FF.1*x^4 + FF.1*x^3 + FF.1*x + 1;
h:= R! FF.1*x^4 + x^3 + x^2 + FF.1*x + FF.1;
V:= R! FF.1^2*x^4 + FF.1^2*x^2 + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+1;
V1 := R! x^4+x^3+FF.1^2*x^2+FF.1*x;
N1 := 0;
U2 := R! 1;
V2 := R! x^4+x^3+FF.1*x^2+FF.1*x+FF.1^2;
N2 := 3;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 2*x^7 + 3*x^6 + x^5 + 4*x^3 + 4*x^2 + 4;
h:= R! 2*x^4 + x^3 + 2*x^2 + 3*x + 2;
V:= R! x^4 + 4*x^3 + 4*x^2 + x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! 1;
V1 := R! 2*x^4+4*x^2+x+1;
N1 := 3;
U2 := R! x^3+x;
V2 := R! 2*x^4+2*x+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^6*x^8 + FF.1^3*x^6 + FF.1^6*x^5 + FF.1^5*x^4 + FF.1^3*x^3 + FF.1*x^2 + x + FF.1^6;
h:= R! FF.1^6*x^4 + FF.1^4*x^3 + FF.1^4*x^2 + FF.1^6*x + FF.1^5;
V:= R! FF.1^5*x^4 + FF.1^3*x^3 + FF.1^4*x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^2*x^2+x+FF.1;
V1 := R! FF.1*x^4+FF.1^6*x^3+FF.1^6*x^2+FF.1^4*x+FF.1^2;
N1 := 0;
U2 := R! 1;
V2 := R! FF.1*x^4+FF.1^6*x^3+FF.1^6*x+FF.1^5;
N2 := 3;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 4*x^7 + 4*x^3 + 4*x^2 + 1;
h:= R! 3*x^4 + 4*x^3 + 2*x + 4;
V:= R! 3*x^4 + 3*x^3 + x^2 + x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+4*x^2+3*x;
V1 := R! 4*x^4+3*x^3+3;
N1 := 0;
U2 := R! 1;
V2 := R! 4*x^4+3*x^3+4*x^2+2*x+2;
N2 := 3;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + x^5 + x^3 + 2*x^2 + 2;
h:= R! 2*x^3 + x^2 + x + 2;
V:= R! x^4 + x^2 + 2*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! 1;
V1 := R! 2*x^4+x^3+x^2+2;
N1 := 1;
U2 := R! x^3+2*x;
V2 := R! 2*x^4+x^3+x^2+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + x^6 + x^5 + 4*x^4 + 2*x^3 + 2*x^2 + 2*x + 2;
h:= R! x^4 + 3*x^3 + x^2 + x + 3;
V:= R! x^4 + 4*x^3 + 4*x^2 + 4*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! 1;
V1 := R! 3*x^4+3*x^3+1;
N1 := 1;
U2 := R! x^3+2*x^2+4*x+3;
V2 := R! 3*x^4+3*x^3+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 2*x^7 + 6*x^6 + x^4 + 4*x^3 + 2*x + 3;
h:= R! 4*x^4 + 2*x + 4;
V:= R! x^4 + 5*x^3 + 5*x^2 + 3*x + 5;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+x^2+3*x+3;
V1 := R! 2*x^4+2*x^3+2*x^2+6*x+5;
N1 := 0;
U2 := R! 1;
V2 := R! 2*x^4+2*x^3+2*x^2+2*x+5;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 5*x^7 + 3*x^6 + 6*x^5 + 10*x^4 + 7*x^3 + 5*x^2 + 7*x + 3;
h:= R! 8*x^4 + 7*x^3 + x^2 + 8*x + 2;
V:= R! 4*x^4 + 2*x^3 + 5*x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! 1;
V1 := R! 10*x^4+2*x^3+5*x^2+2*x+9;
N1 := 1;
U2 := R! x^3+7*x^2+6*x;
V2 := R! 10*x^4+2*x^3+8*x^2+2*x+8;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + x^6 + 2*x^4 + 2*x^3 + x;
h:= R! x + 1;
V:= R! x^4 + 2*x^3 + x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+2;
V1 := R! 2*x^4+x^3+x+1;
N1 := 0;
U2 := R! x^2+x;
V2 := R! 2*x^4+x^3+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^3*x^8 + FF.1^4*x^7 + FF.1^3*x^6 + FF.1^3*x^5 + x^4 + FF.1^6*x^3 + x^2 + FF.1^3*x + FF.1^2;
h:= R! FF.1*x^4 + FF.1^3*x^3 + FF.1^6*x^2 + FF.1*x + FF.1^6;
V:= R! FF.1^3*x^4 + FF.1^2*x^3 + FF.1^3*x^2 + x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x+FF.1^6;
V1 := R! x^4+FF.1^5*x^3+FF.1^4*x^2+FF.1^3*x+FF.1^3;
N1 := 0;
U2 := R! x^2+x+FF.1^2;
V2 := R! x^4+FF.1^5*x^3+FF.1^4*x^2+FF.1^4*x+FF.1^3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + x^6 + FF.1^2*x^5 + FF.1*x^4 + FF.1^6*x^2 + FF.1^4*x + FF.1;
h:= R! FF.1^4*x^4 + FF.1^3*x^3 + FF.1^5;
V:= R! FF.1^6*x^4 + FF.1^5*x^3 + FF.1^5*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x+FF.1^4;
V1 := R! FF.1^3*x^4+FF.1^2*x^3+FF.1^5*x+FF.1^4;
N1 := 0;
U2 := R! x^2+FF.1^6*x+FF.1^6;
V2 := R! FF.1^3*x^4+FF.1^2*x^3+x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1^2*x^7 + FF.1*x^4 + x + 1;
h:= R! FF.1^2*x^4 + x^3 + FF.1*x + 1;
V:= R! FF.1*x^4 + FF.1*x^3 + FF.1*x^2 + FF.1*x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^2+x+1;
V1 := R! x^4+FF.1^2*x^3+FF.1*x^2+FF.1*x+FF.1^2;
N1 := 0;
U2 := R! x;
V2 := R! x^4+FF.1^2*x^3+FF.1*x^2+FF.1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^6 + 4*x^5 + 4*x^4 + 4*x^3 + x;
h:= R! x^3 + 3*x^2 + 3;
V:= R! x^4 + 2*x^3 + x^2 + 4*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+4*x;
V1 := R! 4*x^4+2*x^3+x^2+4*x+2;
N1 := 0;
U2 := R! x;
V2 := R! 4*x^4+2*x^3+x^2+x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + x^7 + 4*x^6 + 2*x^5 + 2*x^4 + 2*x^3 + x + 3;
h:= R! 3*x^4 + 3*x^3 + 3*x^2 + 2*x + 1;
V:= R! 3*x^4 + 3*x^3 + 3*x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+x+3;
V1 := R! 4*x^4+4*x^3+4*x^2+4*x+1;
N1 := 0;
U2 := R! x+4;
V2 := R! 4*x^4+4*x^3+4*x^2+3*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + x^6 + 3*x^5 + x^4 + 2*x^3 + x^2 + 4*x;
h:= R! 4*x^3 + x^2;
V:= R! 2*x^4 + 3*x^3 + 2*x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x;
V1 := R! 3*x^4+3*x^3+2*x^2;
N1 := 0;
U2 := R! x^2+3*x+2;
V2 := R! 3*x^4+3*x^3+2*x^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^6*x^8 + FF.1^2*x^7 + FF.1*x^6 + FF.1^3*x^5 + FF.1^5*x^3 + x^2 + x + FF.1^5;
h:= R! FF.1^2*x^4 + FF.1^3*x^3 + x^2 + FF.1^2*x + FF.1^6;
V:= R! FF.1^6*x^4 + FF.1^3*x^2 + x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1^3*x+FF.1;
V1 := R! x^4+FF.1^3*x^3+FF.1*x^2+FF.1^6*x+FF.1^6;
N1 := 0;
U2 := R! x+FF.1^2;
V2 := R! x^4+FF.1^3*x^3+FF.1*x^2+FF.1^6*x+FF.1^6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^3*x^8 + FF.1^4*x^7 + FF.1^4*x^6 + FF.1^2*x^5 + FF.1^4*x^3 + FF.1^6*x^2 + FF.1*x + FF.1;
h:= R! FF.1^4*x^4 + FF.1*x + FF.1^5;
V:= R! FF.1^2*x^4 + x^3 + FF.1*x^2 + FF.1*x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1^6*x+1;
V1 := R! FF.1*x^4+x^3+FF.1*x^2+1;
N1 := 0;
U2 := R! x+FF.1^5;
V2 := R! FF.1*x^4+x^3+FF.1*x^2+FF.1^6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^5 + x^3 + 2*x;
h:= R! 2*x^3 + x^2;
V:= R! x^4 + 2*x^3;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x;
V1 := R! 2*x^4+2*x^3+2*x^2;
N1 := 2;
U2 := R! x^3+2*x;
V2 := R! 2*x^4+2*x^3+2*x^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 4*x^7 + x^6 + 2*x^5 + 4*x^4 + 2*x^3 + 3*x^2 + 2*x;
h:= R! 4*x^4 + 4*x^3 + 2*x^2 + 2;
V:= R! 2*x^4 + 2*x^3 + x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+4;
V1 := R! 4*x^4+4*x^3+3*x^2+3*x+1;
N1 := 0;
U2 := R! x^2+4;
V2 := R! 4*x^4+4*x^3+3*x^2+3*x+1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^4*x^8 + FF.1^2*x^7 + x^6 + FF.1^4*x^5 + FF.1^6*x^4 + x^3 + FF.1^5*x^2 + x + FF.1^3;
h:= R! x^4 + FF.1^4*x^3 + x^2 + FF.1^6*x + FF.1^3;
V:= R! FF.1^3*x^4 + FF.1^6*x^3 + FF.1^4*x^2 + FF.1^6*x;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1*x+FF.1^6;
V1 := R! FF.1*x^4+FF.1^3*x^3+FF.1^5*x^2+FF.1^2*x+FF.1;
N1 := 1;
U2 := R! x^3+x^2+FF.1^2*x;
V2 := R! FF.1*x^4+FF.1^3*x^3+FF.1^6*x^2+x+FF.1^6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1^3*x^7 + FF.1*x^6 + FF.1^7*x^4 + FF.1^5*x^3 + FF.1^7*x^2 + FF.1*x + FF.1^5;
h:= R! 2*x^4 + 2*x^3 + FF.1^7*x^2 + FF.1^2*x + FF.1^2;
V:= R! FF.1^3*x^4 + FF.1^5*x^3 + x^2 + FF.1^2*x + FF.1^3;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^2+FF.1^3*x;
V1 := R! FF.1*x^4+FF.1^2*x^3+FF.1^5*x^2+x+FF.1^5;
N1 := 1;
U2 := R! x^3+FF.1^7*x^2+x+FF.1^7;
V2 := R! FF.1*x^4+FF.1^2*x^3+FF.1^5*x^2+x+FF.1^5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 2*x^7 + 6*x^6 + 3*x^5 + 2*x^4 + 4*x^2 + 8*x + 7;
h:= R! 7*x^4 + 7*x^3 + 9*x^2 + 3*x + 7;
V:= R! 5*x^4 + 10*x^2 + x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+9*x^2+3*x+9;
V1 := R! 10*x^4+4*x^3+6*x^2+2*x+2;
N1 := 0;
U2 := R! x^2+8*x;
V2 := R! 10*x^4+4*x^3+3*x^2+2;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + FF.1^3*x^7 + 2*x^6 + FF.1^2*x^5 + FF.1^3*x^4 + FF.1*x^2 + FF.1^7*x + 2;
h:= R! FF.1^5*x^4 + FF.1*x^3 + x^2 + FF.1^2*x + 1;
V:= R! FF.1^3*x^4 + FF.1^2*x^3 + FF.1^7*x^2 + FF.1^2*x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^2+2*x+FF.1^5;
V1 := R! FF.1^6*x^4+FF.1^7*x^3+FF.1^5*x^2+FF.1^2*x+1;
N1 := 1;
U2 := R! x^3+FF.1^2*x^2+FF.1^3*x;
V2 := R! FF.1^6*x^4+FF.1^7*x^3+FF.1^2*x^2+FF.1*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^3*x^8 + FF.1^7*x^7 + x^6 + FF.1^7*x^5 + FF.1^7*x^4 + FF.1^6*x^3 + 2*x + FF.1^3;
h:= R! FF.1^5*x^4 + FF.1^7*x^3 + FF.1^5*x^2 + 2*x + FF.1^5;
V:= R! x^4 + 2*x^2 + x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^5*x^2+FF.1^7;
V1 := R! FF.1^7*x^4+FF.1^3*x^3+x^2+FF.1^5*x+FF.1^5;
N1 := 0;
U2 := R! x^2+FF.1^3*x;
V2 := R! FF.1^7*x^4+FF.1^3*x^3+FF.1^2*x^2+2*x+1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + x^6 + 3*x^5 + 2*x^4 + 3*x^3 + 6*x + 6;
h:= R! 4*x^4 + 3*x^3 + 4*x^2 + 6*x + 1;
V:= R! 4*x^4 + 6*x^3 + 3*x^2 + 3*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+3*x+2;
V1 := R! 6*x^4+5*x^3;
N1 := 1;
U2 := R! x^3+2*x^2+4*x;
V2 := R! 6*x^4+5*x^3+3*x^2+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + x^7 + 3*x^6 + 4*x^5 + 6*x^4 + 6*x^3 + 6*x + 3;
h:= R! 3*x^4 + 3*x^2 + 3*x + 4;
V:= R! 5*x^4 + 6*x^3 + 6*x^2 + 3*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+3*x^2+x+6;
V1 := R! 6*x^4+x^3+5*x^2+x+5;
N1 := 0;
U2 := R! x^2+3*x;
V2 := R! 6*x^4+x^3+5*x^2+5*x+5;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + x^7 + 9*x^6 + 3*x^5 + 2*x^4 + 3*x^3 + 5*x^2 + 5*x + 3;
h:= R! 2*x^4 + 2*x^3 + 10*x^2 + 5*x + 10;
V:= R! 4*x^4 + 7*x^3 + 6*x^2 + 7*x + 6;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+x^2+7*x+2;
V1 := R! 5*x^4+2*x^3+10*x^2+5;
N1 := 0;
U2 := R! x^2+x+5;
V2 := R! 5*x^4+2*x^3+6*x^2+6;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^2*x^7 + FF.1^2*x^6 + FF.1*x^4 + FF.1^2*x^3 + x^2 + x + 1;
h:= R! FF.1*x^4 + FF.1*x^3 + FF.1^2*x^2 + FF.1^2*x;
V:= R! FF.1^2*x^4 + x^3 + x^2 + FF.1*x;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+FF.1*x^2+FF.1^2*x;
V1 := R! x^4+FF.1^2*x^3+x^2+1;
N1 := 0;
U2 := R! x^2+x;
V2 := R! x^4+FF.1^2*x^3+FF.1*x^2+FF.1^2*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 2*x^7 + 3*x^6 + x^5 + 2*x^4 + 2*x^3 + 2*x^2 + 2*x + 3;
h:= R! 4*x^4 + 2*x^3 + 4*x^2 + 3*x + 4;
V:= R! 2*x^4 + x^3 + 4*x^2 + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+3*x^2+4*x+2;
V1 := R! 4*x^4+2*x^3+4*x^2+4;
N1 := 0;
U2 := R! x^2+4;
V2 := R! 4*x^4+2*x^3+2*x^2+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1*x^7 + x^6 + FF.1^2*x^5 + x^4 + FF.1^2*x^3 + FF.1*x^2 + FF.1;
h:= R! FF.1^2*x^4 + x^3 + FF.1^2*x + 1;
V:= R! FF.1*x^4 + FF.1*x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^2+x+1;
V1 := R! x^4+x^3+FF.1*x^2+FF.1^2*x+1;
N1 := 1;
U2 := R! x+1;
V2 := R! x^4+x^3+FF.1*x^2+FF.1^2*x+1;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^4*x^8 + FF.1^2*x^7 + x^6 + FF.1^4*x^5 + FF.1^6*x^4 + x^3 + FF.1^5*x^2 + x + FF.1^3;
h:= R! x^4 + FF.1^4*x^3 + x^2 + FF.1^6*x + FF.1^3;
V:= R! FF.1^3*x^4 + FF.1^6*x^3 + FF.1^4*x^2 + FF.1^6*x;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1^5*x+FF.1^5;
V1 := R! FF.1*x^4+FF.1^3*x^3+FF.1^5*x^2+FF.1^6*x;
N1 := 1;
U2 := R! x+1;
V2 := R! FF.1*x^4+FF.1^3*x^3+FF.1^5*x^2+FF.1^2;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + 2*x^5 + 2*x^4 + 2*x^2 + x;
h:= R! 2*x^3 + x + 2;
V:= R! x^4 + x^3 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2*x;
V1 := R! 2*x^4+2*x;
N1 := 1;
U2 := R! x;
V2 := R! 2*x^4;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + 2*x^6 + x^5 + x^4 + 2*x^3 + x^2 + 2*x;
h:= R! x^3 + x^2 + x + 1;
V:= R! x^4 + 2*x^3 + 2*x^2 + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+1;
V1 := R! 2*x^4+2*x+1;
N1 := 2;
U2 := R! x^2+x;
V2 := R! 2*x^4+x;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + 2*x^4 + 2*x^3 + x^2 + x;
h:= R! 2;
V:= R! x^4 + 2*x^3 + x^2 + x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+x;
V1 := R! 2*x^4+x^3+2*x^2+2*x;
N1 := 1;
U2 := R! x;
V2 := R! 2*x^4+x^3+2*x^2+2*x;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1^2*x^7 + FF.1^2*x^6 + FF.1^6*x^5 + FF.1^7*x^4 + FF.1^7*x^3 + FF.1*x^2 + FF.1^3*x + 2;
h:= R! FF.1^6*x^3 + FF.1^7*x^2 + FF.1^5*x + FF.1^7;
V:= R! x^4 + FF.1^2*x^3 + x^2 + FF.1^6*x + FF.1^5;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^2+2;
V1 := R! 2*x^4+FF.1^5*x^2+FF.1^2;
N1 := 1;
U2 := R! x+1;
V2 := R! 2*x^4+FF.1^5*x^2+FF.1^3*x+2;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + x^6 + x^5 + 2*x^4 + 2*x^3 + x + 2;
h:= R! x^2;
V:= R! x^4 + x^3 + x^2 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2;
V1 := R! 2*x^4+2*x^3+x^2+2*x+1;
N1 := 0;
U2 := R! x+2;
V2 := R! 2*x^4+2*x^3+x^2+x;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^4*x^8 + FF.1*x^7 + FF.1^4*x^6 + FF.1^3*x^5 + x^4 + FF.1^4*x^3 + FF.1^2*x^2 + x + FF.1^4;
h:= R! x^4 + FF.1*x^3 + FF.1^5*x^2 + FF.1^2*x + FF.1^5;
V:= R! FF.1^3*x^4 + FF.1^2*x^3 + x^2 + FF.1^5*x + FF.1^4;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x;
V1 := R! FF.1*x^4+FF.1^4*x^3+FF.1^4*x^2+FF.1^3*x+FF.1^4;
N1 := 2;
U2 := R! x^2+FF.1^2*x;
V2 := R! FF.1*x^4+FF.1^4*x^3+FF.1^4*x^2+FF.1*x+FF.1^4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 10*x^7 + 5*x^6 + 5*x^5 + 2*x^3 + 3*x^2 + 6*x;
h:= R! 9*x^4 + 9*x^3 + 7*x^2 + 5*x + 5;
V:= R! 6*x^4 + 4*x^2 + 6*x + 7;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x+10;
V1 := R! 7*x^4+2*x^3;
N1 := 1;
U2 := R! x^2+3*x+1;
V2 := R! 7*x^4+2*x^3+9*x+5;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 6*x^6 + 4*x^5 + 6*x^4 + 6*x^3 + 3*x^2 + 2*x + 5;
h:= R! 2*x^4 + 6*x^3 + 6*x^2 + 3*x + 4;
V:= R! x^4 + 2*x^3 + 3*x^2 + 2*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+x;
V1 := R! 4*x^4+6*x^3+5*x^2+2*x+2;
N1 := 1;
U2 := R! x+1;
V2 := R! 4*x^4+6*x^3+5*x^2+2*x;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + x^7 + 6*x^6 + 4*x^5 + 10*x^4 + 10*x^3 + 5*x^2 + 2*x + 4;
h:= R! 9*x^4 + 10*x^3 + 8*x^2 + 8;
V:= R! 5*x^4 + 9*x^3 + 6*x^2 + 9*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+8*x^2+8*x+1;
V1 := R! 8*x^4+3*x^3+4*x^2+5*x+1;
N1 := 0;
U2 := R! x^3+4*x^2+6*x;
V2 := R! 8*x^4+3*x^3+9*x^2+7*x+10;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 10*x^8 + 2*x^7 + 3*x^6 + 9*x^5 + x^4 + 4*x^3 + 2*x^2 + x + 3;
h:= R! 8*x^4 + 3*x^3 + x^2 + 2*x + 9;
V:= R! 5*x^4 + 6*x^3 + 3*x^2 + 2*x + 8;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+6*x^2+5*x+10;
V1 := R! 9*x^4+2*x^3+5*x^2+9*x+9;
N1 := 0;
U2 := R! x^3+4*x^2+7*x+4;
V2 := R! 9*x^4+2*x^3+6*x^2+10*x+5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^6*x^8 + FF.1^5*x^7 + x^5 + FF.1^6*x^3 + FF.1^5*x^2 + FF.1^4*x + FF.1^2;
h:= R! FF.1^2*x^4 + FF.1^5*x^3 + FF.1^5*x^2 + FF.1^5*x + FF.1^3;
V:= R! FF.1^6*x^4 + FF.1^5*x^3 + FF.1^2*x^2 + FF.1^4*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1^2*x+FF.1;
V1 := R! x^4+FF.1^3*x^2+FF.1^4*x+FF.1^6;
N1 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^6*x^8 + FF.1^6*x^7 + x^6 + 2*x^5 + FF.1^6*x^4 + 2*x^3 + x^2 + FF.1*x + FF.1^7;
h:= R! x^3 + FF.1^6*x^2 + FF.1^3*x + 1;
V:= R! FF.1^3*x^4 + FF.1*x^3 + FF.1*x;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^2+FF.1^5*x+FF.1;
V1 := R! FF.1^7*x^4+FF.1^6*x^3+FF.1^2*x^2+FF.1^3*x+FF.1^6;
N1 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + x^7 + 4*x^6 + 2*x^5 + 2*x^4 + 2*x^3 + x + 3;
h:= R! 3*x^4 + 3*x^3 + 3*x^2 + 2*x + 1;
V:= R! 3*x^4 + 3*x^3 + 3*x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x+4;
V1 := R! 4*x^4+4*x^3+4*x^2+3*x+2;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + x^7 + FF.1^4*x^6 + FF.1^4*x^5 + FF.1^3*x^4 + FF.1^4*x^3 + x^2 + FF.1^6*x + 1;
h:= R! x^4 + FF.1^6*x^3 + FF.1^6*x^2 + FF.1^6*x + 1;
V:= R! FF.1^6*x^4 + FF.1^4*x^3 + FF.1*x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1^5*x+1;
V1 := R! FF.1^2*x^4+FF.1^3*x^3+FF.1^6*x^2+FF.1^4*x+1;
N1 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^3*x^8 + FF.1^2*x^7 + FF.1^2*x^6 + FF.1^4*x^5 + FF.1^5*x^4 + FF.1^3*x^2 + FF.1^3*x + FF.1^2;
h:= R! FF.1^4*x^4 + FF.1^4*x^3 + FF.1^2*x^2 + FF.1*x + FF.1^6;
V:= R! FF.1^2*x^4 + FF.1^3*x^3 + x^2 + FF.1^5*x + FF.1^4;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+x+FF.1^4;
V1 := R! FF.1*x^4+FF.1^6*x^3+FF.1^6*x^2+FF.1^3*x+FF.1^4;
N1 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^3 + 2*x;
h:= R! x + 2;
V:= R! x^4 + x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+x;
V1 := R! 2*x^4+2*x;
N1 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + FF.1*x^6 + FF.1*x^5 + FF.1^2*x^3 + FF.1^7*x^2 + x + FF.1^7;
h:= R! FF.1^2*x^3 + x + 2;
V:= R! x^4 + FF.1^7*x^3 + FF.1^6*x^2 + 2*x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x+2;
V1 := R! 2*x^4+FF.1*x^3+FF.1^2*x^2+FF.1^7;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + x^5 + x^4 + 2*x^3 + 2*x + 2;
h:= R! x^3 + 2;
V:= R! x^4 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+2;
V1 := R! 2*x^4+2*x^3+x+2;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + x^3 + FF.1*x^2 + 1;
h:= R! FF.1^2*x^4 + x^2 + FF.1;
V:= R! FF.1*x^4 + FF.1^2*x^2 + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x+FF.1^2;
V1 := R! x^4+FF.1*x^2+FF.1;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + 4*x^6 + 6*x^5 + 5*x^4 + x^3 + 5*x^2 + 3*x;
h:= R! 5*x^4 + 6*x^3 + 3*x^2 + 4;
V:= R! 4*x^4 + 2*x^3 + 3*x^2 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x+4;
V1 := R! 5*x^4+6*x^3+x^2+5*x+4;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 7*x^7 + x^6 + 10*x^5 + x^4 + 8*x^3 + 10*x^2 + 7*x + 6;
h:= R! 3*x^4 + 8*x^3 + x^2 + 6*x + 5;
V:= R! x^4 + 2*x^3 + 7*x^2 + 10*x + 10;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+4*x^2+7*x+6;
V1 := R! 7*x^4+x^3+6*x^2+6*x+7;
N1 := 0;
U2 := R! x^3+5*x^2+4*x+5;
V2 := R! 7*x^4+x^3+6*x^2+6*x+7;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 3*x^6 + 4*x^4 + 2*x^3 + 3*x^2 + 3*x + 2;
h:= R! 4*x^4 + 2*x^3 + 3*x^2 + x + 1;
V:= R! 2*x^4 + 2*x^3 + 3*x^2 + 3*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+x;
V1 := R! 4*x^4+x^3+x^2+1;
N1 := 0;
U2 := R! x^2+4*x+3;
V2 := R! 4*x^4+x^3+4*x^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1^5*x^6 + FF.1^6*x^5 + FF.1^2*x^4 + FF.1^5*x^3 + FF.1^6*x^2 + x + 1;
h:= R! FF.1^6*x^4 + FF.1^3*x^3 + FF.1^5*x^2 + FF.1^6*x;
V:= R! FF.1^4*x^4 + FF.1*x^3 + FF.1*x^2 + x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^2*x^2+FF.1^6;
V1 := R! FF.1^3*x^4+x^3+FF.1^6*x^2+FF.1^2*x+FF.1^4;
N1 := 0;
U2 := R! x^2+FF.1*x;
V2 := R! FF.1^3*x^4+x^3+FF.1^6*x^2+FF.1*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + x^6 + 3*x^5 + x^4 + 4*x^2 + 1;
h:= R! 2*x^3 + 6*x^2 + 5*x + 2;
V:= R! 2*x^4 + 6*x^3 + x^2 + 5*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+5*x;
V1 := R! 5*x^4+6*x^3+x^2+6*x+3;
N1 := 0;
U2 := R! x^2+3*x+3;
V2 := R! 5*x^4+6*x^3+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 10*x^8 + 5*x^7 + 6*x^5 + 6*x^4 + 4*x^3 + 9*x^2 + 7*x + 3;
h:= R! 3*x^4 + 7*x^3 + 5*x^2 + x + 2;
V:= R! 2*x^4 + 5*x^3 + x^2 + 4*x;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+10*x+5;
V1 := R! 6*x^4+10*x^3+5*x^2+6*x+10;
N1 := 0;
U2 := R! x^3+2*x;
V2 := R! 6*x^4+10*x^3+4*x^2+6*x+8;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 10*x^8 + 5*x^7 + 6*x^5 + 6*x^4 + 4*x^3 + 9*x^2 + 7*x + 3;
h:= R! 3*x^4 + 7*x^3 + 5*x^2 + x + 2;
V:= R! 2*x^4 + 5*x^3 + x^2 + 4*x;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+10*x+5;
V1 := R! 6*x^4+10*x^3+5*x^2+7*x+1;
N1 := 0;
U2 := R! x^3+3*x^2+4*x;
V2 := R! 6*x^4+10*x^3+10*x^2+3*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1^2*x^7 + FF.1*x^6 + FF.1^2*x^5 + FF.1*x^4 + FF.1^2*x^3 + x;
h:= R! x^4 + FF.1^2*x + FF.1;
V:= R! FF.1^2*x^4 + FF.1^2*x^3 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+FF.1^2*x^2+FF.1*x;
V1 := R! FF.1*x^4+FF.1^2*x^3+x^2+FF.1*x;
N1 := 0;
U2 := R! x^2+FF.1^2*x;
V2 := R! FF.1*x^4+FF.1^2*x^3+x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 4*x^7 + 5*x^6 + x^5 + 6*x^4 + 4*x^3 + 4*x + 3;
h:= R! 2*x^4 + 3*x^2 + x + 2;
V:= R! x^4 + x^3 + 2*x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+4*x;
V1 := R! 4*x^4+6*x^3+2*x^2+x+4;
N1 := 0;
U2 := R! x^3+2*x^2+4*x;
V2 := R! 4*x^4+6*x^3+4*x^2+x+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 3*x^7 + 4*x^6 + x^4 + 4*x^3 + 4*x^2 + 4*x + 3;
h:= R! x^3 + 2*x^2 + 3*x;
V:= R! 2*x^4 + 4*x^3 + 4*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+4;
V1 := R! 3*x^4+3*x^2+3*x+4;
N1 := 0;
U2 := R! x^3+x^2+x+1;
V2 := R! 3*x^4+4*x+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^2*x^7 + x^6 + x^5 + x^4 + FF.1^2*x^3 + FF.1^4*x^2 + FF.1^3*x + FF.1^2;
h:= R! x^4 + FF.1^4*x^3 + FF.1^5*x^2 + FF.1^4*x + FF.1^3;
V:= R! FF.1^5*x^4 + FF.1*x^2 + FF.1*x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1^6*x+1;
V1 := R! FF.1^4*x^4+FF.1^4*x^3+FF.1^6*x^2+x+FF.1^4;
N1 := 0;
U2 := R! x^3+FF.1^6*x^2+FF.1^3*x+FF.1^5;
V2 := R! FF.1^4*x^4+FF.1^4*x^3+FF.1*x+FF.1^4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 10*x^7 + 2*x^6 + 8*x^5 + 5*x^4 + 10*x^3 + 8*x^2 + 9*x + 4;
h:= R! 10*x^4 + 4*x^3 + x^2 + 4*x + 2;
V:= R! 2*x^4 + 8*x^3 + x^2 + 9*x + 6;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+9*x^2+9*x;
V1 := R! 10*x^4+10*x^3+5*x^2+6;
N1 := 0;
U2 := R! x^2+5*x+4;
V2 := R! 10*x^4+10*x^3+9*x^2+7*x+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 6*x^7 + x^6 + 3*x^5 + 5*x^4 + 5*x^3 + 5*x^2 + 2*x;
h:= R! 3*x^4 + x^3 + x^2 + 3*x + 2;
V:= R! x^4 + x^3 + x^2 + 2*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+4*x^2+x+1;
V1 := R! 3*x^4+5*x^3+5*x^2+5*x+5;
N1 := 0;
U2 := R! x^2+4*x;
V2 := R! 3*x^4+5*x^3+5*x^2+5*x+5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + x^5 + FF.1*x^4 + x^3 + FF.1^2*x^2 + FF.1*x + 1;
h:= R! FF.1^2*x^4 + FF.1^2*x^3 + FF.1^2*x^2 + x;
V:= R! FF.1*x^4 + FF.1*x^3 + x^2 + FF.1*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^2+x+1;
V1 := R! x^4+x^3+FF.1*x^2+FF.1^2*x+FF.1^2;
N1 := 0;
U2 := R! x+FF.1^2;
V2 := R! x^4+x^3+FF.1*x^2+FF.1^2*x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^5 + 2*x^4 + 2*x^2 + 2*x;
h:= R! 2*x^3 + 2;
V:= R! x^4 + 2*x^3 + 2*x^2 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2;
V1 := R! 2*x^4+2*x^3+x^2;
N1 := 0;
U2 := R! x+1;
V2 := R! 2*x^4+2*x^3+x^2+2*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^6 + 2*x^4 + 1;
h:= R! x^3 + 2*x^2 + 2*x + 1;
V:= R! x^4 + x^3 + 2*x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2;
V1 := R! 2*x^4+x^3+2*x^2+2*x+2;
N1 := 0;
U2 := R! x+1;
V2 := R! 2*x^4+x^3+2*x^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^6 + 2*x^5 + 2*x^4 + x^2 + 2;
h:= R! 2*x^3 + 2*x + 2;
V:= R! x^4 + 2*x^3 + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+2;
V1 := R! 2*x^4+2*x^3+x;
N1 := 0;
U2 := R! x^2+2;
V2 := R! 2*x^4+2*x^3+x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^6 + x^5 + x^4 + 2*x^3 + x^2 + 2;
h:= R! x^3 + x + 2;
V:= R! x^4 + x^3 + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+1;
V1 := R! 2*x^4+x^3+2*x;
N1 := 0;
U2 := R! x^2+x;
V2 := R! 2*x^4+x^3+2*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + 2*x^5 + x^4 + 2*x^3 + x^2 + 1;
h:= R! x^2 + 2*x;
V:= R! x^4 + x^3 + 2*x^2 + 2*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2*x;
V1 := R! 2*x^4+2*x^3+2*x+1;
N1 := 0;
U2 := R! x+2;
V2 := R! 2*x^4+2*x^3+2*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + 2*x^5 + 2*x^3 + x^2 + x;
h:= R! 2*x^3 + 2*x^2 + 2*x + 2;
V:= R! x^4 + 2*x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2;
V1 := R! 2*x^4+x^3+2*x^2+x;
N1 := 1;
U2 := R! x^2+2;
V2 := R! 2*x^4+x^3+2*x^2+x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 2*x^7 + 3*x^5 + 3*x^4 + 3*x^2 + 4*x + 1;
h:= R! x^4 + 3*x + 1;
V:= R! x^4 + 4*x^3 + 3*x^2 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x;
V1 := R! 3*x^4+x^3+2*x^2+2;
N1 := 0;
U2 := R! x^2+3*x;
V2 := R! 3*x^4+x^3+2*x^2+x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^6*x^8 + FF.1^2*x^7 + FF.1^6*x^6 + FF.1*x^5 + 2*x^4 + FF.1^3*x^2 + FF.1^2*x + 2;
h:= R! FF.1^3*x^4 + x^3 + x^2 + 2*x + FF.1^7;
V:= R! FF.1^2*x^4 + FF.1*x^2 + FF.1*x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^2+FF.1*x+FF.1^6;
V1 := R! x^4+2*x^3+FF.1^6*x^2+FF.1^5*x+FF.1^6;
N1 := 1;
U2 := R! x^2+FF.1*x+FF.1^6;
V2 := R! x^4+2*x^3+FF.1^6*x^2+FF.1^5*x+FF.1^6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 5*x^7 + 2*x^6 + 3*x^5 + 3*x^4 + 5*x^2 + x + 1;
h:= R! 2*x^2 + 5*x + 3;
V:= R! 2*x^4 + 3*x^3 + 6*x^2 + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+5*x+6;
V1 := R! 5*x^4+4*x^3+6*x^2+6*x+3;
N1 := 0;
U2 := R! x^2+5*x+6;
V2 := R! 5*x^4+4*x^3+6*x^2+4*x+5;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 10*x^8 + 7*x^7 + 2*x^6 + 6*x^5 + 5*x^4 + 9*x^3 + 4*x^2 + 4*x + 9;
h:= R! 3*x^4 + 8*x^3 + 10*x^2 + 2*x + 1;
V:= R! 2*x^4 + 5*x^3 + 7*x^2 + 5*x + 10;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+4*x;
V1 := R! 6*x^4+9*x^3+5*x^2+x+4;
N1 := 1;
U2 := R! x^2+8;
V2 := R! 6*x^4+9*x^3+5*x^2+3*x+4;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + FF.1^7*x^7 + FF.1^3*x^4 + FF.1^7*x^3 + FF.1*x^2 + x + FF.1^3;
h:= R! FF.1^6*x^4 + FF.1^2*x^3 + FF.1^2*x^2 + FF.1^6*x + 2;
V:= R! FF.1^3*x^4 + FF.1^6*x^3 + FF.1*x^2 + FF.1*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^2+FF.1^5*x+FF.1^6;
V1 := R! FF.1^5*x^4+FF.1^7*x^2+2*x+2;
N1 := 1;
U2 := R! x^3+FF.1^2*x^2+FF.1^7*x+FF.1^7;
V2 := R! FF.1^5*x^4+FF.1^5*x^2+2*x+FF.1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 4*x^6 + 3*x^5 + x^3 + 4*x + 3;
h:= R! 3*x^4 + x^2 + 2*x + 2;
V:= R! 3*x^4 + 4*x^2 + 3*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+4*x+3;
V1 := R! 4*x^4+4*x+4;
N1 := 1;
U2 := R! x^2+4*x;
V2 := R! 4*x^4+3*x+2;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 4*x^7 + 4*x^6 + 2*x^5 + 6*x^4 + x^3 + 6*x + 1;
h:= R! 6*x^4 + 3*x^3 + 6*x + 2;
V:= R! 2*x^4 + 4*x^3 + 6*x^2 + 5*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+3*x+3;
V1 := R! 6*x^4+x^2+x+5;
N1 := 1;
U2 := R! x^2+5*x;
V2 := R! 6*x^4+x^2+6*x+3;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 3*x^7 + 3*x^5 + 3*x^4 + 3*x^3 + 2*x^2 + x + 1;
h:= R! 4*x^2 + 3*x;
V:= R! 2*x^4 + 2*x^3 + 2*x^2 + 4*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+x;
V1 := R! 3*x^4+3*x^3+4*x^2+4*x+4;
N1 := 1;
U2 := R! x^2+4;
V2 := R! 3*x^4+3*x^3+4*x^2+4*x+4;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 4*x^7 + 3*x^5 + 3*x^4 + 3*x + 3;
h:= R! x^4 + x^3 + x^2 + 2*x + 3;
V:= R! x^4 + x^3 + 4*x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+x;
V1 := R! 3*x^4+3*x^3+3*x+4;
N1 := 1;
U2 := R! x^2+4*x;
V2 := R! 3*x^4+3*x^3+3*x+4;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^6*x^6 + FF.1^2*x^5 + FF.1^4*x^3 + FF.1^6*x^2 + x + FF.1^4;
h:= R! FF.1^6*x^4 + FF.1*x^3 + FF.1*x + FF.1^4;
V:= R! FF.1^2*x^4 + FF.1^4*x^3 + FF.1^6*x + FF.1^4;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1^4*x+FF.1^5;
V1 := R! x^4+FF.1^2*x^3+x+FF.1^3;
N1 := 1;
U2 := R! x^2+FF.1^4*x+FF.1^2;
V2 := R! x^4+FF.1^2*x^3+FF.1^5*x+FF.1^3;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + x^6 + 4*x^4 + 4*x^3 + x^2 + 4*x + 4;
h:= R! 3*x^4 + 4*x^3 + x + 3;
V:= R! 3*x^4 + 2*x^3 + x^2 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+1;
V1 := R! 4*x^4+4*x^3+4*x^2+1;
N1 := 0;
U2 := R! x^2+x;
V2 := R! 4*x^4+4*x^3+4*x^2+1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^2*x^7 + FF.1*x^6 + FF.1^2*x^4 + FF.1*x^2 + FF.1*x + 1;
h:= R! FF.1*x^4 + x^3 + x^2 + FF.1^2;
V:= R! FF.1^2*x^4 + FF.1^2*x^2 + FF.1*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+1;
V1 := R! x^4+x^3+x^2+FF.1^2*x+FF.1;
N1 := 0;
U2 := R! x^2+FF.1*x+FF.1^2;
V2 := R! x^4+x^3+FF.1*x^2+FF.1*x;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^2*x^7 + x^6 + FF.1^4*x^5 + FF.1*x^4 + FF.1^2*x^2 + FF.1^3*x + 1;
h:= R! FF.1^6*x^4 + FF.1^6*x^3 + FF.1^5*x^2 + x + FF.1^2;
V:= R! FF.1^2*x^4 + FF.1^5*x^3 + x^2 + FF.1^3*x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^5*x^2+FF.1;
V1 := R! x^4+FF.1*x^3+FF.1^3*x^2+x+FF.1^6;
N1 := 0;
U2 := R! x^3+FF.1^2*x+FF.1^3;
V2 := R! x^4+FF.1*x^3+FF.1^3*x^2+x+FF.1^6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 6*x^8 + x^7 + 9*x^6 + 6*x^5 + 4*x^4 + 9*x^3 + 2*x^2 + 3*x + 3;
h:= R! 10*x^4 + 5*x^3 + 3*x^2 + x + 10;
V:= R! 3*x^4 + 6*x^3 + 8*x + 6;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+2*x^2+10*x+9;
V1 := R! 9*x^4+10*x^2+8*x+3;
N1 := 0;
U2 := R! x^3+4*x+6;
V2 := R! 9*x^4+10;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^4*x^8 + FF.1^5*x^7 + FF.1^3*x^6 + x^5 + FF.1^2*x^4 + FF.1^4*x^3 + FF.1^6*x^2 + x + FF.1^2;
h:= R! x^4 + FF.1^4*x^3 + FF.1^4*x^2 + FF.1*x + FF.1^4;
V:= R! FF.1^3*x^4 + FF.1^4*x^3 + FF.1*x^2 + FF.1*x + FF.1^4;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^5*x^2+FF.1^4*x;
V1 := R! FF.1*x^4+FF.1^6*x^2+FF.1^5*x+FF.1^3;
N1 := 0;
U2 := R! x^3+FF.1^2*x^2+FF.1^6;
V2 := R! FF.1*x^4+FF.1^5*x^2+FF.1^2*x+FF.1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 6*x^7 + 4*x^6 + x^4 + x^3 + 5*x^2 + 6*x + 3;
h:= R! 3*x^4 + 4*x^3 + 2*x^2 + 2*x + 5;
V:= R! 5*x^4 + 6*x^2 + 6*x + 5;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+5*x^2+6*x;
V1 := R! 6*x^4+3*x^3+6*x^2+5*x+3;
N1 := 0;
U2 := R! x^3+6*x;
V2 := R! 6*x^4+3*x^3+3*x^2+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^4*x^7 + FF.1^5*x^6 + FF.1*x^5 + x^4 + FF.1^2*x^3 + FF.1^5*x^2 + FF.1^3*x + FF.1^4;
h:= R! FF.1^4*x^4 + FF.1^4*x^3 + FF.1*x^2 + FF.1^3*x;
V:= R! FF.1^6*x^4 + FF.1^2*x^3 + FF.1^2*x^2 + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^6*x^2+FF.1^4;
V1 := R! FF.1^3*x^4+FF.1*x^3+FF.1^2*x^2+FF.1^6*x;
N1 := 0;
U2 := R! x^3+FF.1^5*x^2+FF.1^4*x;
V2 := R! FF.1^3*x^4+FF.1*x^3+FF.1^3*x^2+FF.1^4*x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 5*x^7 + x^6 + 6*x^5 + 6*x^4 + 2*x^3 + 3*x^2 + 2*x;
h:= R! 3*x^3 + 6*x^2 + 6*x + 2;
V:= R! x^4 + x^3 + 6*x^2 + 3*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+6*x^2+5*x+2;
V1 := R! 6*x^4+3*x^3+2*x^2+2*x;
N1 := 0;
U2 := R! x^3+4*x^2+2*x;
V2 := R! 6*x^4+3*x^3+4*x^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^3*x^8 + FF.1^7*x^7 + FF.1^5*x^5 + FF.1^3*x^3 + 2*x^2 + FF.1^5*x + 1;
h:= R! x^4 + FF.1^7*x^3 + FF.1*x^2 + FF.1^5*x + FF.1^5;
V:= R! FF.1*x^4 + FF.1^7*x^3 + FF.1^7*x^2 + FF.1^3;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^6*x^2+FF.1^2*x+1;
V1 := R! FF.1^6*x^4+FF.1^7*x^3+FF.1^7*x^2+FF.1*x+1;
N1 := 0;
U2 := R! x^3+FF.1^3*x^2+FF.1^7*x+2;
V2 := R! FF.1^6*x^4+FF.1^7*x^3+x^2+FF.1^7*x+FF.1^5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 2*x^7 + FF.1^5*x^6 + FF.1^5*x^5 + FF.1^3*x^4 + x^3 + x^2 + FF.1^3*x + FF.1^2;
h:= R! FF.1^6*x^4 + 2*x^3 + FF.1*x^2 + FF.1^3*x + 2;
V:= R! FF.1^3*x^4 + FF.1^5*x^3 + FF.1^7*x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1*x^2+FF.1^3*x+FF.1^6;
V1 := R! FF.1^5*x^4+FF.1^2*x^3+FF.1^2*x+2;
N1 := 0;
U2 := R! x^3+FF.1^6*x+FF.1;
V2 := R! FF.1^5*x^4+FF.1^2*x^3+FF.1^7*x^2+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + FF.1^5*x^7 + FF.1^6*x^6 + FF.1^6*x^5 + FF.1^4*x^4 + x^3 + x^2 + x + FF.1;
h:= R! FF.1^4*x^4 + x^3 + FF.1^2*x^2 + FF.1^6*x + FF.1^2;
V:= R! FF.1^5*x^4 + FF.1^5*x^2 + FF.1^5*x + FF.1^4;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+x^2+FF.1*x;
V1 := R! x^4+x^3+FF.1^4*x^2+x+FF.1^3;
N1 := 0;
U2 := R! x^3+FF.1^2*x^2+x+FF.1;
V2 := R! x^4+x^3+FF.1^4*x^2+FF.1^4*x+FF.1^6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 9*x^8 + 4*x^6 + 3*x^5 + 9*x^4 + 8*x^3 + 10*x^2 + 5*x + 10;
h:= R! x^4 + 8*x^2 + 8*x + 9;
V:= R! 4*x^4 + 3*x^2 + 9*x + 8;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+2*x^2+2*x+4;
V1 := R! 6*x^4+10*x^2+7*x+4;
N1 := 0;
U2 := R! x^3+3*x^2+4*x;
V2 := R! 6*x^4+9*x^2+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^7*x^8 + FF.1^3*x^7 + FF.1^5*x^6 + FF.1^6*x^5 + FF.1^3*x^4 + FF.1^2*x^3 + FF.1^2*x^2 + FF.1^7*x;
h:= R! FF.1^2*x^4 + FF.1^7*x^3 + 2*x + FF.1;
V:= R! FF.1^3*x^4 + 2*x^3 + FF.1^3*x^2 + FF.1^5*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^5*x^2+FF.1^7;
V1 := R! x^4+FF.1^6*x^3+FF.1^6*x^2+FF.1^2*x+FF.1^5;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 3*x^7 + 6*x^6 + 3*x^5 + 3*x^4 + 5*x^3 + x^2 + 4*x;
h:= R! 5*x^4 + 3*x^3 + 3*x^2 + 2;
V:= R! 3*x^4 + 2*x^3 + 2*x^2 + x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+x^2+5*x;
V1 := R! 6*x^4+2*x^3+6*x^2+3*x+5;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 3*x^7 + 6*x^6 + 3*x^5 + 3*x^4 + 5*x^3 + x^2 + 4*x;
h:= R! 5*x^4 + 3*x^3 + 3*x^2 + 2;
V:= R! 3*x^4 + 2*x^3 + 2*x^2 + x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! 1;
V1 := R! 6*x^4+2*x^3+2*x^2+6*x+3;
N1 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^6 + 2*x^5 + 2*x^4 + 2*x^2 + 2*x + 2;
h:= R! x^3 + x + 1;
V:= R! x^4 + x^3 + x^2 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! 1;
V1 := R! 2*x^4+x^3+2*x^2+1;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1^2*x^7 + x^6 + FF.1^2*x^5 + FF.1^2*x^2 + x + 1;
h:= R! x^4 + FF.1*x^2 + x + FF.1;
V:= R! FF.1^2*x^4 + FF.1^2*x^3 + FF.1*x^2 + x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! 1;
V1 := R! FF.1*x^4+FF.1^2*x^3;
N1 := 3;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^6*x^8 + FF.1^2*x^7 + FF.1^4*x^6 + FF.1^3*x^5 + FF.1^3*x^4 + FF.1^2*x^2 + FF.1^5*x + 1;
h:= R! FF.1^2*x^4 + x^3 + FF.1^5*x^2 + FF.1^3*x + FF.1^2;
V:= R! FF.1^6*x^4 + FF.1^5*x^3 + x^2 + FF.1^4*x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x+FF.1^6;
V1 := R! x^4+FF.1^4*x^3+FF.1^4*x^2+FF.1^6*x;
N1 := 0;
U2 := R! x^2+FF.1^6*x+FF.1^2;
V2 := R! x^4+FF.1^4*x^3+FF.1^4*x^2+FF.1^2*x+FF.1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^2*x^7 + x^6 + x^5 + x^3 + x^2 + FF.1^2;
h:= R! FF.1*x^4 + x^3 + x^2 + FF.1^2*x + FF.1;
V:= R! FF.1^2*x^4 + x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^2+FF.1^2*x;
V1 := R! x^4+x^3+FF.1*x+1;
N1 := 0;
U2 := R! x^2+FF.1^2*x;
V2 := R! x^4+x^3+FF.1*x+1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + 2*x^6 + x + 2;
h:= R! 2*x^3 + 2*x + 1;
V:= R! x^4 + x^2 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2*x;
V1 := R! 2*x^4+x^3+2*x^2+2*x+1;
N1 := 0;
U2 := R! 1;
V2 := R! 2*x^4+x^3+2*x^2+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + FF.1^5*x^7 + FF.1^6*x^6 + FF.1^7*x^5 + FF.1^6*x^4 + x^3 + 2;
h:= R! FF.1^2*x^4 + FF.1^2*x^3 + FF.1^6*x^2 + x + 2;
V:= R! FF.1*x^4 + 2*x^3 + FF.1^5*x^2 + FF.1^6*x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! 1;
V1 := R! FF.1^7*x^4+FF.1^5*x^3+FF.1^3*x^2+FF.1*x+FF.1^5;
N1 := 0;
U2 := R! x^2+FF.1^2*x;
V2 := R! FF.1^7*x^4+FF.1^5*x^3+FF.1^3*x^2+FF.1^3*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1^2*x^6 + FF.1^2*x^4 + FF.1^2*x^2 + FF.1^2*x + FF.1;
h:= R! FF.1^2*x^4 + FF.1*x^3 + FF.1^2*x^2 + FF.1^2*x + 1;
V:= R! FF.1*x^4 + x^3 + FF.1*x^2 + FF.1*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! 1;
V1 := R! x^4+FF.1^2*x^3+x^2+x;
N1 := 0;
U2 := R! x^2+FF.1*x+FF.1^2;
V2 := R! x^4+FF.1^2*x^3+x^2+x+FF.1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 3*x^7 + 2*x^6 + 2*x^5 + 2*x^4 + 3*x + 3;
h:= R! 3*x^4 + 2*x^3 + 3*x;
V:= R! 3*x^4 + 3*x^3 + 3*x^2 + x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! 1;
V1 := R! 4*x^4+2*x^2+x+1;
N1 := 0;
U2 := R! x^2+x+3;
V2 := R! 4*x^4+2*x^2+x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^5 + 2*x^3 + 2*x^2 + 2*x + 2;
h:= R! x^3 + 2*x^2 + 1;
V:= R! x^4 + x^3 + x^2 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+x;
V1 := R! 2*x^4+x^3+2*x+1;
N1 := 0;
U2 := R! 1;
V2 := R! 2*x^4+x^3+2*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1^3*x^7 + FF.1^7*x^6 + FF.1*x^5 + 2*x^4 + FF.1^2*x^3 + FF.1^5*x + FF.1^3;
h:= R! 2*x^4 + FF.1^5*x^3 + FF.1^3*x^2 + FF.1*x + 1;
V:= R! FF.1^7*x^4 + FF.1*x^3 + FF.1^3*x^2 + FF.1^5*x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^2+2*x;
V1 := R! FF.1^6*x^4+FF.1^3*x^2+FF.1^6*x+FF.1^6;
N1 := 0;
U2 := R! x^2+2*x+2;
V2 := R! FF.1^6*x^4+FF.1^3*x^2+FF.1^6*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 3*x^7 + 4*x^5 + 3*x^4 + 2*x^3 + 3*x^2 + 3*x + 2;
h:= R! x^4 + 3*x^3 + 3*x^2;
V:= R! x^4 + 4*x^2 + 4*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+1;
V1 := R! 3*x^4+2*x^3+3*x^2+x+3;
N1 := 0;
U2 := R! 1;
V2 := R! 3*x^4+2*x^3+3*x^2+x+4;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + x^6 + 2*x^5 + x^4 + 2*x^3 + 2*x^2 + 2*x;
h:= R! 2*x^2 + 2*x + 2;
V:= R! x^4 + 2*x^3 + 2*x^2 + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2*x;
V1 := R! 2*x^4+x^3+2*x^2+x;
N1 := 1;
U2 := R! 1;
V2 := R! 2*x^4+x^3+2*x^2+x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + x^5 + x^4 + x^3 + x;
h:= R! x^3 + x^2 + x;
V:= R! x^4 + 2*x^3 + x^2 + x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2;
V1 := R! 2*x^4+x^2+x+1;
N1 := 0;
U2 := R! x^2+2*x;
V2 := R! 2*x^4+x^2+2*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^6 + 2*x^5 + 2*x^4 + x^2 + x + 1;
h:= R! 2*x^3 + x;
V:= R! x^4 + 2*x^3 + x^2 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2*x;
V1 := R! 2*x^4+2*x^3+2*x^2+2*x+1;
N1 := 0;
U2 := R! x^2+x;
V2 := R! 2*x^4+2*x^3+2*x^2+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + 3*x^6 + 3*x^5 + 10*x^4 + 8*x^3 + 2*x^2 + x + 1;
h:= R! x^4 + 4*x^3 + 4*x + 4;
V:= R! 3*x^4 + 2*x^2 + 7*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+6*x+8;
V1 := R! 7*x^4+7*x^3+9*x^2+8*x+8;
N1 := 0;
U2 := R! x^2+8*x+1;
V2 := R! 7*x^4+7*x^3+9*x^2+9*x+10;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1^2*x^6 + x^4 + FF.1^2*x^3 + FF.1*x + 1;
h:= R! FF.1^2*x^4 + x^3 + x^2 + x;
V:= R! FF.1*x^4 + FF.1^2*x^3 + FF.1*x;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^2+FF.1*x;
V1 := R! x^4+FF.1*x^3+x^2+FF.1^2*x+1;
N1 := 0;
U2 := R! x^2+FF.1*x+FF.1^2;
V2 := R! x^4+FF.1*x^3+x^2+FF.1^2*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^2*x^7 + FF.1*x^6 + FF.1^2*x^5 + x^4 + FF.1*x^3 + x^2 + FF.1^2*x;
h:= R! FF.1*x^4 + FF.1*x^3 + x^2 + FF.1^2*x + FF.1;
V:= R! FF.1^2*x^4 + x^3 + x^2 + x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^2+x;
V1 := R! x^4+FF.1^2*x^3+FF.1*x;
N1 := 0;
U2 := R! x^2+FF.1*x;
V2 := R! x^4+FF.1^2*x^3+FF.1*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1^2*x^7 + x^6 + FF.1^2*x^5 + x^4 + x^3 + FF.1*x^2;
h:= R! x^4 + FF.1^2*x^3 + FF.1^2*x^2 + FF.1^2*x + FF.1;
V:= R! FF.1^2*x^4 + x^3 + x^2 + x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^2+FF.1^2*x;
V1 := R! FF.1*x^4+FF.1*x^3+FF.1*x^2+x;
N1 := 0;
U2 := R! x^2+x+1;
V2 := R! FF.1*x^4+FF.1*x^3+FF.1*x^2+x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 4*x^7 + 6*x^6 + x^5 + 6*x^3 + 4*x + 2;
h:= R! 5*x^4 + 4*x^3 + x^2 + 5*x + 6;
V:= R! 4*x^4 + 5*x^3 + x^2 + 3*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+4*x;
V1 := R! 5*x^4+5*x^3+5*x^2+x+2;
N1 := 0;
U2 := R! x^2+6*x+1;
V2 := R! 5*x^4+5*x^3+5*x^2+3*x+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 3*x^7 + 4*x^6 + 3*x^5 + 4*x^4 + 4*x^3 + x^2 + 2*x + 1;
h:= R! 4*x^3 + 2*x + 4;
V:= R! x^4 + 2*x^3 + x^2 + 4*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+2*x;
V1 := R! 4*x^4+4*x^3+4*x^2+3*x+3;
N1 := 0;
U2 := R! 1;
V2 := R! 4*x^4+4*x^3+4*x^2+4*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + x^5 + 2*x^4 + x^2 + 2*x + 1;
h:= R! 2*x^3 + x^2 + 2*x;
V:= R! x^4 + x^3 + x^2 + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2;
V1 := R! 2*x^4+x^2+1;
N1 := 0;
U2 := R! x+1;
V2 := R! 2*x^4+x^2+x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^4*x^8 + FF.1^3*x^7 + x^6 + FF.1^3*x^5 + FF.1^6*x^2 + FF.1^5*x + FF.1^2;
h:= R! x^4 + FF.1^6*x^3 + FF.1^3*x^2 + FF.1^3*x + FF.1;
V:= R! FF.1^3*x^4 + FF.1^5*x^3 + x^2 + x + FF.1^3;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+x+FF.1^4;
V1 := R! FF.1*x^4+FF.1*x^3+FF.1*x^2+FF.1^5*x+FF.1^5;
N1 := 0;
U2 := R! x+FF.1;
V2 := R! FF.1*x^4+FF.1*x^3+FF.1*x^2+FF.1*x+FF.1^4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + x^7 + 2*x^6 + FF.1^6*x^5 + FF.1^6*x^4 + FF.1*x^3 + FF.1*x^2 + FF.1^2*x + FF.1^5;
h:= R! FF.1^3*x^4 + FF.1^5*x^3 + FF.1^6*x + FF.1^6;
V:= R! FF.1*x^4 + FF.1^5*x^3 + FF.1^7*x^2 + FF.1^7*x;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^2+FF.1^5*x+FF.1^7;
V1 := R! 2*x^4+FF.1^5*x^3+FF.1^3*x^2+FF.1^7*x+FF.1;
N1 := 0;
U2 := R! x^2+FF.1^5*x;
V2 := R! 2*x^4+FF.1^5*x^3+FF.1^3*x^2+FF.1^7*x+FF.1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 6*x^6 + 4*x^5 + 9*x^4 + 5*x^3 + 4*x^2 + 3*x + 6;
h:= R! x^4 + 10*x^3 + 9*x^2 + 4*x;
V:= R! 3*x^4 + 2*x^3 + 3*x^2 + 6*x + 5;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+10*x+10;
V1 := R! 7*x^4+10*x^3+10*x^2+2*x+9;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 6*x^6 + 5*x^5 + 4*x^3 + 4*x^2 + x + 6;
h:= R! 4*x^4 + 3*x^3 + 3*x^2 + 2;
V:= R! 4*x^4 + 6*x^3 + 2*x^2 + 4*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+5*x;
V1 := R! 6*x^4+5*x^3+2*x^2+6;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 6*x^6 + 4*x^5 + 6*x^4 + 6*x^3 + 3*x^2 + 2*x + 5;
h:= R! 2*x^4 + 6*x^3 + 6*x^2 + 3*x + 4;
V:= R! x^4 + 2*x^3 + 3*x^2 + 2*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+2*x;
V1 := R! 4*x^4+6*x^3+5*x^2+x+1;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + 2*x^6 + 2*x^5 + 2*x^4 + 2*x^3 + 2*x^2 + x + 2;
h:= R! 2*x^3 + x^2 + x;
V:= R! x^4 + x^3 + 2*x^2 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2;
V1 := R! 2*x^4+1;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 2*x^7 + 4*x^6 + 4*x^3 + 4*x + 1;
h:= R! 2*x^4 + 2*x^3 + x^2 + 3*x + 1;
V:= R! x^4 + 2*x^2 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+3*x;
V1 := R! 2*x^4+3*x^3+2*x^2+x+2;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 3*x^7 + 3*x^5 + 3*x^4 + 3*x^3 + 2*x^2 + x + 1;
h:= R! 4*x^2 + 3*x;
V:= R! 2*x^4 + 2*x^3 + 2*x^2 + 4*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+x;
V1 := R! 3*x^4+3*x^3+4*x^2+4*x+4;
N1 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^6 + x^4 + 2*x^3 + 2*x^2 + x;
h:= R! 2*x^3 + x^2 + x;
V:= R! x^4 + 2*x^3 + x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+x;
V1 := R! 2*x^4+2*x^3+x^2+2*x;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^3*x^7 + FF.1^3*x^6 + FF.1^5*x^5 + FF.1^2*x^4 + FF.1^2*x^2 + x + FF.1;
h:= R! FF.1^7*x^3 + FF.1^2*x^2 + FF.1^7*x + FF.1^2;
V:= R! FF.1*x^4 + x^3 + x^2 + FF.1^7;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^2+x+FF.1^5;
V1 := R! FF.1^5*x^4+FF.1^5*x^3+FF.1^3*x^2+FF.1^5*x+1;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 2*x^7 + 6*x^6 + 2*x^5 + 5*x^4 + 6*x^3 + 4*x^2 + 6*x;
h:= R! 3*x^4 + 4*x^3 + 5*x^2 + 5*x;
V:= R! x^4 + x^3 + 2*x^2 + 3*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+3*x+3;
V1 := R! 3*x^4+2*x^3+6*x;
N1 := 0;
U2 := R! x^3+x^2+x;
V2 := R! 3*x^4+2*x^3+2*x^2+5*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 4*x^7 + 5*x^5 + 4*x^4 + x^3 + 2*x^2 + 5*x + 1;
h:= R! 4*x^3 + 6*x^2 + 2*x + 5;
V:= R! x^4 + 4*x^2 + 4*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+3*x;
V1 := R! 6*x^4+3*x^3+4*x^2+4*x+5;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 3*x^7 + x^6 + 3*x^5 + 2*x^4 + x^3 + x^2 + x;
h:= R! 2*x^3 + x + 2;
V:= R! 2*x^4 + x^3 + 2*x^2 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+4*x;
V1 := R! 3*x^4+2*x^3+3*x^2+3;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 7*x^8 + 5*x^7 + 10*x^6 + 5*x^5 + 5*x^4 + 2*x^3 + 7*x^2 + 4*x + 7;
h:= R! 6*x^4 + 4*x^3 + 5*x^2 + 10*x + 2;
V:= R! x^4 + 7*x^3 + 2*x^2 + 7*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+3*x^2+5*x+3;
V1 := R! 4*x^4+3*x^2+4*x+2;
N1 := 0;
U2 := R! x^3+3*x^2+6*x+7;
V2 := R! 4*x^4+5*x^2+5*x+7;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + x^7 + FF.1*x^4 + x^2 + 1;
h:= R! FF.1*x^4 + FF.1^2*x^3 + FF.1*x^2 + FF.1*x + 1;
V:= R! FF.1^2*x^4 + FF.1*x^3 + FF.1*x^2 + FF.1*x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+FF.1*x^2+FF.1^2*x;
V1 := R! x^4+x^3+FF.1*x^2+x+FF.1^2;
N1 := 0;
U2 := R! x;
V2 := R! x^4+x^3+FF.1^2;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 4*x^6 + 4*x^5 + x^4 + x^3 + 2*x^2 + 2*x;
h:= R! 3*x^4 + x^3 + x^2 + x;
V:= R! 3*x^4 + 3*x^3 + x^2 + 4*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x+3;
V1 := R! 4*x^4+x^3+3*x^2+3;
N1 := 2;
U2 := R! x^3+4*x^2+x+4;
V2 := R! 4*x^4+x^3+3*x^2+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 3*x^7 + 6*x^6 + 2*x^5 + 3*x^3 + 6*x^2 + 4*x + 4;
h:= R! 3*x^4 + x^3 + 6*x^2 + 2*x;
V:= R! x^4 + 6*x^3 + 4*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+6*x^2+x;
V1 := R! 3*x^4+6*x^2+2;
N1 := 0;
U2 := R! x+4;
V2 := R! 3*x^4+x^2+x+2;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 2*x^7 + x^6 + 4*x^5 + 5*x^3 + 6*x^2 + 5;
h:= R! 4*x^3 + 5*x^2 + 2*x + 3;
V:= R! 2*x^4 + 2*x^3 + x + 6;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x+3;
V1 := R! 5*x^4+x^3+2*x^2+4*x+2;
N1 := 2;
U2 := R! x^3+6*x^2+x;
V2 := R! 5*x^4+x^3+5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 5*x^6 + 2*x^5 + 3*x^4 + 9*x^3 + 4*x^2 + 8*x + 3;
h:= R! 6*x^4 + 6*x^3 + 4*x^2 + 5*x + 5;
V:= R! 2*x^4 + x^3 + 10*x^2 + 4*x + 8;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x+6;
V1 := R! 3*x^4+4*x^3+8*x^2+2*x;
N1 := 2;
U2 := R! x^3+7*x^2+10*x;
V2 := R! 3*x^4+4*x^3+10*x^2+4*x+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^3*x^6 + FF.1^3*x^5 + FF.1*x^4 + FF.1^2*x^3 + FF.1^6*x + FF.1;
h:= R! FF.1*x^4 + x^3 + FF.1^2*x + FF.1^3;
V:= R! x^4 + FF.1^5*x^3 + FF.1^6*x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+x^2+x+1;
V1 := R! FF.1^6*x^4+FF.1^7*x^3+FF.1^2*x^2+2*x;
N1 := 0;
U2 := R! x;
V2 := R! FF.1^6*x^4+FF.1^7*x^3+FF.1^2*x^2+FF.1^3*x+2;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1*x^7 + x^6 + FF.1*x^5 + x^4 + FF.1*x^3 + x^2;
h:= R! FF.1^2*x^4 + x^3 + x^2 + FF.1^2;
V:= R! FF.1*x^4 + x^2 + x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x+FF.1;
V1 := R! x^4+x^3+x;
N1 := 2;
U2 := R! x^3+FF.1*x^2+FF.1^2*x;
V2 := R! x^4+x^3+FF.1^2*x^2+x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 3*x^7 + 6*x^6 + 4*x^5 + 3*x^4 + 4*x^3 + 2*x^2 + 6*x + 4;
h:= R! 3*x^4 + 4*x^3 + 3*x^2 + 5*x + 5;
V:= R! 5*x^4 + 3*x^3 + 2*x^2 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+6*x^2+4*x+6;
V1 := R! 6*x^4+3*x^2+3*x+2;
N1 := 0;
U2 := R! x^3+6*x^2+5*x+2;
V2 := R! 6*x^4+3*x^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + FF.1^7*x^7 + FF.1^7*x^6 + FF.1^5*x^5 + FF.1^7*x^4 + FF.1*x^3 + x^2 + FF.1^7*x + FF.1^2;
h:= R! FF.1^2*x^4 + 2*x^3 + FF.1^6*x^2 + FF.1*x + FF.1^2;
V:= R! FF.1^5*x^4 + FF.1*x^3 + FF.1^2*x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^6*x+FF.1;
V1 := R! 2*x^4+FF.1^3*x^3+FF.1^7*x^2+FF.1*x+2;
N1 := 0;
U2 := R! x^3+FF.1^2*x+FF.1^7;
V2 := R! 2*x^4+FF.1^3*x^3+2*x^2+2*x+FF.1^3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1^3*x^7 + FF.1*x^6 + FF.1^2*x^5 + FF.1^6*x^4 + FF.1^7*x^3 + FF.1^6*x + FF.1^5;
h:= R! 2*x^4 + x^2 + FF.1^7*x + FF.1^5;
V:= R! FF.1^3*x^4 + FF.1*x^3 + x^2 + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+x^2+FF.1^5*x;
V1 := R! FF.1*x^4+FF.1^5*x^3+x^2+FF.1^5*x+FF.1^3;
N1 := 0;
U2 := R! x^3+x^2+FF.1^2*x+FF.1^2;
V2 := R! FF.1*x^4+FF.1^5*x^3+FF.1^2*x^2+FF.1^5*x+FF.1^7;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^4*x^8 + FF.1*x^6 + x^4 + FF.1^6*x^3 + FF.1*x^2 + FF.1^5*x + 1;
h:= R! FF.1^5*x^4 + FF.1^2*x^3 + FF.1^6*x^2 + FF.1^5;
V:= R! FF.1^4*x^4 + FF.1*x^3 + FF.1^6*x^2 + FF.1^5*x + FF.1^4;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^3*x^2+FF.1*x;
V1 := R! x^4+FF.1^4*x^3+FF.1^2*x^2+FF.1^4*x+FF.1;
N1 := 0;
U2 := R! x^3+FF.1^3*x^2+FF.1^4*x+FF.1^3;
V2 := R! x^4+FF.1^4*x^3+FF.1^4*x^2+FF.1^2*x+FF.1^6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 4*x^7 + 5*x^6 + 5*x^5 + 5*x^3 + 6*x^2 + 10*x + 6;
h:= R! 2*x^3 + 5*x^2 + 8*x + 2;
V:= R! 5*x^4 + 6*x^3 + 2*x^2 + 5*x + 10;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+7*x^2+x+6;
V1 := R! 6*x^4+3*x^3+4*x^2+7*x+6;
N1 := 0;
U2 := R! x^3+7*x^2+3*x+8;
V2 := R! 6*x^4+3*x^3+10*x^2+3*x+7;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1^5*x^7 + x^5 + FF.1^3*x^3 + FF.1^5*x^2 + FF.1^6*x;
h:= R! FF.1^3*x^4 + FF.1^4*x^3 + FF.1^5*x^2 + FF.1^6*x + FF.1^5;
V:= R! FF.1^5*x^4 + x^3 + FF.1^6*x^2 + x + FF.1^4;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^6*x^2+FF.1^4*x+FF.1;
V1 := R! FF.1^2*x^4+FF.1^5*x^3+FF.1^4*x^2+FF.1^2*x+FF.1^6;
N1 := 0;
U2 := R! x^3+FF.1^6*x^2+x;
V2 := R! FF.1^2*x^4+FF.1^5*x^3+FF.1^2*x^2+FF.1^6*x+FF.1^5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1*x^7 + FF.1^7*x^6 + FF.1*x^4 + FF.1*x^3 + FF.1^3*x^2 + FF.1^7*x + FF.1^5;
h:= R! FF.1^5*x^4 + x^3 + FF.1*x^2 + 2*x + FF.1^3;
V:= R! FF.1^2*x^4 + FF.1^5*x^3 + FF.1^6*x^2 + 2*x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+x^2+FF.1*x+FF.1^3;
V1 := R! 2*x^4+FF.1^7*x^3+FF.1^7*x^2+FF.1^5*x+FF.1^6;
N1 := 0;
U2 := R! x^3+x^2+FF.1^6*x+FF.1^6;
V2 := R! 2*x^4+FF.1^7*x^3+FF.1*x^2+FF.1^6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 6*x^7 + 4*x^6 + 6*x^5 + 6*x^4 + 3*x^3 + 2*x^2 + 8*x + 8;
h:= R! 6*x^4 + 7*x^3 + 7*x^2 + 5*x + 6;
V:= R! 7*x^4 + 5*x^3 + 3*x^2 + 8*x + 9;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+5*x^2+10*x+8;
V1 := R! 9*x^4+10*x^3+10*x^2+6*x+4;
N1 := 0;
U2 := R! x^3+5*x^2+4*x+5;
V2 := R! 9*x^4+10*x^3+x^2+6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 8*x^7 + x^6 + 7*x^5 + 2*x^4 + 10*x^3 + 3*x^2 + 7*x;
h:= R! x^3 + 5*x^2 + 10*x + 6;
V:= R! 5*x^4 + 8*x^3 + 8*x^2 + 10*x + 8;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+7*x+1;
V1 := R! 6*x^4+2*x^3+9*x^2+7;
N1 := 0;
U2 := R! x^2+9*x+9;
V2 := R! 6*x^4+2*x^3+9*x^2+5*x+5;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^2*x^7 + FF.1*x^6 + x^4 + FF.1*x^3 + x^2 + FF.1*x + FF.1^2;
h:= R! FF.1*x^4 + FF.1^2*x^3 + FF.1*x^2 + FF.1^2*x;
V:= R! FF.1^2*x^4 + FF.1^2*x^3 + FF.1*x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^2+x;
V1 := R! x^4+FF.1*x+FF.1;
N1 := 0;
U2 := R! x^2+x+1;
V2 := R! x^4+FF.1*x+FF.1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1*x^7 + FF.1*x^5 + FF.1^2*x^3 + x^2;
h:= R! FF.1*x^4 + FF.1^2*x^2 + FF.1*x + FF.1^2;
V:= R! FF.1^2*x^4 + x^3 + FF.1*x^2 + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^2+x;
V1 := R! x^4+x^3+x^2;
N1 := 1;
U2 := R! x^2+FF.1*x;
V2 := R! x^4+x^3+x^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^6*x^8 + FF.1^2*x^7 + FF.1^6*x^6 + FF.1^6*x^5 + FF.1^3*x^4 + FF.1*x^3 + FF.1^6*x^2 + FF.1^5*x + FF.1^7;
h:= R! FF.1^3*x^4 + FF.1^5*x^3 + FF.1*x^2 + FF.1*x + FF.1^7;
V:= R! FF.1^2*x^4 + FF.1^3*x^3 + FF.1*x^2 + FF.1^6*x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^2+2*x;
V1 := R! x^4+FF.1^6*x^3+FF.1*x^2+FF.1^7*x+FF.1^2;
N1 := 1;
U2 := R! x^2+FF.1^3*x+FF.1^2;
V2 := R! x^4+FF.1^6*x^3+FF.1*x^2+FF.1*x+FF.1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 6*x^6 + 4*x^5 + 9*x^4 + 5*x^3 + 4*x^2 + 3*x + 6;
h:= R! x^4 + 10*x^3 + 9*x^2 + 4*x;
V:= R! 3*x^4 + 2*x^3 + 3*x^2 + 6*x + 5;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+10*x+10;
V1 := R! 7*x^4+10*x^3+10*x^2+2*x+9;
N1 := 0;
U2 := R! x^2+2;
V2 := R! 7*x^4+10*x^3+10*x^2+6*x+10;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1*x^7 + FF.1^2*x^6 + FF.1*x^4 + FF.1*x^3 + FF.1*x^2 + FF.1^2;
h:= R! x^4 + x^2 + 1;
V:= R! FF.1^2*x^4 + FF.1*x^3 + FF.1^2*x^2 + FF.1*x;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^2+FF.1*x+FF.1^2;
V1 := R! FF.1*x^4+FF.1*x^3+FF.1*x^2+FF.1*x+FF.1^2;
N1 := 1;
U2 := R! x^2+FF.1^2*x+FF.1;
V2 := R! FF.1*x^4+FF.1*x^3+FF.1*x^2+FF.1*x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 6*x^7 + 6*x^6 + 5*x^5 + 3*x^4 + 2*x^2 + 5*x + 2;
h:= R! x^4 + 3*x^3 + x^2 + 2*x + 2;
V:= R! x^4 + x^3 + 5*x^2 + 4*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+x^2+3*x+3;
V1 := R! 5*x^4+3*x^3+2*x+5;
N1 := 0;
U2 := R! x^2+4*x+2;
V2 := R! 5*x^4+3*x^3+x^2+6*x;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 4*x^7 + 4*x^5 + 6*x^4 + 5*x^3 + 3*x^2 + 4*x + 1;
h:= R! 4*x^4 + 3*x^3 + 6*x^2 + x + 1;
V:= R! 4*x^4 + 4*x^3 + 5*x^2 + x + 6;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+3*x+2;
V1 := R! 6*x^4+3*x^2+x+4;
N1 := 1;
U2 := R! x^2+3*x+2;
V2 := R! 6*x^4+3*x^2+x+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1^5*x^7 + FF.1^2*x^6 + FF.1^2*x^5 + FF.1*x^4 + FF.1^3*x^3 + FF.1*x^2 + FF.1^6*x + FF.1^6;
h:= R! FF.1^3*x^4 + FF.1^6*x^3 + FF.1^4*x^2 + FF.1^6*x + FF.1^2;
V:= R! FF.1*x^4 + FF.1*x^3 + FF.1*x^2 + x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1^4*x;
V1 := R! x^4+FF.1^5*x^3+FF.1^2*x^2+x+1;
N1 := 1;
U2 := R! x^3+FF.1^4*x^2+FF.1^5*x;
V2 := R! x^4+FF.1^5*x^3+FF.1^6*x^2+x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 10*x^7 + 6*x^6 + 3*x^5 + 4*x^4 + 3*x^3 + 9*x^2 + 5*x + 3;
h:= R! 2*x^4 + 5*x^3 + x^2 + 8*x + 8;
V:= R! 4*x^4 + 10*x^3 + 5*x^2 + 10*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+4*x+1;
V1 := R! 5*x^4+7*x^3+5*x^2+10*x+4;
N1 := 1;
U2 := R! x^3+6*x^2+2*x+8;
V2 := R! 5*x^4+7*x^3+9*x^2+10*x+6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^4*x^7 + FF.1^4*x^6 + x^5 + FF.1^6*x^4 + FF.1^2*x^3 + FF.1^6*x^2 + FF.1^6*x + FF.1;
h:= R! FF.1^6*x^4 + FF.1^5*x^3 + FF.1^2*x^2 + FF.1*x + FF.1^4;
V:= R! FF.1^2*x^4 + FF.1^6*x^3 + FF.1*x^2 + x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1^3*x+1;
V1 := R! x^4+FF.1*x^3+FF.1^4*x^2+FF.1^6*x;
N1 := 1;
U2 := R! x^3+FF.1^6*x^2+FF.1^4*x+FF.1;
V2 := R! x^4+FF.1*x^3+FF.1^6*x^2+FF.1^3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + FF.1^7*x^7 + FF.1^3*x^6 + FF.1^7*x^5 + FF.1^7*x^4 + 2*x^3 + x^2 + FF.1^7*x + FF.1^5;
h:= R! 2*x^4 + FF.1^6*x^3 + FF.1^3*x^2 + FF.1^6;
V:= R! FF.1^7*x^4 + FF.1*x^3 + x^2 + FF.1^3*x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^7*x^2+FF.1^5*x;
V1 := R! FF.1^6*x^4+x^3+FF.1^2*x^2+FF.1^6*x+FF.1;
N1 := 0;
U2 := R! x^2+FF.1^3*x+FF.1^3;
V2 := R! FF.1^6*x^4+x^3+FF.1^2*x^2+FF.1^6*x+FF.1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + x^6 + x^5 + x^4 + x^3 + 2*x^2 + 4;
h:= R! 2*x^4 + 2*x^3 + 4*x^2 + x;
V:= R! x^4 + 2*x^3 + x^2 + 4*x;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+x^2+x+1;
V1 := R! 2*x^4+x^3+x^2+2*x+1;
N1 := 0;
U2 := R! x^2+x;
V2 := R! 2*x^4+x^3+2*x+2;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^6*x^8 + FF.1*x^7 + FF.1^7*x^6 + FF.1^6*x^5 + FF.1^3*x^4 + x^3 + FF.1^6*x^2 + FF.1*x + FF.1^3;
h:= R! FF.1^3*x^4 + FF.1*x^3 + 2*x^2 + FF.1^5;
V:= R! FF.1^2*x^4 + FF.1^5*x^3 + 2*x^2 + FF.1^3*x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^2+FF.1*x+FF.1^7;
V1 := R! x^4+2*x^2+x+FF.1;
N1 := 1;
U2 := R! x^3+FF.1*x^2+FF.1^7*x;
V2 := R! x^4+FF.1^6*x^2+FF.1^5*x+FF.1^7;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 2*x^6 + 8*x^5 + 10*x^4 + 9*x^3 + 4*x^2 + 4*x + 4;
h:= R! 9*x^4 + 5*x^3 + 4*x^2 + x + 3;
V:= R! 6*x^4 + 8*x^3 + 5*x^2 + 3*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+9*x^2+8*x+6;
V1 := R! 7*x^4+9*x^3+9*x^2+3*x+3;
N1 := 0;
U2 := R! x^2+3*x+1;
V2 := R! 7*x^4+9*x^3+2*x^2+4*x+7;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 10*x^7 + 4*x^6 + 5*x^5 + 3*x^4 + 5*x^3 + 4*x^2 + 3*x + 1;
h:= R! 4*x^4 + 10*x^3 + 3*x + 9;
V:= R! x^4 + 8*x^2 + 9*x + 10;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+4*x+3;
V1 := R! 6*x^4+x^3+3*x^2+6*x+2;
N1 := 0;
U2 := R! x^2+8*x+2;
V2 := R! 6*x^4+x^3+3*x^2+5*x+5;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + x^6 + x^5 + x^3 + 2*x^2 + 2;
h:= R! 2*x^3 + 2*x^2 + x + 2;
V:= R! x^4 + x^2 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! 1;
V1 := R! 2*x^4+x^3+1;
N1 := 1;
U2 := R! x^2+x;
V2 := R! 2*x^4+x^3+2*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^7*x^8 + FF.1^2*x^7 + 2*x^6 + FF.1^3*x^5 + 2*x^3 + FF.1*x^2 + FF.1^3*x + 2;
h:= R! FF.1^7*x^4 + x^2 + FF.1^5*x;
V:= R! FF.1^2*x^4 + FF.1^2*x^3 + FF.1^6*x^2 + 2*x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x+FF.1^6;
V1 := R! FF.1*x^4+FF.1^6*x^3+FF.1*x^2+FF.1^2*x;
N1 := 0;
U2 := R! x+FF.1;
V2 := R! FF.1*x^4+FF.1^6*x^3+FF.1*x^2+FF.1^2*x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1*x^6 + x^5 + x^4 + FF.1*x^2 + FF.1^2;
h:= R! FF.1*x^4 + FF.1^2*x^3 + FF.1*x + FF.1^2;
V:= R! FF.1^2*x^4 + x^3 + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x+1;
V1 := R! x^4+FF.1*x^3+FF.1*x+1;
N1 := 0;
U2 := R! x+FF.1^2;
V2 := R! x^4+FF.1*x^3+FF.1*x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 4*x^7 + 3*x^6 + x^5 + 2*x^4 + 5*x^3 + x^2 + 2;
h:= R! 2*x^3 + 3*x^2 + 6*x + 2;
V:= R! x^4 + x^3 + 2*x^2 + 6*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x+3;
V1 := R! 6*x^4+4*x^3+2*x^2+2*x+6;
N1 := 0;
U2 := R! x+3;
V2 := R! 6*x^4+4*x^3+2*x^2+2*x+6;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^6 + x^5 + 2*x^4 + x^2 + x;
h:= R! x^3 + 2*x + 2;
V:= R! x^4 + x^3 + x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x;
V1 := R! 2*x^4+x^3+2*x^2+1;
N1 := 0;
U2 := R! x+1;
V2 := R! 2*x^4+x^3+2*x^2+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^5 + x^4 + 2*x^3 + x^2 + 2*x + 1;
h:= R! x^2;
V:= R! x^4 + x^2 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x;
V1 := R! 2*x^4+x^2+2*x+2;
N1 := 0;
U2 := R! x;
V2 := R! 2*x^4+x^2+2*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 4*x^7 + 3*x^6 + x^5 + 2*x^4 + 5*x^3 + x^2 + 2;
h:= R! 2*x^3 + 3*x^2 + 6*x + 2;
V:= R! x^4 + x^3 + 2*x^2 + 6*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x+6;
V1 := R! 6*x^4+4*x^3+2*x^2+2*x+4;
N1 := 0;
U2 := R! x+3;
V2 := R! 6*x^4+4*x^3+2*x^2+2*x+6;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + x^7 + 2*x^5 + x^4 + x^3 + x^2;
h:= R! 4*x^4 + 3*x^3 + 4*x^2 + 2;
V:= R! 2*x^4 + 4*x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x;
V1 := R! 4*x^4+2*x^3+2*x^2;
N1 := 1;
U2 := R! x+3;
V2 := R! 4*x^4+2*x^3+2*x^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + 2*x^6 + 2*x^4 + x^2 + 2;
h:= R! x^3 + 2*x^2 + x + 2;
V:= R! x^4 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x;
V1 := R! 2*x^4+2*x^3+x^2+x+2;
N1 := 0;
U2 := R! x+2;
V2 := R! 2*x^4+2*x^3+x^2+x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + x^6 + x^4 + FF.1*x^2 + FF.1^2*x + FF.1^2;
h:= R! x^4 + FF.1*x + FF.1^2;
V:= R! FF.1^2*x^4 + x^3 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x+FF.1^2;
V1 := R! FF.1*x^4+x^3+FF.1^2*x+1;
N1 := 0;
U2 := R! x+1;
V2 := R! FF.1*x^4+x^3+FF.1^2*x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^4*x^8 + FF.1*x^7 + FF.1^4*x^6 + FF.1^3*x^5 + x^4 + FF.1^4*x^3 + FF.1^2*x^2 + x + FF.1^4;
h:= R! x^4 + FF.1*x^3 + FF.1^5*x^2 + FF.1^2*x + FF.1^5;
V:= R! FF.1^3*x^4 + FF.1^2*x^3 + x^2 + FF.1^5*x + FF.1^4;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x+FF.1;
V1 := R! FF.1*x^4+FF.1^4*x^3+FF.1^4*x^2+FF.1^3*x+FF.1^4;
N1 := 0;
U2 := R! x;
V2 := R! FF.1*x^4+FF.1^4*x^3+FF.1^4*x^2+FF.1^3*x+FF.1^4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^6 + x^4 + x;
h:= R! x^3 + x^2 + 2;
V:= R! x^4 + x^3 + x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+2;
V1 := R! 2*x^4+x^3+x^2+2*x+1;
N1 := 0;
U2 := R! x;
V2 := R! 2*x^4+x^3+x^2+2*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^2*x^7 + FF.1^2*x^5 + FF.1^2*x^4 + FF.1^2*x^3 + FF.1^2*x^2 + x;
h:= R! FF.1*x^4 + FF.1^2*x^3 + FF.1*x^2 + FF.1*x + 1;
V:= R! FF.1^2*x^4 + FF.1^2*x^3 + FF.1^2*x^2 + FF.1^2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x;
V1 := R! x^4+x^2+x+1;
N1 := 2;
U2 := R! x+1;
V2 := R! x^4+x^2+x;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + 2*x^6 + x^4 + x^3 + 2*x^2 + 1;
h:= R! x^2 + x;
V:= R! x^4 + 2*x^3 + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+2;
V1 := R! 2*x^4+x^3+2*x^2+2*x+2;
N1 := 1;
U2 := R! x;
V2 := R! 2*x^4+x^3+2*x^2+2*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^3*x^8 + FF.1^4*x^7 + FF.1*x^6 + FF.1^3*x^4 + x^2 + FF.1^4*x + FF.1^6;
h:= R! FF.1^3*x^4 + x^3 + FF.1^3*x^2 + FF.1^6;
V:= R! FF.1^6*x^4 + x^3 + FF.1*x^2 + FF.1^4*x;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1^6*x+1;
V1 := R! FF.1^4*x^4+x^2+FF.1;
N1 := 0;
U2 := R! x^2+FF.1^6*x;
V2 := R! FF.1^4*x^4+x^2+FF.1^5*x+FF.1^5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 4*x^7 + 2*x^6 + x^4 + 4*x^3 + 2*x^2 + x + 3;
h:= R! x^4 + 2*x^3 + x^2 + 2;
V:= R! x^4 + 4*x^3 + 4*x^2 + 2*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+2*x;
V1 := R! 3*x^4+4*x^3+3*x+2;
N1 := 1;
U2 := R! 1;
V2 := R! 3*x^4+4*x^3+3*x;
N2 := 3;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^6 + x^4 + x^2 + 2*x + 2;
h:= R! 2*x^3 + x^2 + 1;
V:= R! x^4 + 2*x^3 + 2*x^2 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! 1;
V1 := R! 2*x^4+2*x^3+x+2;
N1 := 0;
U2 := R! x^2+2;
V2 := R! 2*x^4+2*x^3+x+2;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + 2*x^5 + x^3 + x;
h:= R! 2*x^2 + x + 1;
V:= R! x^4 + 2*x^3;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! 1;
V1 := R! 2*x^4+x^3+x^2+2*x+2;
N1 := 3;
U2 := R! x^2+2*x;
V2 := R! 2*x^4+x^3+x^2+2*x;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 5*x^7 + 5*x^6 + 3*x^4 + 3*x^3 + 5;
h:= R! 4*x^4 + 3*x^3 + 6*x^2 + 3*x + 3;
V:= R! x^4 + 5*x^3 + 6*x^2 + 6*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+5*x;
V1 := R! 2*x^4+6*x^3+2*x^2+2*x+6;
N1 := 1;
U2 := R! 1;
V2 := R! 2*x^4+6*x^3+2*x^2+5*x;
N2 := 3;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + x^7 + 4*x^6 + 2*x^5 + 2*x^4 + 2*x^3 + x + 3;
h:= R! 3*x^4 + 3*x^3 + 3*x^2 + 2*x + 1;
V:= R! 3*x^4 + 3*x^3 + 3*x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x+4;
V1 := R! 4*x^4+4*x^3+4*x^2+3*x+2;
N1 := 0;
U2 := R! 1;
V2 := R! 4*x^4+4*x^3+4*x^2+3*x+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1*x^5 + x^4 + x^3 + x + FF.1;
h:= R! x^4 + FF.1*x^3 + x^2 + FF.1^2*x + 1;
V:= R! FF.1^2*x^4 + x^3 + x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! 1;
V1 := R! FF.1*x^4+FF.1^2*x^3+x^2+FF.1*x+FF.1;
N1 := 3;
U2 := R! x^2+FF.1*x+FF.1^2;
V2 := R! FF.1*x^4+FF.1^2*x^3+x^2+FF.1*x+FF.1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + FF.1*x^5 + FF.1*x^4 + FF.1^2*x^3 + FF.1^2*x^2 + FF.1*x;
h:= R! x^4 + FF.1*x^3 + 1;
V:= R! FF.1^2*x^4 + FF.1*x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! 1;
V1 := R! FF.1*x^4+FF.1*x^3+FF.1*x+FF.1^2;
N1 := 0;
U2 := R! x+FF.1;
V2 := R! FF.1*x^4+FF.1*x^3+FF.1*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^4*x^8 + FF.1^4*x^7 + FF.1^5*x^6 + FF.1*x^4 + FF.1^6*x^3 + FF.1^5*x^2 + FF.1^2*x + FF.1;
h:= R! FF.1^5*x^4 + FF.1^5*x^3 + FF.1^4*x^2 + FF.1^5*x + FF.1^6;
V:= R! FF.1^4*x^4 + FF.1^3*x^3 + FF.1^3*x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x+FF.1^6;
V1 := R! x^4+FF.1^2*x^3+FF.1^6*x^2+FF.1^4*x+1;
N1 := 0;
U2 := R! 1;
V2 := R! x^4+FF.1^2*x^3+FF.1^6*x^2+FF.1^4*x+FF.1^6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 2*x^6 + 4*x^5 + x^3 + x + 4;
h:= R! 6*x^3 + 2*x^2 + 6*x + 6;
V:= R! 2*x^4 + 4*x^3 + 3*x + 5;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! 1;
V1 := R! 5*x^4+4*x^3+5*x^2+5*x+3;
N1 := 0;
U2 := R! x+3;
V2 := R! 5*x^4+4*x^3+5*x^2+5*x+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^6 + x^4 + x^2;
h:= R! 2*x^3 + x^2 + x + 2;
V:= R! x^4 + 2*x^3 + x^2 + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x;
V1 := R! 2*x^4+2*x^3+x^2+2*x;
N1 := 0;
U2 := R! 1;
V2 := R! 2*x^4+2*x^3+x^2+2*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 6*x^6 + 2*x^5 + 5*x^4 + 4*x^2 + x + 1;
h:= R! 6*x^4 + 4*x^2 + 6*x + 3;
V:= R! 2*x^4 + 4*x^2 + 6*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+5*x^2+2*x+6;
V1 := R! 6*x^4+2*x^2+3*x+3;
N1 := 0;
U2 := R! x^3+4*x^2+x+1;
V2 := R! 6*x^4+3*x^2+4*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 6*x^8 + 3*x^6 + 6*x^5 + 4*x^4 + 5*x^2 + 4*x + 4;
h:= R! 6*x^4 + x^3 + 6*x^2 + 5;
V:= R! 3*x^4 + 5*x^3 + 5*x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+4*x+2;
V1 := R! 5*x^4+x^3+3*x^2+x+3;
N1 := 0;
U2 := R! x^3+5*x^2+2*x+6;
V2 := R! 5*x^4+x^3+3*x^2+x+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + x^7 + 2*x^6 + 2*x^5 + 6*x^4 + x^3 + x^2 + 5*x + 2;
h:= R! 2*x^3 + 6*x^2 + 2*x + 5;
V:= R! 3*x^4 + 5*x^3 + 2*x^2 + 2*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+3*x+2;
V1 := R! 4*x^4+6*x^2+6*x+1;
N1 := 0;
U2 := R! x^3+3*x^2+3*x+2;
V2 := R! 4*x^4+4*x^2+4*x+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1*x^7 + FF.1*x^6 + FF.1^4*x^5 + FF.1^3*x^4 + FF.1*x^3 + FF.1^2*x^2;
h:= R! FF.1^5*x^4 + FF.1^3*x^3 + x^2 + FF.1*x + 1;
V:= R! FF.1^6*x^4 + FF.1^6*x^3 + FF.1^4*x^2 + FF.1^5*x + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^4*x^2+FF.1^3*x;
V1 := R! FF.1*x^4+FF.1^4*x^3+FF.1*x^2+FF.1^4*x;
N1 := 0;
U2 := R! x^2+FF.1^5*x+1;
V2 := R! FF.1*x^4+FF.1^4*x^3+FF.1^5*x^2+x+FF.1^5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1^6*x^6 + FF.1^6*x^5 + FF.1^6*x^4 + x^3 + FF.1^5*x^2 + FF.1^6*x + FF.1^3;
h:= R! FF.1^5*x^3 + FF.1^6*x^2 + FF.1^3*x + FF.1^6;
V:= R! x^4 + FF.1^5*x^3 + FF.1^6*x^2 + FF.1^5*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^6*x+FF.1;
V1 := R! 2*x^4+FF.1^5*x^3+FF.1^7*x^2+FF.1^7*x+FF.1^2;
N1 := 0;
U2 := R! x^2+FF.1^7*x+FF.1^5;
V2 := R! 2*x^4+FF.1^5*x^3+FF.1^6*x^2+FF.1*x+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^5*x^7 + FF.1^2*x^6 + FF.1^3*x^3 + FF.1^4*x^2 + FF.1^5*x + FF.1^4;
h:= R! FF.1^6*x^4 + FF.1^5*x^3 + FF.1^2*x^2 + x + FF.1^6;
V:= R! FF.1^2*x^4 + FF.1^5*x^3 + FF.1^2*x^2 + FF.1^3*x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1^6*x+FF.1^2;
V1 := R! x^4+FF.1^5*x+FF.1^5;
N1 := 0;
U2 := R! x^3+x+1;
V2 := R! x^4+FF.1*x^2+FF.1*x+FF.1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 8*x^7 + 8*x^6 + x^5 + 2*x^4 + 5*x^3 + 9*x^2 + x + 8;
h:= R! 5*x^4 + 5*x^3 + 5*x^2 + 6*x + 1;
V:= R! 8*x^4 + 10*x^3 + 6*x^2 + 5*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+8*x^2+9*x+4;
V1 := R! 9*x^4+7*x^3+4*x^2+2*x+5;
N1 := 0;
U2 := R! x^2+3*x;
V2 := R! 9*x^4+7*x^3+x+5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + x^7 + FF.1^5*x^6 + FF.1^5*x^5 + FF.1*x^4 + FF.1^4*x^3 + FF.1^6*x^2 + FF.1^4*x + FF.1^4;
h:= R! FF.1^6*x^4 + FF.1^4*x^3 + FF.1^4*x^2 + FF.1^3*x + FF.1;
V:= R! FF.1^2*x^4 + FF.1^3*x^3 + FF.1^5*x^2 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^4*x^2+FF.1^3*x;
V1 := R! x^4+FF.1^6*x^3+FF.1^2*x^2+x+FF.1^5;
N1 := 0;
U2 := R! x^2+FF.1^5*x+1;
V2 := R! x^4+FF.1^6*x^3+x^2+FF.1^5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^4*x^8 + FF.1^2*x^7 + FF.1^2*x^6 + FF.1^5*x^5 + FF.1^2*x^4 + FF.1^5*x^3 + FF.1^4*x^2 + FF.1^5*x + FF.1^6;
h:= R! FF.1*x^4 + FF.1^6*x^3 + FF.1*x^2 + FF.1^2*x + FF.1^2;
V:= R! FF.1^6*x^4 + FF.1^2*x^3 + FF.1^6*x^2 + FF.1^6*x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1*x;
V1 := R! FF.1^5*x^4+x^3+FF.1^5*x^2+1;
N1 := 0;
U2 := R! x^3+FF.1^4*x^2+x+FF.1^2;
V2 := R! FF.1^5*x^4+x^3+FF.1^4*x^2+FF.1*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 8*x^8 + 3*x^7 + 2*x^6 + 4*x^5 + 9*x^4 + 4*x^3 + 9*x^2 + 9*x + 2;
h:= R! 9*x^4 + 8*x^3 + 7*x^2 + x + 10;
V:= R! 4*x^4 + 8*x^3 + 9*x + 7;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+5*x+8;
V1 := R! 9*x^4+6*x^3+4*x^2+9*x+8;
N1 := 0;
U2 := R! x^3+2*x^2+6*x+1;
V2 := R! 9*x^4+6*x^3+5*x^2+10*x+10;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 3*x^7 + x^6 + 4*x^4 + x + 2;
h:= R! x^4 + x + 1;
V:= R! x^4 + x^3 + 3*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+4*x;
V1 := R! 3*x^4+4*x^3+x+1;
N1 := 0;
U2 := R! x^2+x+3;
V2 := R! 3*x^4+4*x^3+3*x+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^6 + 2*x^5 + x^4 + 2*x^3 + x^2 + x;
h:= R! 2*x^3 + 2*x^2 + 1;
V:= R! x^4 + 2*x^3 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+2;
V1 := R! 2*x^4+2*x^3+x^2+x+1;
N1 := 1;
U2 := R! x^2+2*x;
V2 := R! 2*x^4+2*x^3+x^2+2*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^6 + 2*x^5 + 2*x^4 + 2*x^3 + 2*x^2 + 2*x;
h:= R! x^3 + 2*x^2 + x;
V:= R! x^4 + x^3 + 2*x^2 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+x;
V1 := R! 2*x^4+x^3+2*x^2+x;
N1 := 0;
U2 := R! x+1;
V2 := R! 2*x^4+x^3+2*x^2+x;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 4*x^7 + 4*x^5 + x^4 + x^2 + 3*x + 4;
h:= R! 4*x^3 + 3*x;
V:= R! 2*x^4 + 4*x^3 + 2*x^2 + x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+4*x^2+3*x;
V1 := R! 3*x^4+2*x^3+3*x^2+x+3;
N1 := 0;
U2 := R! x+3;
V2 := R! 3*x^4+2*x^3+3*x^2+x+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 3*x^7 + 3*x^6 + 4*x^5 + 2*x^3 + x^2 + 4*x + 2;
h:= R! 4*x^3 + 3*x^2 + 4*x;
V:= R! x^4 + 2*x^3 + 4*x^2 + x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+1;
V1 := R! 4*x^4+4*x^3+3*x^2+2*x+1;
N1 := 1;
U2 := R! x+3;
V2 := R! 4*x^4+4*x^3+3*x^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^3*x^8 + FF.1^2*x^7 + FF.1^2*x^6 + FF.1^4*x^5 + FF.1^5*x^4 + FF.1^3*x^2 + FF.1^3*x + FF.1^2;
h:= R! FF.1^4*x^4 + FF.1^4*x^3 + FF.1^2*x^2 + FF.1*x + FF.1^6;
V:= R! FF.1^2*x^4 + FF.1^3*x^3 + x^2 + FF.1^5*x + FF.1^4;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+x+FF.1^4;
V1 := R! FF.1*x^4+FF.1^6*x^3+FF.1^6*x^2+FF.1^3*x+FF.1^4;
N1 := 1;
U2 := R! x;
V2 := R! FF.1*x^4+FF.1^6*x^3+FF.1^6*x^2+FF.1^6*x+1;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 5*x^7 + 6*x^6 + 2*x^5 + 4*x^4 + 5*x^3 + 3*x + 6;
h:= R! 3*x^4 + 3*x^3 + x^2 + 5*x + 5;
V:= R! 5*x^4 + 3*x^3 + 3*x^2 + 4*x;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x;
V1 := R! 6*x^4+x^3+3*x^2+5*x+1;
N1 := 2;
U2 := R! x^2+4*x+3;
V2 := R! 6*x^4+x^3+3*x^2+5*x+1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 4*x^7 + 2*x^6 + 4*x^5 + 2*x^3 + 3*x^2 + 3*x;
h:= R! x^4 + 4*x^3 + 4*x;
V:= R! x^4 + 4*x^2 + 3*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x+2;
V1 := R! 3*x^4+x^3+x^2+3*x+1;
N1 := 1;
U2 := R! x^2+3*x+2;
V2 := R! 3*x^4+x^3+x^2+3*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + x^6 + x^4 + 2*x^3 + x^2 + x + 2;
h:= R! x + 2;
V:= R! x^4 + 2*x^3 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2*x;
V1 := R! 2*x^4+x^3+2*x+2;
N1 := 1;
U2 := R! x+2;
V2 := R! 2*x^4+x^3+x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 6*x^7 + 2*x^6 + 6*x^5 + 5*x^4 + 2*x^3 + 3*x^2 + 2*x + 6;
h:= R! 5*x^4 + x^3 + 3*x^2 + 5*x + 6;
V:= R! 3*x^4 + 6*x^3 + 2*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x+2;
V1 := R! 6*x^4+4*x^2+4;
N1 := 1;
U2 := R! x^3+x^2+5*x;
V2 := R! 6*x^4+x^2+4*x+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^2*x^6 + x^5 + x^4 + x^3 + FF.1*x + FF.1^2;
h:= R! FF.1*x^4 + x^3 + x^2 + FF.1^2*x;
V:= R! FF.1^2*x^4 + FF.1*x^3 + FF.1^2*x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+FF.1^2*x^2+FF.1*x;
V1 := R! x^4+FF.1^2*x^3+FF.1*x^2+FF.1*x+FF.1;
N1 := 0;
U2 := R! x+FF.1^2;
V2 := R! x^4+FF.1^2*x^3+FF.1*x^2+FF.1*x+FF.1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^6 + x^5 + 2*x^4 + x^3 + 2*x^2 + 2*x + 2;
h:= R! 2*x^3 + 2;
V:= R! x^4 + 2*x^3 + x^2 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+2;
V1 := R! 2*x^4+2*x^3+2*x^2+x+1;
N1 := 1;
U2 := R! x^3+2*x;
V2 := R! 2*x^4+2*x^3+2*x^2+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + FF.1^3*x^7 + FF.1^6*x^6 + FF.1^3*x^5 + FF.1*x^4 + FF.1^6*x^3 + x^2 + FF.1^3*x + FF.1^2;
h:= R! FF.1^5*x^4 + FF.1^3*x^3 + FF.1^6*x^2 + FF.1^6*x;
V:= R! FF.1^3*x^4 + FF.1^6*x^3 + FF.1^3*x^2 + FF.1*x + FF.1^3;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x+FF.1;
V1 := R! FF.1^2*x^4+FF.1^4*x^3+FF.1^4*x^2+FF.1^5*x+FF.1^3;
N1 := 1;
U2 := R! x^3+FF.1^6*x^2+FF.1^6*x;
V2 := R! FF.1^2*x^4+FF.1^4*x^3+FF.1^5*x^2+FF.1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + 4*x^6 + 6*x^5 + 5*x^4 + x^3 + 5*x^2 + 3*x;
h:= R! 5*x^4 + 6*x^3 + 3*x^2 + 4;
V:= R! 4*x^4 + 2*x^3 + 3*x^2 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x;
V1 := R! 5*x^4+6*x^3+x^2+5*x;
N1 := 1;
U2 := R! x^2+2*x+4;
V2 := R! 5*x^4+6*x^3+x^2+3*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^2 + x;
h:= R! x^3 + 2*x^2 + x + 2;
V:= R! x^4 + x^3 + x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x;
V1 := R! 2*x^4+x^3+2*x;
N1 := 0;
U2 := R! x^2+2;
V2 := R! 2*x^4+x^3+2*x;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 6*x^7 + x^6 + 5*x^5 + x^4 + 3*x^3 + 3*x^2 + 3*x + 2;
h:= R! 3*x^2 + 5*x + 2;
V:= R! 2*x^4 + 5*x^3 + 3*x^2 + 5*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x+6;
V1 := R! 5*x^4+2*x^3+x^2+4*x+6;
N1 := 1;
U2 := R! x^3+5*x^2+5*x+4;
V2 := R! 5*x^4+2*x^3+x^2+5*x+5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + FF.1^6*x^7 + FF.1^2*x^6 + FF.1*x^5 + x^4 + FF.1^5*x^3 + FF.1^2*x^2 + x + FF.1^6;
h:= R! FF.1^4*x^4 + FF.1*x^2 + FF.1^2*x + FF.1^6;
V:= R! FF.1^5*x^4 + FF.1^2*x^3 + FF.1*x^2 + FF.1^3;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^6*x^2+FF.1^4;
V1 := R! x^4+FF.1^2*x^3+x^2+FF.1^5*x+FF.1;
N1 := 0;
U2 := R! x;
V2 := R! x^4+FF.1^2*x^3+FF.1^2*x+FF.1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^6*x^8 + FF.1^2*x^7 + FF.1*x^6 + FF.1^3*x^5 + FF.1^5*x^3 + x^2 + x + FF.1^5;
h:= R! FF.1^2*x^4 + FF.1^3*x^3 + x^2 + FF.1^2*x + FF.1^6;
V:= R! FF.1^6*x^4 + FF.1^3*x^2 + x + FF.1^6;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1^3*x+FF.1;
V1 := R! x^4+FF.1^3*x^3+FF.1*x^2+FF.1^6*x+FF.1^6;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 3*x^7 + 3*x^6 + 3*x^5 + 3*x^4 + 4*x^3 + 3*x + 3;
h:= R! 3*x^4 + 2*x^3 + 4*x^2 + x + 2;
V:= R! 3*x^4 + 3*x^3 + 4*x^2 + 4*x;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+x^2+3*x;
V1 := R! 4*x^4+2*x^2+2;
N1 := 0;
U2 := R! x^2+2*x;
V2 := R! 4*x^4+2*x^2+2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 5*x^6 + x^5 + x^2 + 5*x + 6;
h:= R! 4*x^3 + 5*x + 6;
V:= R! 2*x^4 + 5*x^3 + 4*x^2 + 3*x + 6;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+4*x^2+3*x;
V1 := R! 5*x^4+5*x^3+4*x^2+2*x+3;
N1 := 0;
U2 := R! x^2+3*x;
V2 := R! 5*x^4+5*x^3+3*x^2+6*x+3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^3*x^8 + FF.1^4*x^5 + FF.1^2*x^4 + FF.1^6*x^3 + x^2 + FF.1^4*x + FF.1^4;
h:= R! FF.1^4*x^4 + FF.1^2*x^3 + FF.1^4*x^2 + FF.1^6*x + FF.1^4;
V:= R! FF.1^2*x^4 + x^3 + FF.1^4*x + FF.1^3;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^5*x^2+FF.1;
V1 := R! FF.1*x^4+FF.1^6*x^3+FF.1^2*x^2+FF.1^5*x+1;
N1 := 0;
U2 := R! x^2+FF.1^6*x+1;
V2 := R! FF.1*x^4+FF.1^6*x^3+FF.1^4*x^2+FF.1^4*x+FF.1^3;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 5*x^7 + 6*x^6 + 2*x^5 + 3*x^4 + 4*x^3 + 3*x^2 + 6*x + 5;
h:= R! 5*x^4 + x^3 + 4*x^2 + x + 1;
V:= R! 4*x^4 + 6*x^3 + 3*x^2 + 2*x + 5;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+6*x^2+5*x+2;
V1 := R! 5*x^4+5*x^2+6*x+5;
N1 := 0;
U2 := R! x^2+5;
V2 := R! 5*x^4+6*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + x^7 + x^5 + FF.1^2*x^4 + FF.1*x^3 + x^2 + FF.1^2*x + 1;
h:= R! FF.1^2*x^4 + FF.1^2*x^3 + FF.1^2*x^2 + x;
V:= R! FF.1*x^4 + FF.1*x^2 + FF.1^2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^2+FF.1^2*x+FF.1;
V1 := R! x^4+FF.1^2*x^3+x^2+FF.1*x+FF.1^2;
N1 := 0;
U2 := R! x^3+FF.1^2*x^2+FF.1*x;
V2 := R! x^4+FF.1^2*x^3+x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + x^6 + x^5 + FF.1^2*x^4 + x^3 + x^2 + FF.1^2*x + FF.1^2;
h:= R! FF.1*x^4 + FF.1^2*x^3 + x^2 + FF.1;
V:= R! FF.1^2*x^4 + x^3 + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+FF.1^2*x^2+FF.1*x;
V1 := R! x^4+FF.1*x^3+FF.1^2;
N1 := 0;
U2 := R! x^2+FF.1*x;
V2 := R! x^4+FF.1*x^3+x^2+FF.1*x+FF.1^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 2*x^7 + 2*x^6 + 3*x^4 + 3*x^2 + 3*x + 2;
h:= R! x^4 + 3*x^2 + 2;
V:= R! x^4 + 4*x^3 + x^2 + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+2*x+2;
V1 := R! 3*x^4+x^3+x^2+4*x+4;
N1 := 0;
U2 := R! x^3+3*x^2+4*x+2;
V2 := R! 3*x^4+x^3+4*x^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + x^5 + FF.1*x^4 + FF.1^2*x^3 + x^2 + FF.1^2*x;
h:= R! FF.1^2*x^4 + FF.1*x^2 + FF.1^2*x + 1;
V:= R! FF.1*x^4 + x^2 + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^2+FF.1*x+FF.1^2;
V1 := R! x^4+FF.1^2*x^2+1;
N1 := 0;
U2 := R! x^3+1;
V2 := R! x^4+x^2+FF.1^2*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 8*x^8 + 3*x^7 + 6*x^6 + 10*x^5 + 8*x^4 + 9*x^3 + 6*x^2 + 7*x + 10;
h:= R! 4*x^4 + 4*x^3 + 5*x^2 + 5*x + 2;
V:= R! 8*x^4 + 9*x^3 + 4*x^2 + 10*x + 6;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+10*x^2+9*x+8;
V1 := R! 10*x^4+9*x^3+4*x^2+3*x+1;
N1 := 0;
U2 := R! x^3+5*x^2+8*x;
V2 := R! 10*x^4+9*x^3+x^2+10*x+10;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 7*x^8 + 5*x^7 + 4*x^6 + 5*x^5 + 4*x^3 + 3*x^2 + 2*x + 5;
h:= R! 6*x^4 + 9*x^2 + x + 1;
V:= R! x^4 + 2*x^3 + 3*x^2 + 5*x + 5;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+x+9;
V1 := R! 4*x^4+9*x^3+10*x^2+7;
N1 := 0;
U2 := R! x^3+3*x^2+x+9;
V2 := R! 4*x^4+9*x^3+8*x^2+2*x+8;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 9*x^8 + 10*x^7 + x^6 + 6*x^5 + 8*x^4 + 6*x^3 + 6*x^2 + 8*x + 3;
h:= R! x^4 + 5*x^3 + x^2 + 5*x + 1;
V:= R! 4*x^4 + 5*x^3 + 10*x^2 + 2*x + 9;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+x+9;
V1 := R! 6*x^4+x^3+3*x^2+3*x+3;
N1 := 0;
U2 := R! x^3+4*x+5;
V2 := R! 6*x^4+x^3+4*x+7;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^3*x^8 + FF.1^4*x^7 + FF.1^5*x^6 + FF.1^2*x^5 + FF.1^2*x^4 + FF.1^4*x^2 + FF.1^4*x + FF.1^6;
h:= R! FF.1*x^4 + FF.1^4*x^3 + FF.1*x^2 + FF.1^4*x + FF.1^2;
V:= R! FF.1^3*x^4 + FF.1^4*x^3 + FF.1^6*x^2 + FF.1^6*x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^4*x+FF.1^6;
V1 := R! x^4+FF.1^4*x^2+FF.1^6*x+FF.1^3;
N1 := 0;
U2 := R! x^3+FF.1^6*x^2+FF.1^2*x;
V2 := R! x^4+FF.1^6*x^2+FF.1^3*x+1;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 8*x^7 + 4*x^5 + 3*x^4 + 10*x^3 + 6*x^2 + 4*x + 5;
h:= R! 7*x^4 + 3*x^3 + 10*x^2 + x + 5;
V:= R! 6*x^4 + 7*x^3 + 3*x^2 + 8*x;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+x^2+x+8;
V1 := R! 9*x^4+x^3+4*x^2+5*x+2;
N1 := 0;
U2 := R! x^3+7*x^2+10*x;
V2 := R! 9*x^4+x^3+5*x^2+6*x+8;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^6*x^8 + FF.1^6*x^7 + x^6 + FF.1^6*x^5 + FF.1^6*x^4 + FF.1^5*x^3 + FF.1^6*x^2 + FF.1^6*x + FF.1^6;
h:= R! FF.1^3*x^4 + FF.1*x^3 + FF.1^6*x^2 + FF.1^6*x + FF.1^5;
V:= R! FF.1^2*x^4 + FF.1^7*x^3 + x^2;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^6*x^2+2*x+FF.1^2;
V1 := R! x^4+FF.1^2*x^3+2*x^2+FF.1^7*x+FF.1^6;
N1 := 0;
U2 := R! x^3+FF.1^2*x^2+x;
V2 := R! x^4+FF.1^2*x^3+x+FF.1^5;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 2*x^7 + 2*x^6 + 6*x^5 + 3*x^4 + 9*x^3 + 6*x + 3;
h:= R! 5*x^4 + 2*x^3 + 8*x^2 + 2*x + 10;
V:= R! 8*x^4 + 3*x^3 + x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+8*x^2+x+2;
V1 := R! 9*x^4+6*x^3+7*x+3;
N1 := 0;
U2 := R! x^2+x+5;
V2 := R! 9*x^4+6*x^3+3*x^2+10*x+7;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + x^7 + 9*x^6 + 3*x^5 + 2*x^4 + 3*x^3 + 5*x^2 + 5*x + 3;
h:= R! 2*x^4 + 2*x^3 + 10*x^2 + 5*x + 10;
V:= R! 4*x^4 + 7*x^3 + 6*x^2 + 7*x + 6;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+5*x^2+4*x+5;
V1 := R! 5*x^4+2*x^3+4*x^2+4*x+3;
N1 := 0;
U2 := R! x^3+9*x^2+6*x+10;
V2 := R! 5*x^4+2*x^3+10*x+10;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + x^4 + x^2 + x;
h:= R! 2*x^3 + x^2 + 1;
V:= R! x^4 + x^2 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^3+2*x;
V1 := R! 2*x^4+x^3+2*x^2;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1*x^7 + FF.1*x^6 + FF.1^2*x^5 + FF.1^2*x^4 + x + FF.1^2;
h:= R! FF.1*x^4 + FF.1^2*x^3 + 1;
V:= R! FF.1^2*x^4 + x^2 + FF.1^2;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x+FF.1;
V1 := R! x^4+FF.1^2*x^3+x^2;
N1 := 2;
U2 := R! x+1;
V2 := R! x^4+FF.1^2*x^3+x^2+FF.1;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + FF.1*x^7 + FF.1^3*x^6 + x^5 + FF.1^5*x^4 + x^3 + x^2 + FF.1*x + 1;
h:= R! FF.1^4*x^4 + FF.1^4*x^3 + FF.1^2*x^2 + x + FF.1^5;
V:= R! FF.1^5*x^4 + x^3 + FF.1^2*x^2 + FF.1*x + FF.1^4;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^3*x^2+FF.1^2;
V1 := R! x^4+FF.1^5*x^3+FF.1^6*x+FF.1^3;
N1 := 0;
U2 := R! x^2+FF.1^5*x;
V2 := R! x^4+FF.1^5*x^3+FF.1^6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + x^6 + x^5 + 2*x^4 + 2*x^2 + 2*x + 1;
h:= R! 2*x;
V:= R! x^4 + x^3 + x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+1;
V1 := R! 2*x^4+2*x^3+1;
N1 := 2;
U2 := R! x;
V2 := R! 2*x^4+2*x^3+2;
N2 := 2;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^6*x^8 + x^7 + FF.1^3*x^6 + FF.1^2*x^5 + x^3 + FF.1*x^2 + FF.1^3*x + FF.1^4;
h:= R! FF.1^2*x^4 + FF.1^4*x^3 + FF.1^5*x^2 + x + FF.1;
V:= R! FF.1^6*x^4 + FF.1^6*x^3 + FF.1^5*x^2 + FF.1*x + FF.1;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^6*x^2+FF.1^6*x;
V1 := R! x^4+FF.1^3*x^3+FF.1^6*x^2+FF.1^6*x+FF.1^5;
N1 := 0;
U2 := R! x^2+FF.1^6*x+FF.1^6;
V2 := R! x^4+FF.1^3*x^3+FF.1*x;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^7 + 2*x^5 + 2*x^4 + x^2 + 2*x + 1;
h:= R! x^2;
V:= R! x^4 + 2*x^3 + 2*x^2 + 2*x;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x;
V1 := R! 2*x^4+x^3+x+1;
N1 := 0;
U2 := R! x;
V2 := R! 2*x^4+x^3+x+1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 2*x^7 + 3*x^6 + 3*x^5 + 2*x^4 + 3*x^2 + 2*x + 1;
h:= R! 4*x^4 + 3*x^3 + 3*x + 3;
V:= R! 2*x^4 + 2*x^3 + x^2 + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x+3;
V1 := R! 4*x^4+4*x^2+2*x+4;
N1 := 1;
U2 := R! x+3;
V2 := R! 4*x^4+4*x^2+2*x+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + x^7 + 3*x^6 + x^5 + x^4 + 3*x^3 + 2*x^2 + 4;
h:= R! 4*x^4 + 3*x^3 + 2*x^2 + 4;
V:= R! 2*x^4 + 3*x^2 + 4*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x+3;
V1 := R! 4*x^4+2*x^3+x+4;
N1 := 1;
U2 := R! x+3;
V2 := R! 4*x^4+2*x^3+x+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + 2*x^6 + x^5 + 2*x^4 + x^3 + 2*x^2 + 1;
h:= R! x^2 + 1;
V:= R! x^4 + x^3 + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x+2;
V1 := R! 2*x^4+2*x^3+2*x^2;
N1 := 1;
U2 := R! x+2;
V2 := R! 2*x^4+2*x^3+2*x^2;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 6*x^6 + 4*x^5 + 6*x^4 + 6*x^3 + 3*x^2 + 2*x + 5;
h:= R! 2*x^4 + 6*x^3 + 6*x^2 + 3*x + 4;
V:= R! x^4 + 2*x^3 + 3*x^2 + 2*x + 3;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+2*x;
V1 := R! 4*x^4+6*x^3+5*x^2+x+1;
N1 := 0;
U2 := R! x^2+4*x+2;
V2 := R! 4*x^4+6*x^3+5*x^2+6*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 3*x^6 + 2*x^3 + 4*x;
h:= R! x^3 + x^2 + 2*x;
V:= R! x^4 + 2*x^3 + 3*x^2 + 3*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^2+2*x+2;
V1 := R! 4*x^4+2*x^3+x^2+x+2;
N1 := 0;
U2 := R! x^2+2*x;
V2 := R! 4*x^4+2*x^3+x^2+4*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1*x^8 + 2*x^7 + 2*x^6 + FF.1^5*x^5 + FF.1^7*x^2 + FF.1^2*x;
h:= R! 2*x^4 + FF.1^5*x^2 + 2*x + FF.1;
V:= R! FF.1^7*x^4 + FF.1^7*x^3 + FF.1^5*x^2 + FF.1^7*x + FF.1^5;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^2+FF.1^6*x+FF.1;
V1 := R! FF.1^6*x^4+FF.1^3*x^3+FF.1^5*x^2+FF.1^6*x;
N1 := 0;
U2 := R! x^2+FF.1*x;
V2 := R! FF.1^6*x^4+FF.1^3*x^3+FF.1^5*x^2+FF.1*x;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + x^6 + x^5 + x^2 + 2;
h:= R! x^3 + 2*x + 1;
V:= R! x^4 + x^3 + x^2 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x;
V1 := R! 2*x^4+x^3+2*x^2+1;
N1 := 0;
U2 := R! x+2;
V2 := R! 2*x^4+x^3+2*x^2+1;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 6*x^6 + 4*x^5 + 5*x^4 + 8*x^3 + 4*x^2 + 7*x + 9;
h:= R! x^4 + 10*x^3 + 6*x^2 + x + 10;
V:= R! x^4 + 4*x^3 + 7*x^2 + 6*x + 4;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^3+6*x^2+5*x;
V1 := R! 9*x^4+8*x^3+7*x^2+7;
N1 := 0;
U2 := R! x^2+x;
V2 := R! 9*x^4+8*x^3+9*x^2+2*x+7;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^2*x^6 + FF.1*x^5 + x^3 + FF.1^2*x^2 + FF.1;
h:= R! FF.1*x^4 + FF.1^2*x^2 + FF.1*x + FF.1^2;
V:= R! FF.1^2*x^4 + FF.1^2*x^2 + FF.1*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+1;
V1 := R! x^4+x+FF.1^2;
N1 := 0;
U2 := R! x^2+x+1;
V2 := R! x^4+x+FF.1^2;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 5*x^8 + 2*x^7 + 3*x^6 + 8*x^5 + 8*x^4 + 3*x^3 + 6*x^2 + x + 8;
h:= R! 6*x^4 + 3*x^3 + x^2 + 7*x + 6;
V:= R! 2*x^4 + 4*x^3 + 5*x^2 + 10*x + 7;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+8*x+4;
V1 := R! 3*x^4+4*x^3+5*x^2+5*x+3;
N1 := 1;
U2 := R! x^3+7*x^2+7*x+7;
V2 := R! 3*x^4+4*x^3+8*x^2+8*x+9;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 4*x^8 + 2*x^7 + x^6 + 4*x^5 + 5*x^3 + 6*x^2 + 5;
h:= R! 4*x^3 + 5*x^2 + 2*x + 3;
V:= R! 2*x^4 + 2*x^3 + x + 6;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^2+4*x;
V1 := R! 5*x^4+x^3+2*x^2+x+5;
N1 := 1;
U2 := R! x^3+6*x^2+x;
V2 := R! 5*x^4+x^3+x^2+6*x+6;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + FF.1*x^7 + FF.1*x^6 + FF.1^4*x^5 + x^4 + FF.1^5*x^3 + FF.1^6*x^2 + FF.1*x + FF.1^5;
h:= R! FF.1^4*x^4 + FF.1^2*x^3 + x + FF.1;
V:= R! FF.1^5*x^4 + FF.1^6*x^3 + FF.1*x^2 + FF.1^4*x;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^3+FF.1^4*x+FF.1^6;
V1 := R! x^4+x^3+FF.1^2*x^2+FF.1*x+FF.1^2;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(7);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + x^7 + 2*x^6 + 5*x^5 + 5*x^4 + x^3 + 6*x^2 + 6;
h:= R! 5*x^4 + 4*x^3 + x^2 + 3*x + 1;
V:= R! 3*x^4 + 6*x^3 + 4*x^2 + 6*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,7);

U1 := R! x^3+x^2+5*x;
V1 := R! 6*x^4+4*x^3+5*x^2+5*x+2;
N1 := 0;
U2 := R! x^2+4*x+3;
V2 := R! 6*x^4+4*x^3+2*x^2+4;
N2 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(5);
R<x>:=PolynomialRing(FF);
f:= R! 3*x^8 + 2*x^7 + 4*x^6 + 4*x^3 + 4*x + 1;
h:= R! 2*x^4 + 2*x^3 + x^2 + 3*x + 1;
V:= R! x^4 + 2*x^2 + 2*x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,5);

U1 := R! x^3+x;
V1 := R! 2*x^4+3*x^3+x^2+3*x+2;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^3*x^6 + FF.1^3*x^5 + FF.1*x^4 + FF.1^2*x^3 + FF.1^6*x + FF.1;
h:= R! FF.1*x^4 + x^3 + FF.1^2*x + FF.1^3;
V:= R! x^4 + FF.1^5*x^3 + FF.1^6*x^2 + x;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+x^2+x+1;
V1 := R! FF.1^6*x^4+FF.1^7*x^3+FF.1^2*x^2+2*x;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(11);
R<x>:=PolynomialRing(FF);
f:= R! 2*x^8 + 10*x^7 + 5*x^6 + 5*x^5 + 2*x^3 + 3*x^2 + 6*x;
h:= R! 9*x^4 + 9*x^3 + 7*x^2 + 5*x + 5;
V:= R! 6*x^4 + 4*x^2 + 6*x + 7;
Vn:= -V - h;
ccs:= Precompute(f,h,11);

U1 := R! x^2+4*x+6;
V1 := R! 7*x^4+2*x^3+x+10;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^2*x^8 + FF.1^2*x^7 + FF.1^2*x^6 + FF.1*x^4 + FF.1^2*x^3 + x^2 + x + 1;
h:= R! FF.1*x^4 + FF.1*x^3 + FF.1^2*x^2 + FF.1^2*x;
V:= R! FF.1^2*x^4 + x^3 + x^2 + FF.1*x;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+FF.1*x^2+FF.1^2*x;
V1 := R! x^4+FF.1^2*x^3+x^2+1;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(3);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + 2*x^7 + 2*x^5 + x^4 + 2*x^3 + x^2 + 1;
h:= R! x^2 + 2*x;
V:= R! x^4 + x^3 + 2*x^2 + 2*x + 2;
Vn:= -V - h;
ccs:= Precompute(f,h,3);

U1 := R! x^2+2*x;
V1 := R! 2*x^4+2*x^3+2*x+1;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(8);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + FF.1^5*x^6 + x^5 + FF.1^2*x^4 + FF.1^2*x^3 + x^2 + FF.1^4*x;
h:= R! FF.1^5*x^4 + FF.1^6*x^3 + FF.1^4*x^2 + FF.1^2*x + FF.1^2;
V:= R! FF.1^3*x^4 + FF.1^4*x^3 + x^2 + FF.1^2*x + FF.1^5;
Vn:= -V - h;
ccs:= Precompute(f,h,8);

U1 := R! x^2+FF.1^4*x+FF.1^3;
V1 := R! FF.1^2*x^4+FF.1^3*x^3+FF.1^5*x^2+FF.1*x+FF.1^3;
N1 := 1;
U2 := R! x^2+FF.1*x+FF.1^6;
V2 := R! FF.1^2*x^4+FF.1^3*x^3+FF.1^5*x^2+FF.1^4*x+FF.1^6;
N2 := 1;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
D2 := <U2, V2, N2>;
AD2 := AdaptedBasis(D2,f,h);
un3,un2,un1,un0,vn2,vn1,vn0, nN := ADD(U1,V1,N1,U2,V2,N2,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Add(AD1,AD2,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(9);
R<x>:=PolynomialRing(FF);
f:= R! FF.1^5*x^8 + x^7 + FF.1^2*x^6 + FF.1*x^5 + FF.1^6*x^4 + FF.1*x^3 + FF.1^5*x^2 + FF.1^5*x + FF.1^7;
h:= R! FF.1^2*x^4 + FF.1^7*x^3 + FF.1^5*x^2 + FF.1^3*x + FF.1^5;
V:= R! FF.1^5*x^4 + FF.1*x^3 + x^2 + x + FF.1^3;
Vn:= -V - h;
ccs:= Precompute(f,h,9);

U1 := R! x^3+FF.1^7*x^2+2*x+FF.1^3;
V1 := R! 2*x^4+FF.1^2*x^3+FF.1*x^2+x+FF.1^3;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

FF := GF(4);
R<x>:=PolynomialRing(FF);
f:= R! x^8 + FF.1^2*x^7 + FF.1*x^6 + FF.1^2*x^5 + FF.1*x^4 + FF.1^2*x^3 + x;
h:= R! x^4 + FF.1^2*x + FF.1;
V:= R! FF.1^2*x^4 + FF.1^2*x^3 + x + 1;
Vn:= -V - h;
ccs:= Precompute(f,h,4);

U1 := R! x^3+FF.1^2*x^2+FF.1*x;
V1 := R! FF.1*x^4+FF.1^2*x^3+x^2+FF.1*x;
N1 := 0;
D1 := <U1, V1, N1>;
AD1 := AdaptedBasis(D1,f,h);
un3,un2,un1,un0,vn2,vn1,vn0,nN := DBL(U1,V1,N1,ccs);
nU:= R! un3*x^3 + un2*x^2 + un1*x^1 + un0*x^0;
nV:= R! Coeff(Vn,4)*x^4 + Coeff(Vn,3)*x^3 + vn2*x^2 + vn1*x^1 + vn0*x^0;
Cantor:= NegativeReducedBasis(Double(AD1,f,h,V),f,h);
assert <nU,nV,nN> eq Cantor;

"
Total Cases: 405";
quit;